{"version":3,"sources":["reportWebVitals.js","components/Header.js","components/Footer.js","firebase.js","context/Productcontext.js","components/Home.js","context/FBService.js","context/UserAuthContext.js","components/Login.js","components/Signup.js","components/UserProfile.js","components/Customerheader.js","components/Dashboard.js","components/Adminheader.js","context/CheckoutServices.js","context/ReviewContext.js","components/Reviews.js","components/AdminDashboard.js","components/SellerHeader.js","components/HeaderSwitcher.js","context/Cartcontext.js","context/Wishlistcontext.js","components/Furnitures.js","components/Homewares.js","components/Cart.js","components/Wishlist.js","components/Electricalgoods.js","components/AboutUs.js","components/ReturnRefundPolicy.js","context/Contactusservice.js","components/ContactUs.js","components/Addproducts.js","components/ProtectedRoute.js","components/Checkout.js","components/ManageUsers.js","components/SellerDashboard.js","components/ManageProduct.js","components/MyListing.js","components/Orders.js","components/SellerQueries.js","components/BeSeller.js","components/CustomerOrders.js","components/Allproducts.js","components/Otherproducts.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Header","React","createElement","Navbar","expand","className","Container","Brand","href","style","marginTop","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Link","Button","variant","Footer","data-bs-theme","height","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","ProductContext","createContext","ProductContextProvider","children","products","setProducts","useState","orders","setOrders","useEffect","async","productsArray","getDocs","collection","docs","map","doc","data","console","log","e","error","fetchProducts","ordersArray","fetchOrders","Provider","value","addProduct","product","newProduct","addDoc","prevProducts","updateProduct","productId","updatedProduct","deleteProduct","deleteDoc","filter","updateOrderStatus","orderId","status","orderRef","updateDoc","prevOrders","order","useProductcontext","useContext","Home","trendingProducts","setTrendingProducts","selectedProduct","setSelectedProduct","show","setShow","image","setImage","length","shuffled","sort","Math","random","slice","imageRef","ref","url","getDownloadURL","fetchImage","handleClose","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","Row","src","alt","Col","md","key","Slider","imageUrls","index","productName","objectFit","borderRadius","productPrice","productDescription","onClick","handleShow","Modal","onHide","closeButton","Title","Body","Carousel","productDetailedDescription","sellerUsername","constructor","addData","newData","setData","setDoc","updateData","docRef","deleteData","getAllData","usersCollection","getData","getDoc","userAuthContext","UserAuthContextProvider","user","setUser","role","setRole","loading","setLoading","unsubscribe","onAuthStateChanged","currentUser","userDoc","FBDataService","uid","exists","logIn","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","logOut","signOut","googleSignIn","googleAuthProvider","GoogleAuthProvider","signInWithPopup","useUserAuth","Login","setEmail","setPassword","setError","navigate","useNavigate","handleRoleBasedRedirect","userRole","Fragment","Alert","Form","onSubmit","preventDefault","userCredential","err","message","Group","controlId","Control","type","placeholder","onChange","target","GoogleButton","to","Signup","confirmPassword","setConfirmPassword","name","setName","mobile","setMobile","username","setUsername","createdAt","Date","toISOString","required","UserProfile","userProfile","setUserProfile","showModal","setShowModal","updatedProfile","setUpdatedProfile","fetchUserProfile","handleChange","handleEdit","width","Label","CustomerHeader","borderColor","Dashboard","userName","setUserName","userData","fetchUserName","AdminHeader","backgroundImage","checkoutCollectionRef","addCheckout","newCheckout","userId","paymentId","getAllCheckouts","getCheckout","checkoutDoc","ReviewContext","ReviewProvider","reviews","setReviews","fetchAllReviews","allReviews","Reviews","showReviews","setShowReviews","size","Table","striped","bordered","hover","review","content","customerName","seconds","toLocaleDateString","AdminDashboard","totalServerFees","setTotalServerFees","totalProductsSold","setTotalProductsSold","querySnapshot","CheckoutService","totalFees","totalProducts","forEach","checkoutData","serverFee","parseFloat","itemsSold","items","toFixed","fetchCheckoutData","SellerHeader","HeaderSwitcher","CartContext","CartContextProvider","cartItems","setCartItems","docSnap","fetchCartItems","addToCart","alert","displayName","newCartItem","existingItems","some","item","updatedItems","removeFromCart","useCartContext","WishlistContext","WishlistContextProvider","wishlist","setWishlist","fetchWishlist","addToWishlist","newWishlistItem","removeFromWishlist","useWishlistContext","Furnitures","filteredProducts","setFilteredProducts","similarProducts","setSimilarProducts","searchTerm","setSearchTerm","sortOption","setSortOption","q","query","where","sortedProducts","a","b","fetchSimilarProducts","category","handleAddToCart","event","toLowerCase","filtered","_product$sellerUserna","includes","maxWidth","margin","backgroundColor","scrollable","maxHeight","overflowY","ReactImageMagnify","smallImage","isFluidWidth","largeImage","enlargedImagePosition","isHintEnabled","handleAddToWishlist","color","Homewares","sortOrder","setSortOrder","handleProductClick","Cart","selectedProductIds","setSelectedProductIds","totalPrice","setTotalPrice","total","p","reduce","sum","Card","Img","Text","handleBuyNow","prevSelected","handleCheckout","selectedProducts","sellerId","state","disabled","Wishlist","Electricalgoods","sortProducts","AboutUs","ReturnAndRefundPolicy","policyImage","setPolicyImage","contactCollectionRef","addContact","newContact","getAllContacts","getContact","contactDoc","ContactUs","subject","setSubject","setMessage","feedback","setFeedback","msg","dismissible","onClose","contactData","Contactusservice","InputGroup","as","rows","Addproducts","setProductName","setProductDescription","setProductDetailedDescription","setProductPrice","setCategory","images","setImages","setImageUrls","progress","setProgress","successMessage","setSuccessMessage","Error","Number","split","sellerEmail","setTimeout","files","multiple","handleImageUpload","uploadPromises","storageRef","uploadTask","uploadBytesResumable","Promise","resolve","reject","on","snapshot","round","bytesTransferred","totalBytes","downloadURL","prev","all","urls","catch","max","AdminRoute","_ref2","Navigate","SellerRoute","_ref3","CustomerRoute","_ref4","Checkout","_location$state","discountCode","setDiscountCode","appliedDiscount","setAppliedDiscount","cardNumber","setCardNumber","address","setAddress","city","setCity","region","setRegion","zipCode","setZipCode","country","setCountry","subTotal","setSubTotal","discount","setDiscount","setServerFee","totalCost","setTotalCost","showErrorModal","setShowErrorModal","missingFields","setMissingFields","useLocation","subtotal","acc","serverValue","discountCodes","handleSubmit","push","char","String","fromCharCode","charCodeAt","join","simpleEncrypt","maxLength","handleApplyDiscount","discountPercentage","toUpperCase","discountValue","newTotalCost","handleRemoveDiscount","formattedValue","replace","handleCardNumberChange","textAlign","field","ManageUsers","customers","setCustomers","sellers","setSellers","searchQuery","setSearchQuery","users","fetchUsers","handleRoleChange","newRole","userToUpdate","find","prevCustomers","prevSellers","handleDeleteUser","filteredCustomers","filteredSellers","FormControl","Select","SellerDashboard","totalEarnings","setTotalEarnings","fetchEarningsData","price","fetchUserData","ManageProducts","productList","setProductList","currentProduct","setCurrentProduct","categories","handleDelete","handleSave","MyListings","sellerProducts","setSellerProducts","showEditModal","setShowEditModal","showDetailsModal","setShowDetailsModal","handleProductDetailsClick","handleEditClick","handleDeleteClick","Orders","sellerOrders","setSellerOrders","filteredOrders","itemIndex","matchedCheckout","checkout","itemDetails","profit","cursor","handleStatusChange","SellerQueries","queries","setQueries","queriesArray","fetchQueries","reason","submittedAt","toLocaleString","imageUrl","userRef","prevQueries","handleApprove","queryId","handleDecline","BeSeller","setReason","uploadBytes","sellerQuery","accept","CustomerOrders","customerOrders","setCustomerOrders","selectedProductForReview","setSelectedProductForReview","showReviewModal","setShowReviewModal","reviewContent","setReviewContent","ordersQuery","userOrders","orderIndex","handleLeaveReview","trim","AllProducts","OtherProducts","App","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.d912c6b2.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","  import React from 'react';\r\n  import Container from 'react-bootstrap/Container';\r\n  import Nav from 'react-bootstrap/Nav';\r\n  import Navbar from 'react-bootstrap/Navbar';\r\n  import NavDropdown from 'react-bootstrap/NavDropdown';\r\n  import Button from 'react-bootstrap/Button';\r\n  import '../css/Header.css';  // Ensure this file includes your CSS class\r\n\r\n  function Header() {\r\n    return (\r\n      <Navbar expand=\"lg\" className='Header' >\r\n        <Container className='Navbar'>\r\n          <Navbar.Brand href=\"/\" className=\"protest-guerrilla-regular\" style={{marginTop: 8}}>\r\n            Eco Shop\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"navbar-toggler\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Otherproducts\">Other products</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n              <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n          \r\n              \r\n              <Nav.Link href=\"/login\">\r\n                <Button variant=\"outline-light\" className=\"login-button\">\r\n                  Login\r\n                </Button>\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/signup\">\r\n                <Button variant=\"light\" className=\"signup-button\">\r\n                  Signup\r\n                </Button>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\nexport default Header;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport '../css/Footer.css'; // Ensure this file includes necessary styles\r\n\r\nfunction Footer() {\r\n    return (\r\n        <Navbar data-bs-theme='dark' style={{ height: '80px' }} className='Footer'>\r\n            <Container className=\"d-flex flex-column align-items-center\">\r\n                <Nav className=\"mx-auto mb-3\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/aboutus\" title=\"Learn more about us\">About Us</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/return-refund-policy\" title=\"View our return and refund policy\">Return & Refund Policy</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/contactus\" title=\"Get in touch with us\">Contact Us</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/beseller\" title=\"Become a seller on Eco Shop\">Be Seller</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <p className=\"Copyright\">Copyright &copy; 2024 Eco Shop</p>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA8rjGG3MIYtDjSnZRDaIKnCD6l46ybW-Y\",\r\n  authDomain: \"eco-shop-60df7.firebaseapp.com\",\r\n  projectId: \"eco-shop-60df7\",\r\n  storageBucket: \"eco-shop-60df7.appspot.com\",\r\n  messagingSenderId: \"292693377073\",\r\n  appId: \"1:292693377073:web:3a88b142c8a2889242d510\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\n// Initialize Firestore and get a reference to the service\r\nexport const db = getFirestore(app);\r\nexport const storage =  getStorage(app);\r\nexport default app;\r\n","import React from 'react';\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, getDocs, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst ProductContext = createContext();\r\n\r\nexport function ProductContextProvider({ children }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"products\"));\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        console.log(\"Fetched Products:\", productsArray);\r\n        setProducts(productsArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching products:\", e);\r\n      }\r\n    };\r\n\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"checkout\"));\r\n        const ordersArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setOrders(ordersArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching orders:\", e);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  async function addProduct(product) {\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"products\"), product);\r\n      const newProduct = {\r\n        id: docRef.id,\r\n        ...product,\r\n      };\r\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n    } catch (e) {\r\n      console.error(\"Error adding product:\", e);\r\n    }\r\n  }\r\n\r\n  function updateProduct(productId, updatedProduct) {\r\n    setProducts((prevProducts) =>\r\n      prevProducts.map((product) =>\r\n        product.id === productId ? { ...product, ...updatedProduct } : product\r\n      )\r\n    );\r\n  }\r\n\r\n  async function deleteProduct(productId) {\r\n    try {\r\n      await deleteDoc(doc(db, \"products\", productId));\r\n      setProducts((prevProducts) =>\r\n        prevProducts.filter((product) => product.id !== productId)\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error deleting product:\", e);\r\n    }\r\n  }\r\n\r\n  async function updateOrderStatus(orderId, status) {\r\n    try {\r\n      const orderRef = doc(db, \"checkout\", orderId);\r\n      await updateDoc(orderRef, { status });\r\n      setOrders((prevOrders) =>\r\n        prevOrders.map((order) =>\r\n          order.id === orderId ? { ...order, status } : order\r\n        )\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error updating order status:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{ products, addProduct, updateProduct, deleteProduct, orders, updateOrderStatus }}\r\n    >\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useProductcontext() {\r\n  return useContext(ProductContext);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Carousel from 'react-bootstrap/Carousel';  // Import Carousel for product image slides\r\nimport Header from './Header';  \r\nimport Footer from './Footer';  \r\nimport { useProductcontext } from '../context/Productcontext'; // Import the ProductContext to access product data\r\nimport Slider from 'react-slick'; // Import Slick Carousel for product image slides\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\nimport '../css/Home.css';\r\nimport { getDownloadURL, getStorage, ref } from 'firebase/storage';\r\n\r\nfunction Home() {\r\n  const { products } = useProductcontext(); // Retrieve all products from the ProductContext\r\n  const [trendingProducts, setTrendingProducts] = useState([]); // State to store trending products\r\n  const [selectedProduct, setSelectedProduct] = useState(null); // State to manage the currently selected product for modal\r\n  const [show, setShow] = useState(false); // State to control the visibility of the modal\r\n  const [image, setImage] = useState(\"\"); // State to store the URL of the banner image\r\n\r\n  // Initialize Firebase Storage\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Shuffle and select the top 3 products as trending\r\n    if (products.length > 0) {\r\n      const shuffled = [...products].sort(() => 0.5 - Math.random());\r\n      setTrendingProducts(shuffled.slice(0, 3));\r\n    }\r\n  }, [products]);\r\n\r\n  useEffect(() => {\r\n    // Fetch the banner image URL from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        const imageRef = ref(storage, \"images/EcoShop.png\"); // Path to the banner image\r\n        const url = await getDownloadURL(imageRef); // Get the image URL\r\n        setImage(url); // Set the URL to state\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error); // Handle any errors\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, []);\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product); // Set the selected product for the modal\r\n    setShow(true); // Show the modal\r\n  };\r\n\r\n  const handleClose = () => setShow(false); // Hide the modal\r\n\r\n  const sliderSettings = {\r\n    dots: true, // Show navigation dots\r\n    infinite: true, // Enable infinite scrolling\r\n    speed: 100, // Speed of transition\r\n    slidesToShow: 1, // Show one slide at a time\r\n    slidesToScroll: 1, // Scroll one slide at a time\r\n    autoplay: true, // Enable autoplay\r\n    autoplaySpeed: 3000, // Autoplay interval\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header /> {/* Render the header component */}\r\n      <Container className='Home'>\r\n        <Row className=\"align-items-center mt-5\">\r\n          <div className=\"image-section\">\r\n            {/* Display the fetched banner image */}\r\n            {image ? (\r\n              <img src={image} alt=\"EcoShop\" className=\"image\" />\r\n            ): (\r\n              <p>Loading Image...</p> // Show a loading message if image is not yet available\r\n            )}\r\n          </div>\r\n          <Col md={8} className='d-flex align-items-center justify-content-center'>\r\n            <h3 className=\"text-end\">\r\n              If you're ever in the market for any furniture, \r\n              <br />\r\n              homewares, electrical goods, and more,\r\n              <br />\r\n              make the Eco Shop your first-stop shop!!!!!\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <br/>\r\n        <Row>\r\n          <h4>Trending Products</h4>\r\n          {trendingProducts.map(product => (\r\n            <Col key={product.id} md={4} className=\"mb-4\">\r\n              <div className=\"card text-center\">\r\n                <Slider {...sliderSettings}>\r\n                  {product.imageUrls && product.imageUrls.map((url, index) => (\r\n                    <div key={index}>\r\n                      <img \r\n                        src={url} \r\n                        alt={product.productName} \r\n                        className=\"card-img-top\" \r\n                        style={{\r\n                          height: '200px',\r\n                          objectFit: 'cover',\r\n                          borderRadius: '5px'\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </Slider>\r\n                <div className=\"card-body\">\r\n                <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                  <h5 className=\"card-title mt-3\">{product.productName}</h5>\r\n                 <p className=\"card-text\">{product.productDescription}</p>\r\n                 \r\n                  <Button \r\n                    variant=\"warning\"\r\n                    onClick={() => handleShow(product)} // Show the product details modal\r\n                  >\r\n                    View Details\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Footer /> {/* Render the footer component */}\r\n\r\n      {/* Modal for displaying product details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <img \r\n                      className=\"d-block w-100\"\r\n                      src={url} \r\n                      alt={`Product ${index + 1}`} \r\n                      style={{\r\n                        height: '300px', \r\n                        objectFit: 'cover', \r\n                        borderRadius: '5px' \r\n                      }} \r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <p>{selectedProduct.productDescription}</p>\r\n            <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n            <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n            <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"warning\" onClick={() => console.log(\"Add to Wishlist clicked!\")}>\r\n              Add to Wishlist\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => console.log(\"Add to Cart clicked!\")}>\r\n              Add to Cart\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { db } from \"../firebase\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nconst collectionName = \"users\";\r\n\r\nclass FBDataService {\r\n  addData = (newData) => {\r\n    return addDoc(collection(db, collectionName), newData);\r\n  };\r\n\r\n  setData = (newData) => {\r\n    return setDoc(doc(db, collectionName, newData.id), newData);\r\n  };\r\n\r\n  updateData = (id, newData) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return updateDoc(docRef, newData);\r\n  };\r\n  \r\n  deleteData = (id) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return deleteDoc(docRef);\r\n  };\r\n\r\n  getAllData = async () => {\r\n    const usersCollection = collection(db, collectionName);\r\n    return await getDocs(usersCollection);\r\n  };\r\n\r\n  getData = (id) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return getDoc(docRef);\r\n  };\r\n}\r\n\r\nexport default new FBDataService();\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport React from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport FBDataService from \"../context/FBService\";\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState(\"\"); \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function logIn(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function signUp(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logOut() {\r\n    return signOut(auth).then(() => {\r\n      setRole(null);\r\n      setUser(null);\r\n    });\r\n  }\r\n\r\n  function googleSignIn() {\r\n    const googleAuthProvider = new GoogleAuthProvider();\r\n    return signInWithPopup(auth, googleAuthProvider);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n\r\n        try {\r\n          const userDoc = await FBDataService.getData(currentUser.uid);\r\n          if (userDoc.exists()) {\r\n            setRole(userDoc.data().role || \"\");\r\n          } else {\r\n            console.error(\"User document does not exist\");\r\n            setRole(null);\r\n            setUser(null);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user role:\", error);\r\n          setRole(null);\r\n          setUser(null);\r\n        }\r\n      } else {\r\n        setRole(null);\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <userAuthContext.Provider value={{ user, role, logIn, signUp, logOut, googleSignIn }}>\r\n      {children}\r\n    </userAuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUserAuth() {\r\n  return useContext(userAuthContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport FBDataService from \"../context/FBService\"; // Service to fetch user data from Firebase\r\nimport '../css/Login.css'; // Custom CSS for login page\r\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\"); // State for email input\r\n  const [password, setPassword] = useState(\"\"); // State for password input\r\n  const [error, setError] = useState(\"\"); // State for error messages\r\n  const [image, setImage] = useState(\"\"); // State for storing the login image URL\r\n  const { logIn, googleSignIn } = useUserAuth(); // Destructure login functions from context\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  // Initialize Firebase Storage to get images\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the login image from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        // Reference to the login image file in Firebase Storage\r\n        const imageRef = ref(storage, \"images/login.png\"); \r\n\r\n        // Get the download URL for the image\r\n        const url = await getDownloadURL(imageRef);\r\n\r\n        // Set the image URL to the state for rendering\r\n        setImage(url);\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error); // Log errors if the image fetch fails\r\n      }\r\n    };\r\n\r\n    fetchImage(); // Call the function to fetch the image on component mount\r\n  }, [storage]);\r\n\r\n  // Handle role-based navigation after login\r\n  const handleRoleBasedRedirect = async (uid) => {\r\n    try {\r\n      const userDoc = await FBDataService.getData(uid); // Fetch user data based on UID\r\n      if (userDoc.exists) {\r\n        const userRole = userDoc.data().role;\r\n        // Redirect based on user role\r\n        if (userRole === \"admin\") {\r\n          navigate(\"/admin\");\r\n        } else if (userRole === \"seller\") {\r\n          navigate(\"/seller\");\r\n        } else if (userRole === \"customer\") {\r\n          navigate(\"/customer\");\r\n        } else {\r\n          setError(\"Role not recognized.\"); // Handle unknown roles\r\n        }\r\n      } else {\r\n        setError(\"User data not found.\"); // Handle missing user data\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error fetching user data.\"); // Handle errors during user data fetch\r\n    }\r\n  };\r\n\r\n  // Handle form submission for email/password login\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    setError(\"\"); // Clear any existing error messages\r\n    try {\r\n      const userCredential = await logIn(email, password); // Attempt to log in with provided credentials\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\r\n    } catch (err) {\r\n      setError(err.message); // Display error message if login fails\r\n    }\r\n  };\r\n\r\n  // Handle Google sign-in\r\n  const handleGoogleSignIn = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    try {\r\n      const userCredential = await googleSignIn(); // Attempt Google sign-in\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect based on user role\r\n    } catch (error) {\r\n      setError(error.message); // Display error message if Google sign-in fails\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header /> {/* Display the page header */}\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2>Login</h2> {/* Page heading */}\r\n        <div className=\"login-container\">\r\n          <div className=\"image-section\">\r\n            {/* Display the fetched image or a loading message */}\r\n            {image ? (\r\n              <img src={image} alt=\"Login\" className=\"login-image\" />\r\n            ) : (\r\n              <p>Loading Image...</p>\r\n            )}\r\n          </div>\r\n          <div className=\"form-section\">\r\n            <div className=\"p-4 box\">\r\n              {error && <Alert variant=\"danger\">{error}</Alert>} {/* Show error alert if there's any */}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => setEmail(e.target.value)} // Update email state on change\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)} // Update password state on change\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Log In\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              <hr />\r\n              <div>\r\n                <GoogleButton\r\n                  className=\"g-btn\"\r\n                  type=\"dark\"\r\n                  onClick={handleGoogleSignIn} // Handle Google sign-in\r\n                />\r\n              </div>\r\n              <div className=\"p-4 box mt-3 text-center\">\r\n                Don't have an account? <Link to=\"/signup\">Sign up</Link> {/* Link to sign-up page */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Alert, Button } from \"react-bootstrap\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport '../css/Signup.css';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [role] = useState(\"customer\"); // Role is set to 'customer' by default\r\n\r\n  const { signUp } = useUserAuth();\r\n  let navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n    try {\r\n      const userCredential = await signUp(email, password);\r\n      const user = userCredential.user;\r\n\r\n      const createdAt = new Date().toISOString(); // Capture current time as ISO string\r\n      const newData = {\r\n        id: user.uid,\r\n        name,\r\n        email,\r\n        mobile,   \r\n        username, \r\n        role,     \r\n        createdAt \r\n      };\r\n\r\n      await FBDataService.setData(newData);\r\n      console.log(\"User profile created successfully\");\r\n      \r\n      // Navigate to login only after successfully saving data\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -130}}>\r\n      <Header/>\r\n      <div className=\"p-4 box\">\r\n        <h2 className=\"mb-3\">Signup</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicMobile\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Mobile Number\"\r\n              onChange={(e) => setMobile(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Email address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <div className=\"d-grid gap-2\">\r\n            <Button variant=\"primary\" type=\"Submit\">\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      <div className=\"p-4 box mt-3 text-center\">\r\n        Already have an account? <Link to=\"/login\">Log In</Link>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\r\n\r\nconst UserProfile = () => {\r\n  const { user } = useUserAuth();\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedProfile, setUpdatedProfile] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch the current user's profile when the component mounts\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      if (!user) {\r\n        setError(\"No current user logged in\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userDoc = await FBDataService.getData(user.uid);\r\n        if (userDoc.exists()) {\r\n          setUserProfile(userDoc.data());\r\n        } else {\r\n          setError(\"User not found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [user]);\r\n\r\n  // Handle opening the edit profile modal\r\n  const handleEdit = () => {\r\n    setUpdatedProfile(userProfile);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Update profile data as the user edits fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedProfile({ ...updatedProfile, [name]: value });\r\n  };\r\n\r\n  // Save updated profile data to Firestore\r\n  const handleSave = async () => {\r\n    try {\r\n      await FBDataService.updateData(user.uid, updatedProfile);\r\n      setUserProfile(updatedProfile); // Update UI with new profile data\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading profile...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {userProfile ? (\r\n        <div>\r\n          <h2><strong>User Profile</strong></h2>\r\n          <p>Name: {userProfile.name}</p>\r\n          <p>Email: {userProfile.email}</p>\r\n          <p>Mobile: {userProfile.mobile}</p>\r\n          <p>Username: {userProfile.username}</p>\r\n          <Button variant=\"success\" onClick={handleEdit} style={{ width: '150px' }}>\r\n            Edit Profile\r\n          </Button>\r\n\r\n          <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Edit Profile</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group controlId=\"formUserName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={updatedProfile.name || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formUserMobile\">\r\n                  <Form.Label>Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"mobile\"\r\n                    value={updatedProfile.mobile || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formUserUsername\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={updatedProfile.username || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleSave}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      ) : (\r\n        <div>User not found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport '../css/Header.css';\r\n\r\nfunction CustomerHeader() {\r\n  // Extract logOut function from the user authentication context\r\n  const { logOut } = useUserAuth();\r\n  // Hook to programmatically navigate to different routes\r\n  const navigate = useNavigate();\r\n\r\n  // Function to handle user logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Attempt to log out the user\r\n      await logOut();\r\n      // Redirect user to the login page after successful logout\r\n      navigate('/login');\r\n    } catch (error) {\r\n      // Log any error that occurs during logout for debugging purposes\r\n      console.log(\"Failed to logout: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'>\r\n      <Container className='Navbar'>\r\n        {/* Branding for the navigation bar */}\r\n        <Navbar.Brand href=\"/customer\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop\r\n        </Navbar.Brand>\r\n        {/* Button to toggle the navigation menu on small screens */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)' }}>\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </Navbar.Toggle>\r\n\r\n        {/* Collapsible navigation links */}\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            {/* Dropdown menu for product categories */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Otherproducts\">Other Products</NavDropdown.Item>\r\n            </NavDropdown>\r\n            {/* Links for purchase orders, becoming a seller, wishlist, and cart */}\r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link>\r\n            <Nav.Link href='/beseller'>Become a Seller</Nav.Link>\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n            \r\n            {/* Button to log out */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default CustomerHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Footer from './Footer'; // Import the Footer component\r\nimport UserProfile from './UserProfile'; // Import the UserProfile component\r\nimport CustomerHeader from './Customerheader'; // Import the CustomerHeader component\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Import user authentication context\r\nimport FBDataService from '../context/FBService'; // Import service for fetching data from Firestore\r\nimport '../css/Dashboard.css'; // Import CSS for dashboard styling\r\n\r\nfunction Dashboard() {\r\n    const { user } = useUserAuth(); // Access the currently authenticated user from context\r\n    const [userName, setUserName] = useState(''); // State to hold the user's name\r\n\r\n    // Fetch the user's name when the component mounts\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            if (user) {\r\n                try {\r\n                    // Get user data from Firestore using the user's UID\r\n                    const userDoc = await FBDataService.getData(user.uid);\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUserName(userData.name); // Update state with the user's name\r\n                    } else {\r\n                        console.log(\"No such user!\"); // Log if no user document is found\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching user data: ', error); // Log any errors that occur during fetch\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchUserName(); // Call the function to fetch the user's name\r\n    }, [user]); // Re-run this effect if the user changes\r\n\r\n    return (\r\n        <div className='main-content'>\r\n            <CustomerHeader /> {/* Render the header for the customer */}\r\n            {/* Display a personalized welcome message with the user's name */}\r\n            <h2 className='welcome-message'>Welcome to the Dashboard, {userName}!</h2>\r\n            <div className='user-profile'>\r\n                <UserProfile /> {/* Render the user's profile component */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Import authentication context for handling user actions\r\nimport '../css/Header.css'; // Import custom CSS for header styling\r\n\r\nfunction AdminHeader() {\r\n  const { logOut } = useUserAuth(); // Extract logOut function from the authentication context\r\n  const navigate = useNavigate(); // Hook for navigating to different routes\r\n\r\n  // Function to handle user logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logOut(); // Call the logout function from the auth context\r\n      navigate('/login'); // Navigate the user to the login page after successful logout\r\n    } catch (error) {\r\n      console.log(\"Failed to logout: \", error); // Log any errors that occur during the logout process\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'> {/* Navbar expands on large screens, className applied for custom styles */}\r\n      <Container className='Navbar' style={{marginTop:20}}> {/* Container for aligning navbar content */}\r\n        <Navbar.Brand href=\"/admin\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop {/* Brand or logo with a custom font style */}\r\n        </Navbar.Brand>\r\n\r\n        {/* Navbar toggle button for mobile view with custom styling */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)'  }}>\r\n          <span className=\"navbar-toggler-icon\" style={{ backgroundImage: \"url('data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e')\" }}>\r\n          </span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\"> {/* Collapsible part of the navbar for toggling on small screens */}\r\n          <Nav className=\"ms-auto\"> {/* Align navigation to the right (ms-auto) */}\r\n            \r\n            {/* Admin Dashboard Menu Dropdown */}\r\n            <NavDropdown title=\"Dashboard\" id=\"admin-dashboard-dropdown\">\r\n              <NavDropdown.Item href=\"/admin\">Dashboard</NavDropdown.Item> {/* Links to admin dashboard */}\r\n              <NavDropdown.Item href=\"/manageusers\">Manage Users</NavDropdown.Item> {/* Links to manage users page */}\r\n              <NavDropdown.Item href=\"/sellerqueries\">Seller Queries</NavDropdown.Item> {/* Links to seller queries page */}\r\n            </NavDropdown>\r\n            \r\n            {/* Product Management Menu Dropdown */}\r\n            <NavDropdown title=\"Products\" id=\"product-management-dropdown\">\r\n              <NavDropdown.Item href=\"/manageproduct\">Manage Products</NavDropdown.Item> {/* Links to manage products page */}\r\n              <NavDropdown.Item href=\"/addproduct\">Add Product</NavDropdown.Item> {/* Links to add product page */}\r\n              <NavDropdown.Item href=\"/mylistings\">My Listings</NavDropdown.Item> {/* Links to user's product listings */}\r\n             \r\n            </NavDropdown>\r\n\r\n            <Nav.Link href=\"/orders\">Orders</Nav.Link> {/* Links to orders page */}\r\n\r\n            {/* Category Menu Dropdown */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item> {/* Links to all products page */}\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item> {/* Links to furniture category */}\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item> {/* Links to homewares category */}\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item> {/* Links to electrical goods */}\r\n              <NavDropdown.Item href=\"/Otherproducts\">Other Products</NavDropdown.Item> {/* Links to other products */}\r\n            </NavDropdown>\r\n\r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link> {/* Links to customer orders */}\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n            \r\n            {/* Logout Button */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button> {/* Calls handleLogout when clicked */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n","import { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  addDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst collectionName = \"checkout\";\r\nconst checkoutCollectionRef = collection(db, collectionName);\r\n\r\nclass CheckoutService {\r\n  addCheckout = async (newCheckout, userId) => {\r\n    try {\r\n      console.log(\"userId passed to checkout: \", userId);\r\n      const docRef = await addDoc(checkoutCollectionRef, {\r\n        ...newCheckout,\r\n        userId,\r\n      });\r\n  \r\n      await updateDoc(docRef, { paymentId: docRef.id });\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (error) {\r\n      console.error(\"Error adding checkout: \", error);\r\n    }\r\n  };\r\n\r\n\r\n  getAllCheckouts = () => {\r\n    return getDocs(checkoutCollectionRef);\r\n  };\r\n\r\n  getCheckout = (id) => {\r\n    const checkoutDoc = doc(db, collectionName, id);\r\n    return getDoc(checkoutDoc);\r\n  };\r\n}\r\n\r\nexport default new CheckoutService();\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nexport const ReviewContext = createContext();\r\n\r\nexport const ReviewProvider = ({ children }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const fetchAllReviews = async () => {\r\n    try {\r\n      const reviewsSnapshot = await getDocs(collection(db, 'reviews'));\r\n      const allReviews = reviewsSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setReviews(allReviews);\r\n      return allReviews;\r\n    } catch (error) {\r\n      console.error('Error fetching reviews:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllReviews();\r\n  }, []);\r\n\r\n  return (\r\n    <ReviewContext.Provider value={{ reviews, fetchAllReviews }}>\r\n      {children}\r\n    </ReviewContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { ReviewContext } from '../context/ReviewContext';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst Reviews = () => {\r\n  const { reviews, fetchAllReviews } = useContext(ReviewContext); // Access all reviews from context\r\n  const { user } = useUserAuth(); // Access authenticated user (admin)\r\n  const [showReviews, setShowReviews] = useState(false); //show all review\r\n\r\n  // Fetch all reviews when the component is mounted\r\n  useEffect(() => {\r\n    if (user && user.role === 'admin') {\r\n      fetchAllReviews();\r\n    }\r\n  }, [user, fetchAllReviews]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>All Product Reviews (Admin)</h2>\r\n\r\n      {/* Button to show review */}\r\n      <Button size='md' onClick={() => setShowReviews(!showReviews)}>\r\n        {showReviews ? 'Hide Reviews' : 'Show All Reviews'}\r\n      </Button>\r\n\r\n      {/* Display relevant reviews fields in table format */}\r\n      {showReviews && reviews.length > 0 ? (\r\n        <Table striped bordered hover className=\"mt-4\">\r\n          <thead>\r\n            <tr>\r\n              <th>Product Name</th>\r\n              <th>Review Content</th>\r\n              <th>Customer Name</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reviews.map((review) => (\r\n              <tr key={review.id}>\r\n                <td>{review.productName || \"Unknown\"}</td> \r\n                <td>{review.content || \"No content\"}</td> \r\n                <td>{review.customerName || \"Anonymous\"}</td> \r\n                <td>{review.createdAt && review.createdAt.seconds \r\n                      ? new Date(review.createdAt.seconds * 1000).toLocaleDateString() \r\n                      : \"N/A\"}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>{showReviews ? 'No reviews available.' : ''}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AdminHeader from './Adminheader';\r\nimport Footer from './Footer';\r\nimport UserProfile from './UserProfile';\r\nimport '../css/AdminDashboard.css';\r\nimport CheckoutService from '../context/CheckoutServices'; // Service for fetching checkout data from Firestore\r\nimport FBDataService from '../context/FBService'; // Service for fetching user data from Firestore\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Hook for getting the currently logged-in user\r\nimport Reviews from './Reviews'; // Reviews component for displaying user feedback or ratings\r\n\r\nfunction AdminDashboard() {\r\n    const [totalServerFees, setTotalServerFees] = useState(0); // State to store the total server fees\r\n    const [totalProductsSold, setTotalProductsSold] = useState(0); // State to store the total number of products sold\r\n    const { user } = useUserAuth(); // Access the current authenticated user using the custom hook\r\n    const [userName, setUserName] = useState(''); // State to store the current user's name\r\n\r\n    useEffect(() => {\r\n        // Function to fetch checkout data and calculate total server fees and products sold\r\n        const fetchCheckoutData = async () => {\r\n            try {\r\n                const querySnapshot = await CheckoutService.getAllCheckouts(); // Get all checkout documents from Firestore\r\n                \r\n                let totalFees = 0;\r\n                let totalProducts = 0;\r\n\r\n                // Iterate over each checkout document to calculate total fees and count products sold\r\n                querySnapshot.docs.forEach(doc => {\r\n                    const checkoutData = doc.data();\r\n                    \r\n                    // Add server fees, ensuring to handle missing or undefined data\r\n                    const serverFee = parseFloat(checkoutData.serverFee || 0); \r\n                    totalFees += serverFee;\r\n\r\n                    // Count the number of products in each checkout\r\n                    const itemsSold = checkoutData.items ? checkoutData.items.length : 0;\r\n                    totalProducts += itemsSold;\r\n                });\r\n\r\n                // Update state with the calculated totals\r\n                setTotalServerFees(totalFees.toFixed(2)); // Set total server fees, formatted to 2 decimal places\r\n                setTotalProductsSold(totalProducts); // Set total number of products sold\r\n            } catch (error) {\r\n                console.error(\"Error fetching checkout data: \", error); // Log any errors\r\n            }\r\n        };\r\n\r\n        // Function to fetch the name of the currently logged-in user\r\n        const fetchUserName = async () => {\r\n            try {\r\n                if (user) {\r\n                    const userDoc = await FBDataService.getData(user.uid); // Fetch user document from Firestore using UID\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUserName(userData.name); // Set the user's name in state\r\n                    } else {\r\n                        console.log(\"No such user!\"); // Log if no user is found with the given UID\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching user data: ', error); // Log any errors during user data fetching\r\n            }\r\n        };\r\n\r\n        // Fetch checkout data and user name when the component mounts\r\n        fetchCheckoutData();\r\n        fetchUserName();\r\n    }, [user]); // Re-run when the user state changes (e.g., when the user logs in/out)\r\n\r\n    return (\r\n      <div className='main-content' style={{marginTop: -40}}>\r\n        <AdminHeader /> {/* Renders the admin dashboard header */}\r\n        <h2 className='welcome-message'>Welcome to the Admin Dashboard, {userName}!</h2> {/* Display a personalized welcome message */}\r\n        <div className=\"content\">\r\n          <div className=\"user-profile\"><UserProfile /></div> {/* Displays the user profile */}\r\n          <div className=\"dashboard-summary\">\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Server Fees </p>${totalServerFees} {/* Displays the total server fees */}\r\n            </h3>\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Products Sold </p>{totalProductsSold} {/* Displays the total number of products sold */}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <Reviews /> {/* Displays reviews or feedback in the admin dashboard */}\r\n      </div>\r\n    );\r\n}\r\n  \r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport '../css/Header.css';\r\n\r\nfunction SellerHeader() {\r\n  const { logOut } = useUserAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Logs out the user and redirects to the login page\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logOut();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.log(\"Failed to logout: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'>\r\n      <Container className='Navbar' style={{marginTop: 20}}>\r\n        {/* Brand logo that links back to the seller's homepage */}\r\n        <Navbar.Brand href=\"/seller\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop\r\n        </Navbar.Brand>\r\n\r\n        {/* Toggler for responsive navbar */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)' }}>\r\n          <span className=\"navbar-toggler-icon\" style={{ backgroundImage: \"url('data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e')\" }}></span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link href=\"/addproduct\">Add Product</Nav.Link>\r\n            <Nav.Link href=\"/mylistings\">My Listings</Nav.Link>\r\n            <Nav.Link href=\"/orders\">Orders</Nav.Link>\r\n\r\n            {/* Dropdown for product categories */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n\r\n              <NavDropdown.Item href=\"/Otherproducts\">OtherProducts</NavDropdown.Item>\r\n            </NavDropdown>        \r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link> \r\n\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n\r\n            {/* Logout button */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default SellerHeader;\r\n","import React from \"react\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport AdminHeader from \"./Adminheader\"; // Import the header component for admin users\r\nimport SellerHeader from \"./SellerHeader\"; // Import the header component for seller users\r\nimport CustomerHeader from \"./Customerheader\"; // Import the header component for customer users\r\nimport Header from \"./Header\"; // Import the default header component for other users\r\n\r\nconst HeaderSwitcher = () => {\r\n  // Retrieve the current user's role from the authentication context\r\n  const { role } = useUserAuth();\r\n \r\n  return (\r\n    <>\r\n      {/* Render the appropriate header based on the user's role */}\r\n      {role === \"admin\" && <AdminHeader />}       {/* For admin users */}\r\n      {role === \"seller\" && <SellerHeader />}     {/* For seller users */}\r\n      {role === \"customer\" && <CustomerHeader />} {/* For customer users */}\r\n      {role !== \"admin\" && role !== \"seller\" && role !== \"customer\" && <Header />} {/* For users with no specific role */}\r\n      {/* Optionally, you can handle other roles or a default header here */}\r\n    </>\r\n  );\r\n};\r\n \r\nexport default HeaderSwitcher;\r\n","import React from 'react';\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartContextProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"cart\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setCartItems(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No cart items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching cart items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, [currentUser]);\r\n\r\n  async function addToCart(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newCartItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInCart = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInCart) {\r\n          alert(\"This product is already in your cart.\");\r\n          return;\r\n        }\r\n\r\n        const updatedItems = [...existingItems, newCartItem];\r\n\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newCartItem] });\r\n        setCartItems([newCartItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to cart:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromCart(productId) {\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from cart:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCartContext() {\r\n  return useContext(CartContext);\r\n}\r\n\r\nexport default CartContextProvider;\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport React from 'react';\r\n\r\nconst WishlistContext = createContext();\r\n\r\nexport function WishlistContextProvider({ children }) {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchWishlist = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setWishlist(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No wishlist items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching wishlist items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchWishlist();\r\n  }, [currentUser]);\r\n\r\n  async function addToWishlist(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newWishlistItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInWishlist = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInWishlist) {\r\n          alert(\"This product is already in your wishlist.\");\r\n        } else {\r\n          const updatedItems = [...existingItems, newWishlistItem];\r\n          await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n          setWishlist(updatedItems);\r\n        }\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newWishlistItem] });\r\n        setWishlist([newWishlistItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromWishlist(productId) {\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setWishlist(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <WishlistContext.Provider value={{ wishlist, addToWishlist, removeFromWishlist }}>\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWishlistContext() {\r\n  return useContext(WishlistContext);\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Furnitures.css'; // Reusing the same CSS for consistent styling\r\n\r\nfunction Furnitures() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOption, setSortOption] = useState('default');\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"furniture\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = [...filteredProducts];\r\n\r\n    if (sortOption === 'priceLowToHigh') {\r\n      sortedProducts.sort((a, b) => a.productPrice - b.productPrice);\r\n    } else if (sortOption === 'priceHighToLow') {\r\n      sortedProducts.sort((a, b) => b.productPrice - a.productPrice);\r\n    }\r\n\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOption]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -50}}>\r\n        <h2 className=\"text-center\">Our Furniture Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select\r\n            value={sortOption}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"default\">Sort by Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button\r\n                      className=\"btn add-to-cart mb-2\"\r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    <button\r\n                      className=\"btn view-details\"\r\n                      style={{ backgroundColor: '#ff8c00' }}\r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No furniture products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n            </div>\r\n\r\n            <div className=\"product-buttons\">\r\n              <Button\r\n                variant=\"warning\"\r\n                className=\"mb-3\"\r\n                onClick={handleAddToWishlist}\r\n              >\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                className=\"mb-3\"\r\n                onClick={() => handleAddToCart(selectedProduct)}\r\n              >\r\n                Add to Cart\r\n              </Button>\r\n              <Button\r\n                variant=\"secondary\"\r\n                className=\"mb-3\"\r\n                onClick={handleClose}\r\n              >\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                            className=\"btn view-details\"\r\n                            style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                            onClick={() => handleShow(product)}\r\n                          >\r\n                            View Details\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n          </Modal>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default Furnitures;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';  \r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';  // Import the magnify component\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';  \r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Homewares.css';  // Add your CSS file here\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Homewares() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]); // Store similar products\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // New state for sorting\r\n  const { cartItems, addToCart } = useCartContext();  \r\n  const { addToWishlist } = useWishlistContext();  \r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"homewares\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,  \r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);  // Initially display all products\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sort filtered products whenever the sortOrder changes\r\n    const sortedProducts = [...filteredProducts].sort((a, b) => {\r\n      if (sortOrder === 'asc') {\r\n        return a.productPrice - b.productPrice;\r\n      } else {\r\n        return b.productPrice - a.productPrice;\r\n      }\r\n    });\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOrder]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOrder(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);  // Fetch similar products when modal opens\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  // Fetch similar products based on the category of the selected product\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,  \r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);  // Store similar products\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle clicking on a similar product (update modal)\r\n  const handleProductClick = (product) => {\r\n    setSelectedProduct(product);  // Update modal with the clicked product details\r\n    fetchSimilarProducts(product.category);  // Update similar products as well\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher/>\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2 className=\"text-center\">Our Homewares Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-dropdown text-center mb-4\">\r\n          <select\r\n            value={sortOrder}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"asc\">Sort by Price: Low to High</option>\r\n            <option value=\"desc\">Sort by Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    <button \r\n                      className=\"btn view-details\" \r\n                      style={{ backgroundColor: '#ff8c00' }} \r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No homewares products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}> \r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Display Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                                        <div className=\"card text-center\"> \r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button \r\n                          className=\"btn view-details\" \r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleProductClick(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homewares;\r\n\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useUserAuth } from '../context/UserAuthContext'; \r\nimport Footer from './Footer';\r\nimport '../css/Cart.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Cart() {\r\n  // Accessing cart items and removeFromCart function from Cartcontext\r\n  const { cartItems, removeFromCart } = useCartContext();\r\n  // Accessing current user information from UserAuthContext\r\n  const { user: currentUser } = useUserAuth();\r\n  // State to keep track of selected product IDs and total price\r\n  const [selectedProductIds, setSelectedProductIds] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  // Hook to navigate programmatically\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Calculate total price of selected products\r\n    const selectedProducts = cartItems.filter(p => selectedProductIds.includes(p.productId));\r\n    const total = selectedProducts.reduce((sum, product) => sum + product.productPrice, 0);\r\n    setTotalPrice(total);\r\n  }, [selectedProductIds, cartItems]);\r\n\r\n  const handleBuyNow = (productId) => {\r\n    setSelectedProductIds(prevSelected => \r\n      prevSelected.includes(productId)\r\n        ? prevSelected.filter(id => id !== productId)\r\n        : [...prevSelected, productId]\r\n    );\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to proceed to checkout.\");\r\n      return;\r\n    }\r\n    if (selectedProductIds.length === 0) {\r\n      alert(\"Please select at least one product to proceed.\");\r\n      return;\r\n    }\r\n  \r\n    // Prepare data for checkout\r\n    const selectedProducts = cartItems\r\n      .filter(item => selectedProductIds.includes(item.productId))\r\n      .map(product => ({\r\n        productId: product.productId,\r\n        productName: product.productName,\r\n        productPrice: product.productPrice,\r\n        productDescription: product.productDescription,\r\n        sellerUsername: product.sellerUsername,\r\n        sellerId: product.sellerId,\r\n        imageUrls: product.imageUrls,  // Ensure image URLs are included\r\n      }));\r\n  \r\n    // Navigate to checkout page with selected products\r\n    navigate('/checkout', { state: { selectedProducts } });\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderSwitcher />\r\n        <div className=\"content\">\r\n          <Container>\r\n            <p className=\"text-center\">You need to log in to view your cart.</p>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"primary\" onClick={() => navigate('/login')} style={{ width: '150px' }}>Log In</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"content\" >\r\n        <Container>\r\n          <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n          {cartItems.length > 0 ? (\r\n            <>\r\n              <Row className=\"justify-content-center\">\r\n                {cartItems.map((product) => (\r\n                  <Col md={4} key={product.productId}>\r\n                    <Card className=\"mb-4 product-card\">\r\n                      {product.imageUrls && product.imageUrls.length > 0 && (\r\n                        <Card.Img variant=\"top\" src={product.imageUrls[0]} alt={product.productName} />\r\n                      )}\r\n                      <Card.Body className=\"product-card-body\">\r\n                        <Card.Title>{product.productName}</Card.Title>\r\n                        <Card.Text>{product.productDescription}</Card.Text>\r\n                        <Card.Text><strong>Price: ${product.productPrice.toFixed(2)}</strong></Card.Text>\r\n                        <Card.Text>Seller: {product.sellerUsername}</Card.Text>\r\n                        <Button \r\n                          variant={selectedProductIds.includes(product.productId) ? \"success\" : \"primary\"}\r\n                          onClick={() => handleBuyNow(product.productId)}\r\n                          className={`buy-now-button ${selectedProductIds.includes(product.productId) ? 'selected' : ''}`}\r\n                        >\r\n                          {selectedProductIds.includes(product.productId) ? '✓ Selected' : 'Buy Now'}\r\n                        </Button>\r\n                        <Button \r\n                          variant=\"danger\" \r\n                          onClick={() => removeFromCart(product.productId)}\r\n                          className=\"remove-cart-button\"\r\n                        >\r\n                          Remove from Cart\r\n                        </Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              {totalPrice > 0 && (\r\n                <div className=\"text-center mt-3\">\r\n                  <h3>Total Price for Selected Products: ${totalPrice.toFixed(2)}</h3>\r\n                </div>\r\n              )}\r\n              <div className=\"text-center mt-3\">\r\n                <Button \r\n                  variant=\"success\" \r\n                  size=\"lg\" \r\n                  className=\"checkout-button\"\r\n                  onClick={handleCheckout}\r\n                  disabled={selectedProductIds.length === 0}\r\n                >\r\n                  Proceed to Checkout\r\n                </Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p className=\"text-center\">Your cart is empty.</p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';  \r\nimport { useCartContext } from '../context/Cartcontext'; \r\nimport { useUserAuth } from '../context/UserAuthContext'; \r\nimport Footer from './Footer';\r\nimport '../css/Wishlist.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Wishlist() {\r\n  const { wishlist, removeFromWishlist } = useWishlistContext();\r\n  const { cartItems, addToCart } = useCartContext(); \r\n  const { user: currentUser } = useUserAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Calculate total price of items in the wishlist\r\n  const totalPrice = wishlist.reduce((total, item) => total + item.productPrice, 0);\r\n\r\n  // Handle adding product to the cart\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderSwitcher/>\r\n        <div className=\"content\">\r\n          <Container>\r\n            <p className=\"text-center\">You need to log in to view your wishlist.</p>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"primary\" onClick={() => navigate('/login')} style={{ width: '150px' }}>Log In</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher/>\r\n      <div className=\"main-content\" style={{marginTop: -50}}>\r\n        <Container>\r\n          <h2 className=\"text-center mb-4\">Your Wishlist</h2>\r\n          <Row className=\"justify-content-center\">\r\n            {wishlist.map((product, index) => (\r\n              <Col md={4} key={product.productId}>\r\n                <Card className=\"mb-4 product-card\">\r\n                  {product.imageUrls && product.imageUrls.length > 0 && (\r\n                    <Card.Img variant=\"top\" src={product.imageUrls[0]} alt={product.productName} />\r\n                  )}\r\n                  <Card.Body className=\"product-card-body\">\r\n                    <Card.Title>{product.productName}</Card.Title>\r\n                    <Card.Text>{product.productDescription}</Card.Text>\r\n                    <Card.Text><strong>Price: ${product.productPrice.toFixed(2)}</strong></Card.Text>\r\n                    <Card.Text>Seller: {product.sellerUsername}</Card.Text>\r\n                    <Button \r\n                      variant=\"danger\" \r\n                      onClick={() => removeFromWishlist(product.productId)}\r\n                    >\r\n                      Remove from Wishlist\r\n                    </Button>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2 mt-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <h3 className=\"text-center mt-4\">Total Price: ${totalPrice.toFixed(2)}</h3>\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wishlist;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';  \r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';  \r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Electricalgoods.css';\r\n\r\nfunction Electricalgoods() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // For sorting\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"electricalgoods\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const sortProducts = (products) => {\r\n      return [...products].sort((a, b) => {\r\n        return sortOrder === 'asc' \r\n          ? a.productPrice - b.productPrice \r\n          : b.productPrice - a.productPrice;\r\n      });\r\n    };\r\n    setFilteredProducts(sortProducts(filteredProducts));\r\n  }, [sortOrder]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOrder(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -50}}>\r\n        <h2 className=\"text-center\">Our Electrical Goods Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-dropdown text-center mb-4\">\r\n          <select \r\n            value={sortOrder}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"asc\">Price: Low to High</option>\r\n            <option value=\"desc\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product) => (\r\n              <div className=\"col-md-4\" key={product.productId}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    <button \r\n                      className=\"btn view-details\" \r\n                      style={{ backgroundColor: '#ff8c00' }} \r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No electrical goods products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Display Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product) => (\r\n                  <div className=\"col-md-4\" key={product.productId}>\r\n                    <div className=\"card text-center\">\r\n                      {product.imageUrls && product.imageUrls[0] && (\r\n                        <img\r\n                          src={product.imageUrls[0]}\r\n                          alt={product.productName}\r\n                          style={{ width: '100%', height: 'auto' }}\r\n                        />\r\n                      )}\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button \r\n                          className=\"btn view-details\"\r\n                          style={{ backgroundColor: '#ff8c00' }}\r\n                          onClick={() => handleShow(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Electricalgoods;\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport '../css/AboutUs.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport { getDownloadURL, getStorage, ref } from 'firebase/storage';\r\nimport { useEffect, useState } from 'react';\r\n\r\nfunction AboutUs() {\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  // Initialize Firebase Storage for storing and retrieving images\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the image URL from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        // Reference to the image file in Firebase Storage\r\n        const imageRef = ref(storage, \"images/about us.jpg\"); \r\n\r\n        // Get the download URL of the image\r\n        const url = await getDownloadURL(imageRef);\r\n\r\n        // Set the image URL in the component's state to display\r\n        setImage(url);\r\n      } catch (error) {\r\n        // Log any errors encountered while fetching the image\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    };\r\n\r\n    fetchImage(); // Call the function to fetch the image when the component loads\r\n  }, []);\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      {/* HeaderSwitcher to dynamically switch between different headers */}\r\n      <HeaderSwitcher/>\r\n\r\n      <div className='main-content'>\r\n        {/* Main container for About Us page content */}\r\n        <Container className='AboutUs'>\r\n          <Row className='Title'>\r\n            <h3>About Us</h3>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <h5>Discover our Eco Shop</h5>\r\n          </Row>\r\n      \r\n          <Row>\r\n            {/* Description of the Eco Shop and its purpose */}\r\n            <p>\r\n              The Eco Shop is a second-hand deal platform where customers can buy as well as sell their products.\r\n              <br></br> Sellers can list their products for sale, and customers can browse through various categories, \r\n              <br></br> including furniture, homeware, and electrical goods.\r\n              <br></br><br></br>\r\n              Our mission is to offer affordable deals that make it easy for customers to purchase products at low prices.\r\n              <br></br> We aim to provide a user-friendly experience, ensuring both customers and sellers can navigate \r\n              <br></br> efficiently to search for, display, and manage their products with ease.\r\n            </p>\r\n          </Row>\r\n\r\n          {/* Conditionally render the image fetched from Firebase Storage */}\r\n          {image ? (\r\n            <img src={image} alt=\"About Us\" className=\"aboutus-image\" />\r\n          ) : (\r\n            <p>Loading Image.....</p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n\r\n      {/* Footer component to appear at the bottom of the page */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport '../css/ReturnRefundPolicy.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport { useEffect, useState } from 'react';\r\nimport { getDownloadURL, getStorage, ref } from 'firebase/storage';\r\n\r\nfunction ReturnAndRefundPolicy() {\r\n  const [policyImage, setPolicyImage] = useState(\"\");\r\n\r\n  \r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Fetch image URL from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n\r\n        const imageRef = ref(storage, \"images/r&rpolicy.png\"); \r\n\r\n\r\n        const url = await getDownloadURL(imageRef);\r\n\r\n        // Set the image URL to state\r\n        setPolicyImage(url);\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, []);\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <HeaderSwitcher/>\r\n        <div className='main-content'>\r\n          <Container className='RRPolicy'>\r\n            <Row className='Title'>\r\n              <h3>Return & Refund Policy</h3>\r\n            </Row>\r\n\r\n            <Row>\r\n              <p>\r\n                Thankyou for shopping at Eco Shop. In any case if you are not satisfied with your\r\n                <br></br>\r\n                purchase you can follow the return and refund process as mentioned below.\r\n              </p>\r\n            </Row>\r\n            <br></br>\r\n            <Row className='Return'>\r\n              <h5>Returns</h5>\r\n            </Row>\r\n      \r\n            <Row className='Description'>\r\n              <p>\r\n                You have only 30 days to return a product from the date you received it. To be\r\n                eligible for a return, your product must be unused and it needs to have the proof \r\n                of purchase.\r\n              </p>\r\n            </Row>\r\n\r\n            <Row className='Refund'>\r\n              <h5>Refunds</h5>\r\n            </Row>\r\n      \r\n            <Row className='Description'>\r\n              <p>\r\n                Once we receive your product, we will let you know that we have received your product.\r\n                If your product is approved, we will do a refund to any payment method of your choice.\r\n              </p>\r\n            </Row>\r\n            {/* Display the fetched image */}\r\n            {policyImage ? (\r\n              <img src={policyImage} alt=\"R&RPolicy\" className=\"policy-image\" />\r\n            ): (\r\n              <p>Loading Image...</p>\r\n            )}\r\n          </Container>\r\n        </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReturnAndRefundPolicy;\r\n","import { db } from \"../firebase\"; // Adjust the import based on your project structure\r\n\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  doc,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst collectionName = \"contacts\";\r\nconst contactCollectionRef = collection(db, collectionName);\r\n\r\nclass ContactusService {\r\n  addContact = (newContact) => {\r\n    return addDoc(contactCollectionRef, newContact);\r\n  };\r\n\r\n  getAllContacts = () => {\r\n    return getDocs(contactCollectionRef);\r\n  };\r\n\r\n  getContact = (id) => {\r\n    const contactDoc = doc(db, collectionName, id);\r\n    return getDoc(contactDoc);\r\n  };\r\n}\r\n\r\nexport default new ContactusService();\r\n","import React, { useState } from \"react\";\r\nimport { Form, Alert, InputGroup, Button } from \"react-bootstrap\";\r\nimport Contactusservice from \"../context/Contactusservice\"; // Service to handle contact form submissions\r\nimport Footer from \"./Footer\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\n\r\nfunction ContactUs() {\r\n  // State variables to manage form inputs and feedback messages\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [feedback, setFeedback] = useState({ error: false, msg: \"\" });\r\n\r\n  // Handles form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFeedback({ error: false, msg: \"\" });\r\n\r\n    // Check if all fields are filled\r\n    if (name === \"\" || email === \"\" || subject === \"\" || message === \"\") {\r\n      setFeedback({ error: true, msg: \"Please fill out all fields!\" });\r\n      return;\r\n    }\r\n\r\n    // Create contact data object\r\n    const contactData = {\r\n      name,\r\n      email,\r\n      subject,\r\n      message\r\n    };\r\n\r\n    try {\r\n      // Send contact data to the server\r\n      await Contactusservice.addContact(contactData);\r\n      setFeedback({ error: false, msg: \"Your message has been sent successfully!\" });\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err); // Log error for debugging\r\n      setFeedback({ error: true, msg: \"Failed to send message. Please try again later.\" });\r\n    }\r\n\r\n    // Clear form fields after submission\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setSubject(\"\");\r\n    setMessage(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -110}}>\r\n      <HeaderSwitcher />\r\n      <div className=\"p-4 box\">\r\n        {/* Display feedback message if any */}\r\n        {feedback.msg && (\r\n          <Alert\r\n            variant={feedback.error ? \"danger\" : \"success\"}\r\n            dismissible\r\n            onClose={() => setFeedback({ error: false, msg: \"\" })}\r\n          >\r\n            {feedback.msg}\r\n          </Alert>\r\n        )}\r\n        <h2>Contact Us</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          {/* Form field for name */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactName\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactName\">Name</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Your Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for email */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactEmail\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactEmail\">@</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for subject */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactSubject\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactSubject\">Subject</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Subject\"\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for message */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactMessage\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              placeholder=\"Your Message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Submit button */}\r\n          <div className=\"d-grid gap-2\">\r\n            <Button variant=\"success\" type=\"submit\">\r\n              Send Message\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, { useState } from 'react';\r\nimport { db, auth } from '../firebase'; // Ensure Firebase Auth is imported\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport '../css/Header.css';\r\nimport '../css/Addproduct.css';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Addproducts() {\r\n  // States for managing form inputs\r\n  const [productName, setProductName] = useState('');\r\n  const [productDescription, setProductDescription] = useState('');\r\n  const [productDetailedDescription, setProductDetailedDescription] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [category, setCategory] = useState('furniture'); // Default category is set to 'furniture'\r\n  const [images, setImages] = useState([]); // To store selected images for upload\r\n  const [imageUrls, setImageUrls] = useState([]); // To store URLs of uploaded images\r\n  const [progress, setProgress] = useState(0); // To track upload progress\r\n  const [successMessage, setSuccessMessage] = useState(''); // Success message after adding product\r\n\r\n  const storage = getStorage(); // Initialize Firebase Storage\r\n\r\n  // Handle image selection from file input\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files) {\r\n      setImages([...e.target.files]); // Allow multiple image selection\r\n    }\r\n  };\r\n\r\n  // Handle image uploads to Firebase Storage\r\n  const handleImageUpload = () => {\r\n    if (images.length === 0) {\r\n      alert(\"Please select images to upload.\");\r\n      return;\r\n    }\r\n\r\n    // Map through the selected images and upload each\r\n    const uploadPromises = images.map((image) => {\r\n      const storageRef = ref(storage, `images/${productName}/${image.name}`); // Save images in a sub-folder under the product name\r\n      const uploadTask = uploadBytesResumable(storageRef, image); // Upload image\r\n\r\n      return new Promise((resolve, reject) => {\r\n        uploadTask.on(\r\n          'state_changed',\r\n          (snapshot) => {\r\n            // Calculate and update the upload progress for each image\r\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            setProgress(progress);\r\n          },\r\n          (error) => {\r\n            // Handle upload errors\r\n            console.error(\"Upload failed: \", error);\r\n            reject(error);\r\n          },\r\n          () => {\r\n            // Once upload completes, get the download URL of the image\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n              setImageUrls((prev) => [...prev, downloadURL]); // Store the download URL in state\r\n              resolve(downloadURL); // Resolve the promise after successful upload\r\n            });\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n    // Wait for all image uploads to complete\r\n    Promise.all(uploadPromises)\r\n      .then((urls) => {\r\n        console.log('All images uploaded:', urls);\r\n        alert('Images uploaded successfully!');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error uploading images: ', error);\r\n        alert('Failed to upload images. Please try again.');\r\n      });\r\n  };\r\n\r\n  // Handle form submission and product data storage\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n\r\n    try {\r\n      const user = auth.currentUser; // Get the current authenticated user\r\n      if (!user) {\r\n        throw new Error(\"User not authenticated\"); // Ensure user is logged in\r\n      }\r\n\r\n      // Add product information to Firestore, including image URLs and seller details\r\n      const docRef = await addDoc(collection(db, \"products\"), {\r\n        productName,\r\n        productDescription,\r\n        productDetailedDescription,\r\n        productPrice: Number(productPrice), // Convert price to number format\r\n        category,\r\n        imageUrls, // Store the uploaded image URLs\r\n        sellerId: user.uid, // Save the seller's unique ID\r\n        sellerUsername: user.displayName || user.email.split('@')[0], // Use the seller's display name or email as username\r\n        sellerEmail: user.email, // Save the seller's email address\r\n      });\r\n\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n\r\n      // Display success message and reset the form fields\r\n      setSuccessMessage('Product added successfully!');\r\n      setProductName('');\r\n      setProductDescription('');\r\n      setProductDetailedDescription('');\r\n      setProductPrice('');\r\n      setCategory('furniture');\r\n      setImages([]);\r\n      setImageUrls([]);\r\n      setProgress(0);\r\n\r\n      // Remove success message after 3 seconds\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e); // Log any errors during submission\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='main-content' style={{marginTop: -70}}>\r\n      {/* Dynamic header switching based on the user type */}\r\n      <HeaderSwitcher/>\r\n      <h2>Add Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Product Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Product Description:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={productDescription}\r\n            onChange={(e) => setProductDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Detailed Description:</label>\r\n          <textarea\r\n            value={productDetailedDescription}\r\n            onChange={(e) => setProductDetailedDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Product Price:</label>\r\n          <input\r\n            type=\"number\"\r\n            value={productPrice}\r\n            onChange={(e) => setProductPrice(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Category:</label>\r\n          <select value={category} onChange={(e) => setCategory(e.target.value)} required>\r\n            <option value=\"furniture\">Furnitures</option>\r\n            <option value=\"electricalgoods\">Electrical Goods</option>\r\n            <option value=\"homewares\">Homewares</option>\r\n            <option value=\"other\">Other Products</option> {/* Option for uncategorized products */}\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Upload Images:</label>\r\n          <input type=\"file\" onChange={handleImageChange} multiple />\r\n          <button type=\"button\" onClick={handleImageUpload}>Upload Images</button>\r\n          <progress value={progress} max=\"100\" />\r\n          {imageUrls.length > 0 && imageUrls.map((url, index) => (\r\n            <img key={index} src={url} alt=\"Uploaded\" style={{ width: '100px', marginTop: '10px' }} />\r\n          ))}\r\n        </div>\r\n        <button type=\"submit\">Add Product</button>\r\n      </form>\r\n\r\n      {/* Success message after product submission */}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addproducts;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\n\r\n// General protected route\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user } = useUserAuth();\r\n\r\n  console.log(\"Check user in ProtectedRoute: \", user);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return children;\r\n};\r\n\r\n// Admin protected route\r\nexport const AdminRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in AdminRoute: \", user);\r\n  console.log(\"Check user role in AdminRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\n// Seller protected route\r\nexport const SellerRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in SellerRoute: \", user);\r\n  console.log(\"Check user role in SellerRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\" || role ===\"seller\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\n// Customer protected route\r\nexport const CustomerRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in CustomerRoute: \", user);\r\n  console.log(\"Check user role in CustomerRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\" || role ===\"seller\" || role ===\"customer\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { useState, useEffect } from \"react\";\r\nimport { Alert, Button, Form, InputGroup, Modal } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport '../css/Checkout.css';\r\nimport CheckoutService from \"../context/CheckoutServices\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport { getAuth } from \"firebase/auth\"; //This will import the authentication from firebase\r\n\r\nfunction Checkout() {\r\n    const [discountCode, setDiscountCode] = useState([]);\r\n    const [appliedDiscount, setAppliedDiscount] = useState(null);\r\n    const [cardNumber, setCardNumber] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [message, setMessage] = useState({ error: false, msg: \"\" });\r\n    const [country, setCountry] = useState(\"\");\r\n    const [subTotal, setSubTotal] = useState(0.00);\r\n    const [discount, setDiscount] = useState(0.00);\r\n    const [serverFee, setServerFee] = useState(0.00);\r\n    const [totalCost, setTotalCost] = useState(0.00);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [missingFields, setMissingFields] = useState([]);\r\n    \r\n    // Inside the Checkout function\r\n    const location = useLocation();\r\n    const selectedProducts = location.state?.selectedProducts || [];\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Calculate SubTotal when selectedProducts change\r\n        let subtotal = selectedProducts.reduce((acc, item) => acc + item.productPrice, 0);\r\n        setSubTotal(subtotal);\r\n      \r\n        // Calculate Server Fee\r\n        const serverPercentage = 0.15; // 15% server fee\r\n        const serverValue = subtotal * serverPercentage;\r\n        setServerFee(serverValue);\r\n      \r\n        // Calculate Total Cost without discount\r\n        const totalCost = subtotal + serverValue;\r\n        setTotalCost(totalCost);\r\n      }, [selectedProducts]);\r\n      \r\n    \r\n    const discountCodes = {\r\n        \"DISCOUNT50\": 0.50, // 50% discount\r\n        \"DISCOUNT20\": 0.20, // 20% discount\r\n        \"DISCOUNT15\": 0.15, // 15% discount\r\n        \"DISCOUNT10\": 0.10  // 10% discount\r\n    };\r\n\r\n    const handleApplyDiscount = () => {\r\n        const discountPercentage = discountCodes[discountCode.toUpperCase()] || 0;\r\n        \r\n        if (discountPercentage > 0) {\r\n            const discountValue = subTotal * discountPercentage;\r\n            const newTotalCost = subTotal - discountValue + serverFee;\r\n\r\n            setDiscount(discountValue);\r\n            setTotalCost(newTotalCost);\r\n            setDiscountCode('');\r\n            setMessage({ error: false, msg: \"Discount applied successfully!\" });\r\n        } else {\r\n            setMessage({ error: true, msg: \"Invalid discount code!\" });\r\n        }\r\n    }; \r\n\r\n    const handleRemoveDiscount = () => {\r\n        const newTotalCost = subTotal + serverFee; // Remove the discount from total cost\r\n        setDiscount(0);\r\n        setTotalCost(newTotalCost);\r\n        setAppliedDiscount(null); // Clear applied discount\r\n        setMessage({ error: false, msg: \"Discount removed successfully!\" });\r\n    };\r\n    \r\n    const handleCardNumberChange = (e) => {\r\n        const { value } = e.target; // Safely access value from event target\r\n        let formattedValue = value.replace(/\\D/g, ''); // Remove all non-digit characters\r\n        formattedValue = formattedValue.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space after every 4 digits\r\n        setCardNumber(formattedValue); // Update state with formatted value\r\n    };\r\n    \r\n    //This will create an encryption for the card number\r\n    function simpleEncrypt(cardNumber) {\r\n        return cardNumber.split('').map(char => String.fromCharCode(char.charCodeAt(0) + 3)).join('');\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Fetch the logged-in user's ID\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        const userId = user ? user.uid : null;\r\n\r\n        if (!userId) {\r\n            setMessage({ error: true, msg: \"User not logged in!\" });\r\n            return;\r\n        }\r\n\r\n        setMessage(\"\");\r\n        setMissingFields([]);  // Reset missing fields\r\n\r\n        // Track missing fields\r\n        let missingFields = [];\r\n\r\n        if (address === \"\") missingFields.push(\"Street Address\");\r\n        if (city === \"\") missingFields.push(\"City\");\r\n        if (region === \"\") missingFields.push(\"State/Province/Region\");\r\n        if (zipCode === \"\") missingFields.push(\"Zip/Postal Code\");\r\n        if (country === \"\") missingFields.push(\"Country\");\r\n        if (cardNumber === \"\") missingFields.push(\"Card Number\");\r\n\r\n        if (missingFields.length > 0) {\r\n            setMissingFields(missingFields);  // Set the missing fields to the state\r\n            setShowErrorModal(true);  // Show the error modal\r\n            return;\r\n        }\r\n\r\n        const encryptedCardNumber = simpleEncrypt(cardNumber);// This will store the encrypted card number\r\n\r\n        const checkoutData = {\r\n            paymentId: \"\", // Provide a default empty string or some fallback value\r\n            userId: userId,  // Set the user ID here\r\n            cardNumber: encryptedCardNumber || \"\",\r\n            address: address || \"\",\r\n            city: city || \"\",\r\n            region: region || \"\",\r\n            zipCode: zipCode || \"\",\r\n            country: country || \"\",\r\n            serverFee: serverFee.toFixed(2),\r\n            totalCost: totalCost.toFixed(2),\r\n            items: selectedProducts.map(item => ({\r\n                productName: item.productName || \"Unknown Product\",\r\n                productDescription: item.productDescription || \"\",\r\n                productPrice: item.productPrice || 0,\r\n                imageUrls: item.imageUrls || \"\", // Use a placeholder URL or empty string if missing\r\n                sellerId: item.sellerId || \"Unknown Seller\", // Ensure sellerId is provided\r\n            }))\r\n        };\r\n        \r\n        try {\r\n            await CheckoutService.addCheckout(checkoutData, userId);\r\n            setMessage({ error: false, msg: \"Payment successful!\" });\r\n            setShowModal(true); // Show the modal when payment is successful\r\n        } catch (err) {\r\n            setMessage({ error: true, msg: err.message });\r\n        }\r\n\r\n        setAddress(\"\");\r\n        setCity(\"\");\r\n        setCountry(\"\");\r\n        setRegion(\"\");\r\n        setZipCode(\"\");\r\n        setCardNumber(\"\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 box\">\r\n                <div className=\"wrapper\">\r\n                    <HeaderSwitcher/>\r\n                    <div className=\"main-content\">\r\n                        {message?.msg && (\r\n                            <Alert\r\n                                variant={message?.error ? \"danger\" : \"success\"}\r\n                                dismissible\r\n                                onClose={() => setMessage(\"\")}\r\n                            >\r\n                                {message?.msg}\r\n                            </Alert>\r\n                        )}\r\n                        <h2 className=\"text-center mb-4\">Checkout</h2>\r\n                        <div className=\"products-history\">\r\n                        <h4>Products History</h4>\r\n                        </div>\r\n                        <br/>\r\n                        {selectedProducts.length > 0 ? (\r\n                        <div className=\"row justify-content-center\">\r\n                            {selectedProducts.map((item, index) => (\r\n                            <div className=\"col-md-4\" key={index}>\r\n                                <div className=\"card text-center\">\r\n                                <div className=\"card-body\">\r\n                                    {item.imageUrls && (\r\n                                    <>\r\n                                        <img \r\n                                        src={item.imageUrls[0]} \r\n                                        alt={item.productName} \r\n                                        className=\"card-img-top\"\r\n                                        />\r\n                                    </>\r\n                                    )}\r\n                                    <h5 className=\"card-title\">{item.productName}</h5>\r\n                                    <p className=\"card-text\">{item.productDescription}</p>\r\n                                    <p className=\"card-text\"><strong>Price: ${item.productPrice}</strong></p>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                        ) : (\r\n                        <p>Your cart is empty.</p>\r\n                        )}\r\n                        <br/>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"form-box\">\r\n                                    <div className=\"flex-container\">\r\n                                        <InputGroup className=\"input-width\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Discount Code\"\r\n                                                maxLength={10}\r\n                                                value={discountCode}\r\n                                                onChange={(e) => setDiscountCode(e.target.value)} \r\n                                            />\r\n                                        </InputGroup>\r\n                                        <Button\r\n                                            variant=\"success\" \r\n                                            size=\"md\" \r\n                                            className=\"apply-button\"\r\n                                            onClick={handleApplyDiscount}\r\n                                        >\r\n                                            Apply    \r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            size=\"md\"\r\n                                            className=\"remove-button\"\r\n                                            onClick={handleRemoveDiscount}\r\n                                        >\r\n                                            Remove\r\n                                        </Button>\r\n                                    </div> \r\n                                    <Form.Group className=\"mb-3\" controlId=\"formCardNumber\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Text id=\"formCardNumber\">Card Number </InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"xxxx xxxx xxxx xxxx\"\r\n                                                maxLength={19}\r\n                                                value={cardNumber}\r\n                                                onChange={(e) => handleCardNumberChange(e)}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <p>Billing Address</p>\r\n                                    <hr/>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formStreetAddress\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Text id=\"formStreetAddress\">Street Address </InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Street Address\"\r\n                                                value={address}\r\n                                                onChange={(e) => setAddress(e.target.value)}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Form.Group className=\"mb-3 flex-grow-1 me-3\" controlId=\"formCity\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formCity\">City </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"City\"\r\n                                                    value={city}\r\n                                                    onChange={(e) => setCity(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3 flex-grow-1\" controlId=\"formRegion\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formRegion\">State/Province/Region </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"State/Province/Region\"\r\n                                                    value={region}\r\n                                                    onChange={(e) => setRegion(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Form.Group className=\"mb-3 flex-grow-1 me-3\" controlId=\"formZipCode\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formZipCode\">Zip/Postal Code </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Zip/Postal Code\"\r\n                                                    value={zipCode}\r\n                                                    onChange={(e) => setZipCode(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3 flex-grow-1\" controlId=\"formCountry\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formCountry\">Country </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Country\"\r\n                                                    value={country}\r\n                                                    onChange={(e) => setCountry(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </div> \r\n                                    <div className=\"form-box\">\r\n                                        <h5 style={{textAlign:'center'}}>Payment Summary</h5>\r\n                                        <br/>\r\n                                        <div className=\"mb-3\">\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Sub Total:</span> \r\n                                                <span className=\"value\">${subTotal.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Discount:</span> \r\n                                                <span className=\"value\">$-{discount.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Server Fee (15%):</span> \r\n                                                <span className=\"value\">${serverFee.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <br/>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Total Cost:</span> \r\n                                                <span className=\"value\">${totalCost.toFixed(2)}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>        \r\n                                    <div className=\"text-center mt-3\">\r\n                                        <Button\r\n                                            variant=\"success\" \r\n                                            size=\"lg\" \r\n                                            className=\"paynow-button\"\r\n                                            onClick={handleSubmit}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Pay Now    \r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            {/* Success Modal */}\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Successful</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Your payment was processed successfully!</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" onClick={() => {\r\n                    setShowModal(false);\r\n                    navigate('/Cart');\r\n                }}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            {/* Error Modal */}\r\n            <Modal show={showErrorModal} onHide={() => setShowErrorModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Missing Information</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Please fill in the following mandatory fields: \r\n                    <ul>\r\n                        {missingFields.map((field, index) => (\r\n                            <li key={index}>{field}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setShowErrorModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </> \r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport { Table, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst ManageUsers = () => {\r\n  // State to hold lists of customers and sellers, and the search query\r\n  const [customers, setCustomers] = useState([]);\r\n  const [sellers, setSellers] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n  // Fetch users from Firebase and separate them into customers and sellers\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const data = await FBDataService.getAllData();\r\n        const users = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n\r\n        // Update state with customers and sellers\r\n        setCustomers(users.filter((user) => user.role === \"customer\"));\r\n        setSellers(users.filter((user) => user.role === \"seller\"));\r\n      } catch (err) {\r\n        console.error(\"Error fetching users:\", err);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Function to change a user's role and update the state\r\n  const handleRoleChange = async (id, newRole) => {\r\n    try {\r\n      const userToUpdate = [...customers, ...sellers].find(user => user.id === id);\r\n      if (userToUpdate) {\r\n        await FBDataService.updateData(id, { ...userToUpdate, role: newRole });\r\n\r\n        // Update local state to reflect the role change\r\n        if (newRole === \"customer\") {\r\n          setCustomers(prevCustomers => [...prevCustomers, { ...userToUpdate, role: newRole }]);\r\n          setSellers(prevSellers => prevSellers.filter(user => user.id !== id));\r\n        } else if (newRole === \"seller\") {\r\n          setSellers(prevSellers => [...prevSellers, { ...userToUpdate, role: newRole }]);\r\n          setCustomers(prevCustomers => prevCustomers.filter(user => user.id !== id));\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error updating role:\", err);\r\n    }\r\n  };\r\n\r\n  // Function to delete a user and update the state\r\n  const handleDeleteUser = async (id) => {\r\n    try {\r\n      await FBDataService.deleteData(id);\r\n\r\n      // Remove the user from both customers and sellers lists\r\n      setCustomers(prevCustomers => prevCustomers.filter(user => user.id !== id));\r\n      setSellers(prevSellers => prevSellers.filter(user => user.id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting user:\", err);\r\n    }\r\n  };\r\n\r\n  // Filter customers and sellers based on the search query\r\n  const filteredCustomers = customers.filter((user) =>\r\n    user.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const filteredSellers = sellers.filter((user) =>\r\n    user.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <AdminHeader /> {/* Render the admin header */}\r\n      <h2>Manage Users</h2>\r\n\r\n      {/* Search input for filtering users */}\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Search users by name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)} // Update search query\r\n        />\r\n      </InputGroup>\r\n\r\n      <h3>Customers</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Render customer rows */}\r\n          {filteredCustomers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.mobile}</td>\r\n              <td>\r\n                <Form.Select\r\n                  value={user.role}\r\n                  onChange={(e) => handleRoleChange(user.id, e.target.value)} // Handle role change\r\n                >\r\n                  <option value=\"customer\">Customer</option>\r\n                  <option value=\"seller\">Seller</option>\r\n                </Form.Select>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" onClick={() => handleDeleteUser(user.id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <h3>Sellers</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Render seller rows */}\r\n          {filteredSellers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.mobile}</td>\r\n              <td>\r\n                <Form.Select\r\n                  value={user.role}\r\n                  onChange={(e) => handleRoleChange(user.id, e.target.value)} // Handle role change\r\n                >\r\n                  <option value=\"seller\">Seller</option>\r\n                  <option value=\"customer\">Customer</option>\r\n                </Form.Select>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" onClick={() => handleDeleteUser(user.id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SellerHeader from './SellerHeader';\r\nimport UserProfile from './UserProfile';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport FBDataService from '../context/FBService';\r\nimport CheckoutService from '../context/CheckoutServices'; \r\nimport '../css/SellerDashboard.css';\r\n\r\nfunction SellerDashboard() {\r\n    const { user } = useUserAuth(); \r\n    const [username, setUsername] = useState('');\r\n    const [totalEarnings, setTotalEarnings] = useState(0); // State to store total earnings\r\n\r\n    useEffect(() => {\r\n        if (user && user.uid) {\r\n            const fetchUserData = async () => {\r\n                try {\r\n                    const userDoc = await FBDataService.getData(user.uid); // Fetch user data\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUsername(userData.name); // Set username from user data\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching user data: ', error);\r\n                }\r\n            };\r\n\r\n            const fetchEarningsData = async () => {\r\n                try {\r\n                    const querySnapshot = await CheckoutService.getAllCheckouts(); \r\n                    let total = 0;\r\n                    \r\n                    querySnapshot.docs.forEach(doc => {\r\n                        const checkoutData = doc.data();\r\n                        if (checkoutData.items) {\r\n                            checkoutData.items.forEach(item => {\r\n                                if (item.sellerId === user.uid) {\r\n                                    const price = parseFloat(item.productPrice || 0);\r\n                                    // const serverFee = parseFloat(checkoutData.serverFee || 0);\r\n                                    total += (price*0.85); // Deduct service fee\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setTotalEarnings(total.toFixed(2)); // Set total earnings\r\n                } catch (error) {\r\n                    console.error('Error fetching earnings data: ', error);\r\n                }\r\n            };\r\n\r\n            fetchUserData();\r\n            fetchEarningsData(); \r\n        }\r\n    }, [user]);\r\n\r\n    return (\r\n        <div className=\"main-content\">\r\n            <SellerHeader />\r\n            <h2 className=\"welcome-message\">Welcome to the Seller Dashboard, {username}!</h2>\r\n            <div className=\"content\">\r\n                <div className=\"user-profile\"><UserProfile /></div>\r\n                <div className=\"dashboard-summary\">\r\n                    <h3 className='summary-box'>\r\n                        <p className=\"text\">Total Earnings </p>${totalEarnings}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst ManageProducts = () => {\r\n  // Extracting product-related functions and data from context\r\n  const { products, deleteProduct, updateProduct } = useProductcontext();\r\n  const [productList, setProductList] = useState([]); // State to store products for display\r\n  const [showModal, setShowModal] = useState(false); // State to control modal visibility\r\n  const [currentProduct, setCurrentProduct] = useState(null); // State for the product being edited\r\n  const [categories] = useState([\"Electronics\", \"Fashion\", \"Books\", \"Home\"]); // Example categories for selection\r\n\r\n  // Update local state when products from context change\r\n  useEffect(() => {\r\n    setProductList(products);\r\n  }, [products]);\r\n\r\n  // Function to handle product deletion\r\n  const handleDelete = (productId) => {\r\n    deleteProduct(productId); // Call delete function from context\r\n  };\r\n\r\n  // Function to handle editing a product\r\n  const handleEdit = (product) => {\r\n    setCurrentProduct(product); // Set the product to be edited\r\n    setShowModal(true); // Show the modal for editing\r\n  };\r\n\r\n  // Function to save changes to the product\r\n  const handleSave = () => {\r\n    updateProduct(currentProduct.id, currentProduct); // Update the product with new values\r\n    setShowModal(false); // Close the modal after saving\r\n  };\r\n\r\n  // Function to handle changes in the edit form\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentProduct({ ...currentProduct, [name]: value }); // Update the product state with form changes\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <AdminHeader /> {/* Display the admin header */}\r\n      <h2>Manage Products</h2> {/* Page heading */}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Description</th>\r\n            <th>Seller</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Render each product in the table */}\r\n          {productList.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>{product.productName}</td>\r\n              <td>{product.productPrice}</td>\r\n              <td>{product.productDescription}</td>\r\n              <td>{product.sellerUsername}</td>\r\n              <td>\r\n                <Button variant=\"warning\" onClick={() => handleEdit(product)}>\r\n                  Edit\r\n                </Button>{\" \"}\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => handleDelete(product.id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      {/* Modal for editing a product */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Show the form if a product is selected for editing */}\r\n          {currentProduct && (\r\n            <Form>\r\n              <Form.Group controlId=\"formProductName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productName\"\r\n                  value={currentProduct.productName}\r\n                  onChange={handleChange} // Update product name on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductPrice\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"productPrice\"\r\n                  value={currentProduct.productPrice}\r\n                  onChange={handleChange} // Update product price on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  name=\"productDescription\"\r\n                  value={currentProduct.productDescription}\r\n                  onChange={handleChange} // Update product description on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductCategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Select\r\n                  name=\"category\"\r\n                  value={currentProduct.category}\r\n                  onChange={handleChange} // Update product category on change\r\n                >\r\n                  {/* Render category options */}\r\n                  {categories.map((category, index) => (\r\n                    <option key={index} value={category}>\r\n                      {category}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSave}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport SellerHeader from \"./SellerHeader\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\nimport FBDataService from \"../context/FBService\";\r\n\r\nconst MyListings = () => {\r\n  // Accessing products and deleteProduct function from Product context\r\n  const { products, deleteProduct } = useProductcontext();\r\n  // Accessing current user and their role from UserAuth context\r\n  const { user, role } = useUserAuth();\r\n  \r\n  // State to hold products listed by the current seller\r\n  const [sellerProducts, setSellerProducts] = useState([]);\r\n  \r\n  // State to manage the visibility of the edit modal\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  \r\n  // State to manage the visibility of the details modal\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  \r\n  // State to keep track of the product currently being edited or viewed\r\n  const [currentProduct, setCurrentProduct] = useState(null);\r\n\r\n  // Fetch and filter products when user or products change\r\n  useEffect(() => {\r\n    if (user && products.length > 0) {\r\n      const filteredProducts = products.filter(\r\n        (product) => product.sellerId === user.uid\r\n      );\r\n      setSellerProducts(filteredProducts);\r\n    }\r\n  }, [products, user]);\r\n\r\n  // Show the edit modal with the selected product's data\r\n  const handleEditClick = (product) => {\r\n    setCurrentProduct(product);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  // Handle deleting a product\r\n  const handleDeleteClick = async (productId) => {\r\n    try {\r\n      await deleteProduct(productId); // Delete product using context function\r\n      setSellerProducts(sellerProducts.filter((product) => product.id !== productId));\r\n    } catch (err) {\r\n      console.error(\"Error deleting product:\", err);\r\n    }\r\n  };\r\n\r\n  // Save changes made in the edit modal\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      await FBDataService.updateData(currentProduct.id, currentProduct); // Update product in the database\r\n      setSellerProducts(sellerProducts.map((product) =>\r\n        product.id === currentProduct.id ? currentProduct : product\r\n      ));\r\n      setShowEditModal(false);\r\n    } catch (err) {\r\n      console.error(\"Error updating product:\", err);\r\n    }\r\n  };\r\n\r\n  // Handle changes in the edit form fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentProduct({ ...currentProduct, [name]: value });\r\n  };\r\n\r\n  // Show the details modal with the selected product's information\r\n  const handleProductDetailsClick = (product) => {\r\n    setCurrentProduct(product);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      {/* Render header based on the user's role */}\r\n      {role === \"admin\" && <AdminHeader />}\r\n      {role === \"seller\" && <SellerHeader />}\r\n\r\n      <h2>My Listings</h2>\r\n      {sellerProducts.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {/* Display products in a table */}\r\n            {sellerProducts.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={() => handleProductDetailsClick(product)}\r\n                  >\r\n                    {product.productName}\r\n                  </Button>\r\n                </td>\r\n                <td>{product.productPrice}</td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => handleEditClick(product)}\r\n                  >\r\n                    Edit\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDeleteClick(product.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>No products found for this seller.</p>\r\n      )}\r\n\r\n      {/* Modal for editing a product */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentProduct && (\r\n            <Form>\r\n              <Form.Group controlId=\"formProductName\">\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productName\"\r\n                  value={currentProduct.productName}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductPrice\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productPrice\"\r\n                  value={currentProduct.productPrice}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"productDescription\"\r\n                  value={currentProduct.productDescription}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductCategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={currentProduct.category}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formSellerUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"sellerUsername\"\r\n                  value={currentProduct.sellerUsername}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Modal for displaying product details */}\r\n      <Modal show={showDetailsModal} onHide={() => setShowDetailsModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentProduct ? (\r\n            <>\r\n              <p><strong>Name:</strong> {currentProduct.productName}</p>\r\n              <p><strong>Price:</strong> {currentProduct.productPrice}</p>\r\n              <p><strong>Description:</strong> {currentProduct.productDescription}</p>\r\n              <p><strong>Category:</strong> {currentProduct.category}</p>\r\n              <p><strong>Username:</strong> {currentProduct.sellerUsername}</p>\r\n            </>\r\n          ) : (\r\n            <p>No product details available.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport CheckoutService from \"../context/CheckoutServices\"; // Import the CheckoutService\r\nimport \"../css/Orders.css\"; // Import the CSS file\r\n\r\nconst Orders = () => {\r\n  const { orders, updateOrderStatus } = useProductcontext();\r\n  const { user } = useUserAuth();\r\n  const [sellerOrders, setSellerOrders] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user && user.uid) {\r\n      const filteredOrders = orders\r\n        .filter((order) => order.status !== 'complete') // Exclude completed orders\r\n        .map((order) => ({\r\n          ...order,\r\n          items: order.items ? order.items.filter((item) => item.sellerId === user.uid) : []\r\n        }))\r\n        .filter((order) => order.items.length > 0);\r\n\r\n      setSellerOrders(filteredOrders);\r\n    }\r\n  }, [orders, user]);\r\n\r\n  const handleStatusChange = (orderId, status) => {\r\n    updateOrderStatus(orderId, status); // Implement this function in your Productcontext\r\n  };\r\n\r\n  const handleProductClick = async (product) => {\r\n    try {\r\n      const querySnapshot = await CheckoutService.getAllCheckouts();\r\n      const checkouts = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\r\n\r\n      const matchedCheckout = checkouts.find(checkout =>\r\n        checkout.items.some(item => item.productName === product.productName && item.sellerId === user.uid)\r\n      );\r\n\r\n      if (matchedCheckout) {\r\n        const itemDetails = matchedCheckout.items.find(item => item.productName === product.productName);\r\n        const productPrice = itemDetails.productPrice || 0;\r\n        const serverFee = productPrice * 0.15; // Calculate server fee (15% of price)\r\n        const profit = productPrice * 0.85; // Calculate profit (85% of price)\r\n\r\n        setSelectedProduct({\r\n          ...itemDetails,\r\n          paymentId: matchedCheckout.paymentId,\r\n          serverFee: serverFee,\r\n          profit: profit,\r\n          address: matchedCheckout.address || \"N/A\",\r\n          region: matchedCheckout.region || \"N/A\",\r\n          zipCode: matchedCheckout.zipCode || \"N/A\",\r\n          city: matchedCheckout.city || \"N/A\",\r\n          country: matchedCheckout.country || \"N/A\"\r\n        });\r\n        setShowModal(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching checkouts: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <HeaderSwitcher />\r\n      <h2>My Orders</h2>\r\n      <div className=\"table-container\">\r\n        {sellerOrders.length > 0 ? (\r\n          <Table striped bordered hover className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Server Fee</th>\r\n                <th>Profit</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sellerOrders.map((order, index) =>\r\n                order.items.map((item, itemIndex) => (\r\n                  <tr key={itemIndex}>\r\n                    <td onClick={() => handleProductClick(item)} style={{ cursor: 'pointer' }}>\r\n                      {item.productName}\r\n                    </td>\r\n                    <td>{item.productPrice.toFixed(2)}</td>\r\n                    <td>{(item.productPrice * 0.15).toFixed(2)}</td> {/* Server Fee */}\r\n                    <td>{(item.productPrice * 0.85).toFixed(2)}</td> {/* Profit */}\r\n                    <td>\r\n                      <select\r\n                        value={order.status}\r\n                        onChange={(e) => handleStatusChange(order.id, e.target.value)}\r\n                      >\r\n                        <option value=\"not done\">Not Done</option>\r\n                        <option value=\"in progress\">In Progress</option>\r\n                        <option value=\"delivered\">Delivered</option>\r\n                        <option value=\"complete\">Complete</option>\r\n                      </select>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p>No orders found for this seller.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for displaying product details */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modal-content\">\r\n          {selectedProduct ? (\r\n            <>\r\n              <p><strong>Name:</strong> {selectedProduct.productName || \"N/A\"}</p>\r\n              <p><strong>Description:</strong> {selectedProduct.productDescription || \"N/A\"}</p>\r\n              <p><strong>Price:</strong> {selectedProduct.productPrice ? selectedProduct.productPrice.toFixed(2) : \"N/A\"}</p>\r\n              <p><strong>Payment ID:</strong> {selectedProduct.paymentId || \"N/A\"}</p>\r\n              <p><strong>Server Fee:</strong> {selectedProduct.serverFee ? selectedProduct.serverFee.toFixed(2) : \"N/A\"}</p>\r\n              <p><strong>Profit:</strong> {selectedProduct.profit ? selectedProduct.profit.toFixed(2) : \"N/A\"}</p>\r\n              <p><strong>Address:</strong> {selectedProduct.address}</p>\r\n              <p><strong>Region:</strong> {selectedProduct.region}</p>\r\n              <p><strong>Zip Code:</strong> {selectedProduct.zipCode}</p>\r\n              <p><strong>City:</strong> {selectedProduct.city}</p>\r\n              <p><strong>Country:</strong> {selectedProduct.country}</p>\r\n            </>\r\n          ) : (\r\n            <p>No product details available.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { collection, getDocs, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst SellerQueries = () => {\r\n  const [queries, setQueries] = useState([]);\r\n\r\n  // Fetch seller queries from Firestore \r\n  useEffect(() => {\r\n    const fetchQueries = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"sellerQueries\"));\r\n        const queriesArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setQueries(queriesArray); // Store fetched queries in state\r\n      } catch (e) {\r\n        console.error(\"Error fetching queries:\", e);\r\n      }\r\n    };\r\n\r\n    fetchQueries();\r\n  }, []);\r\n\r\n \r\n  const handleApprove = async (query) => {\r\n    try {\r\n      // Update user's role to 'seller' in the users collection\r\n      const userRef = doc(db, \"users\", query.userId);\r\n      await updateDoc(userRef, { role: \"seller\" });\r\n\r\n      // Remove the query from the 'sellerQueries' collection after approval\r\n      await deleteDoc(doc(db, \"sellerQueries\", query.id));\r\n\r\n      // Update the UI by removing the approved query\r\n      setQueries((prevQueries) => prevQueries.filter((q) => q.id !== query.id));\r\n      alert(\"User approved as seller.\");\r\n    } catch (e) {\r\n      console.error(\"Error approving seller:\", e);\r\n    }\r\n  };\r\n\r\n  // Handle declining a seller query\r\n  const handleDecline = async (queryId) => {\r\n    try {\r\n      // Remove the query from the 'sellerQueries' collection\r\n      await deleteDoc(doc(db, \"sellerQueries\", queryId));\r\n\r\n      // Update the UI by removing the declined query\r\n      setQueries((prevQueries) => prevQueries.filter((q) => q.id !== queryId));\r\n      alert(\"Seller query declined.\");\r\n    } catch (e) {\r\n      console.error(\"Error declining seller:\", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <AdminHeader />\r\n      <h2>Seller Queries</h2>\r\n      {queries.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Query ID</th>\r\n              <th>User Name</th>\r\n              <th>Reason</th>\r\n              <th>Submitted At</th>\r\n              <th>ID Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {queries.map((query) => (\r\n              <tr key={query.id}>\r\n                <td>{query.id}</td>\r\n                <td>{query.userName}</td>\r\n                <td>{query.reason}</td>\r\n                <td>{new Date(query.submittedAt.seconds * 1000).toLocaleString()}</td>\r\n                <td>\r\n                  {query.imageUrl ? (\r\n                    <img\r\n                      src={query.imageUrl}\r\n                      alt=\"User ID\"\r\n                      style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n                    />\r\n                  ) : (\r\n                    \"No Image\"\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={() => handleApprove(query)}\r\n                  >\r\n                    Approve\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDecline(query.id)}\r\n                  >\r\n                    Decline\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>No seller queries found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerQueries;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\"; // Import Firebase database and storage configuration\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Footer from \"./Footer\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\n\r\nconst BeSeller = () => {\r\n  // State variables for handling form inputs\r\n  const [reason, setReason] = useState(\"\");  // Reason for wanting to be a seller\r\n  const [image, setImage] = useState(null);  // Selected image file\r\n  const { user } = useUserAuth();  // Access current authenticated user\r\n\r\n  // Handle image file selection\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);  // Set the selected image file\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent default form submission behavior\r\n\r\n    try {\r\n      let imageUrl = \"\";  // Initialize image URL\r\n\r\n      // Upload the image to Firebase Storage and get its URL\r\n      if (image) {\r\n        const imageRef = ref(storage, `sellerImages/${user.uid}_${image.name}`);\r\n        await uploadBytes(imageRef, image);  // Upload the image\r\n        imageUrl = await getDownloadURL(imageRef);  // Get the image URL\r\n      }\r\n\r\n      // Create a new document with seller query data\r\n      const sellerQuery = {\r\n        reason,\r\n        userId: user.uid,\r\n        userName: user.email,\r\n        submittedAt: new Date(),  // Current date and time\r\n        imageUrl,  // URL of the uploaded image\r\n      };\r\n\r\n      await addDoc(collection(db, \"sellerQueries\"), sellerQuery);  // Add document to Firestore\r\n      setReason(\"\");  // Clear the reason input field\r\n      setImage(null);  // Clear the image file\r\n      alert(\"Your request has been submitted.\");  // Notify user of successful submission\r\n    } catch (error) {\r\n      console.error(\"Error submitting request:\", error);  // Log any errors\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <HeaderSwitcher />  {/* Header component that switches based on user role */}\r\n      <h2>Become a Seller</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* Form for submitting a seller request */}\r\n        <Form.Group controlId=\"reason\">\r\n          <Form.Label>Why do you want to be a seller?</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={reason}\r\n            onChange={(e) => setReason(e.target.value)}\r\n            required  // Ensure this field is filled out\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.Label>Upload ID Image</Form.Label>\r\n          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImageChange} required />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Footer />  {/* Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeSeller;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc, query, where, getDocs } from \"firebase/firestore\"; // Import Firestore methods\r\nimport CustomerHeader from \"./Customerheader\"; // Import header component for customer\r\nimport HeaderSwitcher from \"./HeaderSwitcher\"; // Import component to switch headers\r\n\r\nconst CustomerOrders = () => {\r\n  // Access the orders and user data from context\r\n  const { orders } = useProductcontext(); // Get orders from the product context\r\n  const { user } = useUserAuth(); // Get authenticated user from context\r\n  \r\n  // State to hold customer orders and review data\r\n  const [customerOrders, setCustomerOrders] = useState([]); // Holds fetched orders for the customer\r\n  const [selectedProductForReview, setSelectedProductForReview] = useState(null); // Selected product to review\r\n  const [showReviewModal, setShowReviewModal] = useState(false); // Control visibility of review modal\r\n  const [reviewContent, setReviewContent] = useState(\"\"); // Content of the review\r\n\r\n  // Fetch orders from Firestore when the component mounts or user changes\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      if (user && user.uid) {\r\n        try {\r\n          console.log(\"Fetching orders for user:\", user.uid); // Log the UID for debugging\r\n          \r\n          // Query Firestore for orders belonging to the logged-in user\r\n          const ordersQuery = query(\r\n            collection(db, \"checkout\"),\r\n            where(\"userId\", \"==\", user.uid) // Filter by the user's UID\r\n          );\r\n          const querySnapshot = await getDocs(ordersQuery);\r\n          \r\n          // Map the fetched documents to a more manageable format\r\n          const userOrders = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          console.log(\"Fetched Orders:\", userOrders); // Log fetched orders for debugging\r\n\r\n          setCustomerOrders(userOrders); // Save orders to state\r\n        } catch (error) {\r\n          console.error(\"Error fetching orders:\", error); // Log any errors during fetch\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchOrders(); // Call the fetch function when component mounts or user changes\r\n  }, [user]);\r\n\r\n  // Handle the review submission\r\n  const handleSubmitReview = async () => {\r\n    if (reviewContent.trim()) {\r\n      try {\r\n        // Ensure that a product name is available\r\n        if (!selectedProductForReview || !selectedProductForReview.productName) {\r\n          console.error(\"Product name is missing from the item:\", selectedProductForReview);\r\n          alert(\"Cannot submit review: Product name is missing.\");\r\n          return; // Exit if product name is missing\r\n        }\r\n\r\n        // Add the review to the Firestore collection\r\n        await addDoc(collection(db, \"reviews\"), {\r\n          productName: selectedProductForReview.productName, // Include product name in review\r\n          userId: user.uid, // Include user ID to track who wrote the review\r\n          content: reviewContent, // The actual review content\r\n          customerName: user.displayName || user.email, // Get the user's name or email\r\n          createdAt: new Date(), // Timestamp of the review\r\n        });\r\n        alert(\"Review submitted successfully!\"); // Notify user of success\r\n        setReviewContent(\"\"); // Clear review input field\r\n        setShowReviewModal(false); // Close the modal\r\n      } catch (error) {\r\n        console.error(\"Error submitting review:\", error); // Log errors during review submission\r\n      }\r\n    }\r\n  };\r\n\r\n  // Set the product to be reviewed and show the review modal\r\n  const handleLeaveReview = (item) => {\r\n    console.log(\"Selected item for review:\", item); // Log the selected item for debugging\r\n    if (!item.productName) {\r\n      console.error(\"Product name is missing from the item:\", item);\r\n      alert(\"Cannot leave a review for this product: Product name is missing.\");\r\n      return; // Exit if product name is missing\r\n    }\r\n\r\n    setSelectedProductForReview(item); // Set the product for review\r\n    setShowReviewModal(true); // Show the review modal\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70}}>\r\n      <HeaderSwitcher /> {/* Switch header based on user context */}\r\n      <h2>My Orders</h2>\r\n      <div className=\"table-container\">\r\n        {/* Display orders in a table format */}\r\n        {customerOrders.length > 0 ? (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerOrders.map((order, orderIndex) =>\r\n                order.items.map((item, itemIndex) => (\r\n                  <tr key={`${order.id}-${item.productName || itemIndex}`}> {/* Key for each row */}\r\n                    <td>{order.id}</td>\r\n                    <td>{item.productName}</td>\r\n                    <td>{item.productPrice.toFixed(2)}</td>\r\n                    <td>{order.status}</td>\r\n                    \r\n                    <td>\r\n                      {/* Show 'Leave Review' button if the order is complete */}\r\n                      {order.status === \"complete\" && (\r\n                        <Button onClick={() => handleLeaveReview(item)}>\r\n                          Leave Review\r\n                        </Button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p>No orders found.</p> // Message if no orders are available\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for submitting a review */}\r\n      <Modal show={showReviewModal} onHide={() => setShowReviewModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Leave a Review for {selectedProductForReview ? selectedProductForReview.productName : \"Product\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"reviewContent\">\r\n              <Form.Label>Review</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={reviewContent}\r\n                onChange={(e) => setReviewContent(e.target.value)}\r\n                placeholder=\"Write your review here...\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowReviewModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmitReview}>\r\n            Submit Review\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrders;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Furnitures.css';  // Reusing the same CSS for consistent styling\r\n\r\nfunction AllProducts() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOption, setSortOption] = useState('default');\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"products\"));\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = [...filteredProducts];\r\n\r\n    if (sortOption === 'priceLowToHigh') {\r\n      sortedProducts.sort((a, b) => a.productPrice - b.productPrice);\r\n    } else if (sortOption === 'priceHighToLow') {\r\n      sortedProducts.sort((a, b) => b.productPrice - a.productPrice);\r\n    }\r\n\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOption]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2 className=\"text-center\">All Products</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select value={sortOption} onChange={handleSortChange} className=\"form-control\" style={{ maxWidth: '200px', margin: '0 auto' }}>\r\n            <option value=\"default\">Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button className=\"btn add-to-cart mb-2\" onClick={() => handleAddToCart(product)}>\r\n                      Add to Cart\r\n                    </button>\r\n                    <button className=\"btn view-details\" style={{ backgroundColor: '#ff8c00' }} onClick={() => handleShow(product)}>\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n            </div>\r\n\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                          className=\"btn view-details\"\r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleShow(product)}\r\n                          >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllProducts;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Furnitures.css';\r\n\r\nfunction OtherProducts() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOption, setSortOption] = useState('default');  // New state for sorting option\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"other\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sort products based on the selected sort option\r\n    const sortProducts = (products) => {\r\n      if (sortOption === 'priceLowToHigh') {\r\n        return [...products].sort((a, b) => a.productPrice - b.productPrice);\r\n      } else if (sortOption === 'priceHighToLow') {\r\n        return [...products].sort((a, b) => b.productPrice - a.productPrice);\r\n      }\r\n      return products; // Default sorting (no change)\r\n    };\r\n\r\n    setFilteredProducts(sortProducts(filteredProducts));\r\n  }, [sortOption, filteredProducts]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  const handleProductClick = (product) => {\r\n    setSelectedProduct(product);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2 className=\"text-center\">Other Products</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Options */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select\r\n            value={sortOption}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"default\">Sort by Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button className=\"btn add-to-cart mb-2\" onClick={() => handleAddToCart(product)}>\r\n                      Add to Cart\r\n                    </button>\r\n                    <button className=\"btn view-details\" style={{ backgroundColor: '#ff8c00' }} onClick={() => handleShow(product)}>\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No products found in this category.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n            </div>\r\n\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Display Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      {product.imageUrls && product.imageUrls[0] && (\r\n                        <img\r\n                          src={product.imageUrls[0]}\r\n                          alt={product.productName}\r\n                          style={{ width: '100%', height: 'auto' }}\r\n                        />\r\n                      )}\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                          className=\"btn view-details\"\r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleProductClick(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OtherProducts;\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Signup from \"./components/Signup\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport Furnitures from './components/Furnitures';\r\nimport Homewares from './components/Homewares';\r\nimport Cart from './components/Cart';\r\nimport Wishlist from './components/Wishlist';\r\nimport Electricalgoods from './components/Electricalgoods';\r\nimport { UserAuthContextProvider } from \"./context/UserAuthContext\";  \r\nimport { ProductContextProvider } from \"./context/Productcontext\";\r\nimport { CartContextProvider } from \"./context/Cartcontext\";\r\nimport { WishlistContextProvider } from './context/Wishlistcontext';\r\nimport { ReviewProvider } from './context/ReviewContext'; \r\nimport AboutUs from './components/AboutUs';\r\nimport ReturnAndRefundPolicy from './components/ReturnRefundPolicy';\r\nimport ContactUs from './components/ContactUs';\r\nimport Addproducts from './components/Addproducts';\r\nimport ProtectedRoute, { AdminRoute, SellerRoute, CustomerRoute } from \"./components/ProtectedRoute\";\r\nimport Checkout from './components/Checkout';\r\nimport ManageUsers from './components/ManageUsers';\r\nimport SellerDashboard from './components/SellerDashboard';\r\nimport ManageProducts from './components/ManageProduct';\r\nimport MyListings from './components/MyListing';\r\nimport Orders from './components/Orders';\r\nimport SellerQueries from './components/SellerQueries';\r\nimport BeSeller from './components/BeSeller';\r\nimport CustomerHeader from './components/Customerheader';\r\nimport CustomerOrders from './components/CustomerOrders'; \r\nimport AllProducts from './components/Allproducts';\r\nimport OtherProducts from './components/Otherproducts';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <UserAuthContextProvider>\r\n      <ProductContextProvider>\r\n        <CartContextProvider>\r\n          <WishlistContextProvider>\r\n            <ReviewProvider>\r\n        \r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/aboutus\" element={<AboutUs />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/signup\" element={<Signup />} />\r\n                <Route path=\"/customer\" element={<CustomerRoute><Dashboard /></CustomerRoute>} />\r\n                <Route path=\"/admin\" element={<AdminRoute><AdminDashboard /></AdminRoute>} />\r\n                <Route path=\"/Furnitures\" element={<Furnitures/>} />\r\n                <Route path=\"/Homewares\" element={<Homewares/>} />\r\n                <Route path=\"/Electricalgoods\" element={<Electricalgoods/>} />\r\n                <Route path=\"/Cart\" element={<Cart/>} />\r\n                <Route path=\"/return-refund-policy\" element={<ReturnAndRefundPolicy/>} />\r\n                <Route path=\"/contactus\" element={<ContactUs/>} />\r\n                <Route path=\"/Allproducts\" element={<AllProducts />} />\r\n                <Route path=\"/Otherproducts\" element={<OtherProducts />} />\r\n                <Route path=\"/addproduct\" element={<SellerRoute><Addproducts/></SellerRoute>} />\r\n                <Route path=\"/Wishlist\" element={<Wishlist/>} />\r\n                <Route path=\"/checkout\" element={<Checkout/>} />\r\n                <Route path=\"/manageusers\" element={<AdminRoute><ManageUsers/></AdminRoute>} />\r\n                <Route path=\"/seller\" element={<SellerRoute><SellerDashboard/></SellerRoute>}/>\r\n                <Route path=\"/manageproduct\" element={<AdminRoute><ManageProducts/></AdminRoute>}/>\r\n                <Route path=\"/mylistings\" element={<SellerRoute><MyListings/></SellerRoute>}/>\r\n                <Route path=\"/orders\" element={<SellerRoute><Orders/></SellerRoute>}/>\r\n                <Route path=\"/sellerqueries\" element={<AdminRoute><SellerQueries/></AdminRoute>}/>\r\n                <Route path=\"/beseller\" element={<CustomerRoute><BeSeller/></CustomerRoute>}/>\r\n                <Route path=\"/customer-orders\" element={<CustomerOrders />} /> \r\n\r\n              </Routes>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        </ReviewProvider>\r\n        </WishlistContextProvider>\r\n        </CartContextProvider>\r\n      </ProductContextProvider>\r\n    </UserAuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';  // Correct import statement for App component\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
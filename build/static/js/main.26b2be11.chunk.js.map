{"version":3,"sources":["reportWebVitals.js","components/Loadingpage.js","components/Header.js","components/Footer.js","firebase.js","context/Productcontext.js","components/Home.js","context/FBService.js","context/UserAuthContext.js","components/Login.js","components/Signup.js","components/UserProfile.js","components/Customerheader.js","components/Dashboard.js","components/Adminheader.js","context/CheckoutServices.js","context/ReviewContext.js","components/Reviews.js","components/AdminDashboard.js","components/SellerHeader.js","components/HeaderSwitcher.js","context/Cartcontext.js","context/Wishlistcontext.js","components/Furnitures.js","components/Homewares.js","components/Cart.js","components/Wishlist.js","components/Electricalgoods.js","components/AboutUs.js","components/ReturnRefundPolicy.js","context/Contactusservice.js","components/ContactUs.js","components/Addproducts.js","components/ProtectedRoute.js","components/Checkout.js","components/ManageUsers.js","components/SellerDashboard.js","components/ManageProduct.js","components/MyListing.js","components/Orders.js","components/SellerQueries.js","components/BeSeller.js","components/CustomerOrders.js","components/Allproducts.js","components/Otherproducts.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","LoadingPage","onTimeout","visible","setVisible","useState","useEffect","timer","setTimeout","clearTimeout","React","createElement","className","Header","Navbar","expand","Container","Brand","href","style","marginTop","Toggle","aria-controls","Collapse","id","Nav","NavDropdown","title","Item","Link","Button","variant","Footer","data-bs-theme","height","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","db","getFirestore","storage","getStorage","ProductContext","createContext","ProductContextProvider","children","products","setProducts","orders","setOrders","async","productsArray","getDocs","collection","docs","map","doc","data","console","log","e","error","fetchProducts","ordersArray","fetchOrders","Provider","value","addProduct","product","newProduct","addDoc","prevProducts","updateProduct","productId","updatedProduct","deleteProduct","deleteDoc","filter","updateOrderStatus","orderId","status","orderRef","updateDoc","prevOrders","order","useProductcontext","useContext","Home","trendingProducts","setTrendingProducts","selectedProduct","setSelectedProduct","show","setShow","loading","setLoading","length","shuffled","sort","Math","random","slice","handleClose","sliderSettings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","Row","Col","md","key","Slider","imageUrls","url","index","src","alt","productName","objectFit","borderRadius","productPrice","productDescription","onClick","handleShow","Modal","onHide","size","closeButton","Title","Body","Carousel","productDetailedDescription","sellerUsername","constructor","addData","newData","setData","setDoc","updateData","docRef","deleteData","getAllData","usersCollection","getData","getDoc","userAuthContext","UserAuthContextProvider","user","setUser","role","setRole","unsubscribe","onAuthStateChanged","currentUser","userDoc","FBDataService","uid","exists","logIn","email","password","signInWithEmailAndPassword","signUp","createUserWithEmailAndPassword","logOut","signOut","googleSignIn","googleAuthProvider","GoogleAuthProvider","signInWithPopup","useUserAuth","Login","setEmail","setPassword","setError","image","setImage","navigate","useNavigate","imageRef","ref","getDownloadURL","fetchImage","handleRoleBasedRedirect","userRole","Fragment","Alert","Form","onSubmit","preventDefault","userCredential","err","message","Group","controlId","Control","type","placeholder","onChange","target","GoogleButton","to","Signup","confirmPassword","setConfirmPassword","name","setName","mobile","setMobile","username","setUsername","timeout","createdAt","Date","toISOString","required","UserProfile","userProfile","setUserProfile","showModal","setShowModal","updatedProfile","setUpdatedProfile","fetchUserProfile","handleChange","handleEdit","width","Label","CustomerHeader","borderColor","Dashboard","userName","setUserName","userData","fetchUserName","AdminHeader","backgroundImage","checkoutCollectionRef","addCheckout","newCheckout","userId","paymentId","getAllCheckouts","getCheckout","checkoutDoc","ReviewContext","ReviewProvider","reviews","setReviews","fetchAllReviews","allReviews","Reviews","showReviews","setShowReviews","fetchReviews","Table","striped","bordered","hover","review","content","customerName","seconds","toLocaleDateString","AdminDashboard","totalServerFees","setTotalServerFees","totalProductsSold","setTotalProductsSold","querySnapshot","CheckoutService","totalFees","totalProducts","forEach","checkoutData","serverFee","parseFloat","itemsSold","items","toFixed","fetchCheckoutData","SellerHeader","HeaderSwitcher","CartContext","CartContextProvider","cartItems","setCartItems","docSnap","fetchCartItems","addToCart","alert","displayName","newCartItem","existingItems","some","item","updatedItems","removeFromCart","useCartContext","WishlistContext","WishlistContextProvider","wishlist","setWishlist","fetchWishlist","addToWishlist","newWishlistItem","removeFromWishlist","useWishlistContext","Furnitures","filteredProducts","setFilteredProducts","similarProducts","setSimilarProducts","searchTerm","setSearchTerm","sortOption","setSortOption","priceRange","setPriceRange","min","max","quantity","setQuantity","q","query","where","sortedProducts","a","b","handlePriceChange","event","parseInt","fetchSimilarProducts","category","reviewsArray","toLowerCase","filtered","includes","maxWidth","margin","marginRight","filterByPrice","scrollable","htmlFor","marginLeft","comment","rating","handleAddToCart","Homewares","sortOrder","setSortOrder","_product$sellerUserna","backgroundColor","maxHeight","overflowY","ReactImageMagnify","smallImage","isFluidWidth","largeImage","enlargedImagePosition","isHintEnabled","handleAddToWishlist","color","handleProductClick","Cart","selectedProductIds","setSelectedProductIds","totalPrice","setTotalPrice","total","p","reduce","sum","Card","Img","Text","handleBuyNow","prevSelected","handleCheckout","selectedProducts","sellerId","state","disabled","Wishlist","Electricalgoods","sortProducts","AboutUs","ReturnAndRefundPolicy","policyImage","setPolicyImage","contactCollectionRef","addContact","newContact","getAllContacts","getContact","contactDoc","ContactUs","subject","setSubject","setMessage","feedback","setFeedback","msg","dismissible","onClose","contactData","Contactusservice","InputGroup","as","rows","Addproducts","setProductName","setProductDescription","setProductDetailedDescription","setProductPrice","setCategory","images","setImages","setImageUrls","progress","setProgress","successMessage","setSuccessMessage","Error","Number","split","sellerEmail","files","multiple","handleImageUpload","uploadPromises","storageRef","uploadTask","uploadBytesResumable","Promise","resolve","reject","on","snapshot","round","bytesTransferred","totalBytes","downloadURL","prev","all","catch","finally","AdminRoute","_ref2","Navigate","SellerRoute","_ref3","CustomerRoute","_ref4","Checkout","_location$state","discountCode","setDiscountCode","appliedDiscount","setAppliedDiscount","cardNumber","setCardNumber","address","setAddress","city","setCity","region","setRegion","zipCode","setZipCode","country","setCountry","subTotal","setSubTotal","discount","setDiscount","setServerFee","totalCost","setTotalCost","showErrorModal","setShowErrorModal","missingFields","setMissingFields","useLocation","subtotal","acc","serverValue","discountCodes","handleSubmit","push","char","String","fromCharCode","charCodeAt","join","simpleEncrypt","maxLength","handleApplyDiscount","discountPercentage","toUpperCase","discountValue","newTotalCost","handleRemoveDiscount","formattedValue","replace","handleCardNumberChange","textAlign","field","ManageUsers","customers","setCustomers","sellers","setSellers","searchQuery","setSearchQuery","users","fetchUsers","handleRoleChange","newRole","userToUpdate","find","handleDeleteUser","filteredCustomers","filteredSellers","FormControl","Select","SellerDashboard","totalEarnings","setTotalEarnings","fetchEarningsData","price","fetchUserData","ManageProducts","productList","setProductList","currentProduct","setCurrentProduct","categories","handleDelete","handleSave","MyListings","sellerProducts","setSellerProducts","showEditModal","setShowEditModal","showDetailsModal","setShowDetailsModal","handleProductDetailsClick","handleEditClick","handleDeleteClick","Orders","sellerOrders","setSellerOrders","filteredOrders","itemIndex","matchedCheckout","checkout","itemDetails","profit","cursor","handleStatusChange","SellerQueries","queries","setQueries","queriesArray","fetchQueries","reason","submittedAt","toLocaleString","imageUrl","userRef","prevQueries","handleApprove","queryId","handleDecline","BeSeller","setReason","uploadBytes","sellerQuery","accept","CustomerOrders","customerOrders","setCustomerOrders","selectedProductForReview","setSelectedProductForReview","showReviewModal","setShowReviewModal","reviewContent","setReviewContent","ordersQuery","userOrders","orderIndex","handleLeaveReview","trim","AllProducts","OtherProducts","App","Routes","Route","path","element","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.26b2be11.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Loadingpage.css\";\r\n\r\nconst LoadingPage = ({ onTimeout }) => {\r\n  const [visible, setVisible] = useState(true); // State to control visibility\r\n\r\n  useEffect(() => {\r\n    // Set a timer to hide the loading screen\r\n    const timer = setTimeout(() => {\r\n      setVisible(false);\r\n      if (onTimeout) onTimeout(); // Trigger callback after timeout, if provided\r\n    }, 10000); // 10000ms = 10 seconds\r\n\r\n    // Clear the timer on component unmount\r\n    return () => clearTimeout(timer);\r\n  }, [onTimeout]);\r\n\r\n  // Don't render anything if loading is not visible\r\n  if (!visible) return null;\r\n\r\n  return (\r\n    <div className=\"loading-wrapper\">\r\n      <div className=\"loading-spinner\"></div>\r\n      <h2 className=\"loading-text\">Loading, please wait...</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingPage;\r\n","  import React from 'react';\r\n  import Container from 'react-bootstrap/Container';\r\n  import Nav from 'react-bootstrap/Nav';\r\n  import Navbar from 'react-bootstrap/Navbar';\r\n  import NavDropdown from 'react-bootstrap/NavDropdown';\r\n  import Button from 'react-bootstrap/Button';\r\n  import '../css/Header.css';  // Ensure this file includes your CSS class\r\n  import LoadingPage from './Loadingpage';\r\n\r\n  function Header() {\r\n    \r\n    return (\r\n      <Navbar expand=\"lg\" className='Header' >\r\n        <Container className='Navbar'>\r\n          <Navbar.Brand href=\"/\" className=\"protest-guerrilla-regular\" style={{marginTop: 8}}>\r\n            Eco Shop\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" className=\"navbar-toggler\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </Navbar.Toggle>\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"/Otherproducts\">Other products</NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n              <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n          \r\n              \r\n              <Nav.Link href=\"/login\">\r\n                <Button variant=\"outline-light\" className=\"login-button\">\r\n                  Login\r\n                </Button>\r\n              </Nav.Link>\r\n              <Nav.Link href=\"/signup\">\r\n                <Button variant=\"light\" className=\"signup-button\">\r\n                  Signup\r\n                </Button>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\nexport default Header;","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport '../css/Footer.css'; // Ensure this file includes necessary styles\r\n\r\n\r\nfunction Footer() {\r\n    // Show loading page while data is being fetched\r\n\r\n    return (\r\n        <Navbar data-bs-theme='dark' style={{ height: '80px' }} className='Footer'>\r\n            <Container className=\"d-flex flex-column align-items-center\">\r\n                <Nav className=\"mx-auto mb-3\">\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/aboutus\" title=\"Learn more about us\">About Us</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/return-refund-policy\" title=\"View our return and refund policy\">Return & Refund Policy</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/contactus\" title=\"Get in touch with us\">Contact Us</Nav.Link>\r\n                    </Nav.Item>\r\n                    <Nav.Item>\r\n                        <Nav.Link href=\"/beseller\" title=\"Become a seller on Eco Shop\">Be Seller</Nav.Link>\r\n                    </Nav.Item>\r\n                </Nav>\r\n                <p className=\"Copyright\">Copyright &copy; 2024 Eco Shop</p>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyA8rjGG3MIYtDjSnZRDaIKnCD6l46ybW-Y\",\r\n  authDomain: \"eco-shop-60df7.firebaseapp.com\",\r\n  projectId: \"eco-shop-60df7\",\r\n  storageBucket: \"eco-shop-60df7.appspot.com\",\r\n  messagingSenderId: \"292693377073\",\r\n  appId: \"1:292693377073:web:3a88b142c8a2889242d510\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firebase Authentication and get a reference to the service\r\nexport const auth = getAuth(app);\r\n// Initialize Firestore and get a reference to the service\r\nexport const db = getFirestore(app);\r\nexport const storage =  getStorage(app);\r\nexport default app;\r\n","import React from 'react';\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, getDocs, addDoc, deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nconst ProductContext = createContext();\r\n\r\nexport function ProductContextProvider({ children }) {\r\n  const [products, setProducts] = useState([]);\r\n  const [orders, setOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"products\"));\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        console.log(\"Fetched Products:\", productsArray);\r\n        setProducts(productsArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching products:\", e);\r\n      }\r\n    };\r\n\r\n    const fetchOrders = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"checkout\"));\r\n        const ordersArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setOrders(ordersArray);\r\n      } catch (e) {\r\n        console.error(\"Error fetching orders:\", e);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n    fetchOrders();\r\n  }, []);\r\n\r\n  async function addProduct(product) {\r\n    try {\r\n      const docRef = await addDoc(collection(db, \"products\"), product);\r\n      const newProduct = {\r\n        id: docRef.id,\r\n        ...product,\r\n      };\r\n      setProducts((prevProducts) => [...prevProducts, newProduct]);\r\n    } catch (e) {\r\n      console.error(\"Error adding product:\", e);\r\n    }\r\n  }\r\n\r\n  function updateProduct(productId, updatedProduct) {\r\n    setProducts((prevProducts) =>\r\n      prevProducts.map((product) =>\r\n        product.id === productId ? { ...product, ...updatedProduct } : product\r\n      )\r\n    );\r\n  }\r\n\r\n  async function deleteProduct(productId) {\r\n    try {\r\n      await deleteDoc(doc(db, \"products\", productId));\r\n      setProducts((prevProducts) =>\r\n        prevProducts.filter((product) => product.id !== productId)\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error deleting product:\", e);\r\n    }\r\n  }\r\n\r\n  async function updateOrderStatus(orderId, status) {\r\n    try {\r\n      const orderRef = doc(db, \"checkout\", orderId);\r\n      await updateDoc(orderRef, { status });\r\n      setOrders((prevOrders) =>\r\n        prevOrders.map((order) =>\r\n          order.id === orderId ? { ...order, status } : order\r\n        )\r\n      );\r\n    } catch (e) {\r\n      console.error(\"Error updating order status:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ProductContext.Provider\r\n      value={{ products, addProduct, updateProduct, deleteProduct, orders, updateOrderStatus }}\r\n    >\r\n      {children}\r\n    </ProductContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useProductcontext() {\r\n  return useContext(ProductContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport LoadingPage from \"./Loadingpage\"; // Ensure the path is correct\r\n\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport \"../css/Home.css\";\r\n\r\nfunction Home() {\r\n  const { products } = useProductcontext();\r\n  const [trendingProducts, setTrendingProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      const shuffled = [...products].sort(() => 0.5 - Math.random());\r\n      setTrendingProducts(shuffled.slice(0, 3));\r\n      setLoading(false); // Data is loaded\r\n    }\r\n  }, [products]);\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const sliderSettings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    autoplay: true,\r\n    autoplaySpeed: 3000,\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      <Container className=\"Home\">\r\n        <Row className=\"align-items-center mt-5\">\r\n          <Col md={12} className=\"d-flex align-items-center justify-content-center\">\r\n            <h3 className=\"text-center\">\r\n              If you're ever in the market for any furniture,\r\n              <br />\r\n              homewares, electrical goods, and more,\r\n              <br />\r\n              make the Eco Shop your first-stop shop!\r\n            </h3>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row>\r\n          <h4 className=\"trending-title\">Trending Products</h4>\r\n          {trendingProducts.map((product) => (\r\n            <Col key={product.id} md={4} className=\"mb-4\">\r\n              <div className=\"card text-center product-card\">\r\n                <Slider {...sliderSettings}>\r\n                  {product.imageUrls &&\r\n                    product.imageUrls.map((url, index) => (\r\n                      <div key={index}>\r\n                        <img\r\n                          src={url}\r\n                          alt={product.productName}\r\n                          className=\"card-img-top\"\r\n                          style={{\r\n                            height: \"200px\",\r\n                            objectFit: \"cover\",\r\n                            borderRadius: \"5px\",\r\n                          }}\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                </Slider>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title mt-3\">{product.productName}</h5>\r\n                  <p className=\"card-text\">\r\n                    <strong>Price: ${product.productPrice}</strong>\r\n                  </p>\r\n                  <p className=\"card-text\">{product.productDescription}</p>\r\n                  <Button\r\n                    variant=\"warning\"\r\n                    onClick={() => handleShow(product)}\r\n                  >\r\n                    View Details\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n      <Footer />\r\n\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Row>\r\n              <Col md={6}>\r\n                {selectedProduct.imageUrls &&\r\n                  selectedProduct.imageUrls.length > 0 && (\r\n                    <Carousel>\r\n                      {selectedProduct.imageUrls.map((url, index) => (\r\n                        <Carousel.Item key={index}>\r\n                          <img\r\n                            className=\"d-block w-100\"\r\n                            src={url}\r\n                            alt={`Product ${index + 1}`}\r\n                            style={{\r\n                              height: \"300px\",\r\n                              objectFit: \"cover\",\r\n                              borderRadius: \"5px\",\r\n                            }}\r\n                          />\r\n                        </Carousel.Item>\r\n                      ))}\r\n                    </Carousel>\r\n                  )}\r\n              </Col>\r\n              <Col md={6}>\r\n                <p>{selectedProduct.productDescription}</p>\r\n                <p className=\"product-price\">\r\n                  <strong>Price:</strong> ${selectedProduct.productPrice}\r\n                </p>\r\n                <p className=\"product-description\">\r\n                  {selectedProduct.productDetailedDescription}\r\n                </p>\r\n                <p className=\"product-seller-username\">\r\n                  <strong>Seller Username:</strong>{\" \"}\r\n                  {selectedProduct.sellerUsername || \"Unknown\"}\r\n                </p>\r\n              </Col>\r\n            </Row>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button\r\n              variant=\"warning\"\r\n              onClick={() => console.log(\"Add to Wishlist clicked!\")}\r\n            >\r\n              Add to Wishlist\r\n            </Button>\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => console.log(\"Add to Cart clicked!\")}\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { db } from \"../firebase\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc, setDoc, getDoc } from \"firebase/firestore\";\r\n\r\nconst collectionName = \"users\";\r\n\r\nclass FBDataService {\r\n  addData = (newData) => {\r\n    return addDoc(collection(db, collectionName), newData);\r\n  };\r\n\r\n  setData = (newData) => {\r\n    return setDoc(doc(db, collectionName, newData.id), newData);\r\n  };\r\n\r\n  updateData = (id, newData) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return updateDoc(docRef, newData);\r\n  };\r\n  \r\n  deleteData = (id) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return deleteDoc(docRef);\r\n  };\r\n\r\n  getAllData = async () => {\r\n    const usersCollection = collection(db, collectionName);\r\n    return await getDocs(usersCollection);\r\n  };\r\n\r\n  getData = (id) => {\r\n    const docRef = doc(db, collectionName, id);\r\n    return getDoc(docRef);\r\n  };\r\n}\r\n\r\nexport default new FBDataService();\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  onAuthStateChanged,\r\n  signOut,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport React from 'react';\r\nimport { auth } from \"../firebase\";\r\nimport FBDataService from \"../context/FBService\";\r\n\r\nconst userAuthContext = createContext();\r\n\r\nexport function UserAuthContextProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n  const [role, setRole] = useState(\"\"); \r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function logIn(email, password) {\r\n    return signInWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function signUp(email, password) {\r\n    return createUserWithEmailAndPassword(auth, email, password);\r\n  }\r\n\r\n  function logOut() {\r\n    return signOut(auth).then(() => {\r\n      setRole(null);\r\n      setUser(null);\r\n    });\r\n  }\r\n\r\n  function googleSignIn() {\r\n    const googleAuthProvider = new GoogleAuthProvider();\r\n    return signInWithPopup(auth, googleAuthProvider);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, async (currentUser) => {\r\n      if (currentUser) {\r\n        setUser(currentUser);\r\n\r\n        try {\r\n          const userDoc = await FBDataService.getData(currentUser.uid);\r\n          if (userDoc.exists()) {\r\n            setRole(userDoc.data().role || \"\");\r\n          } else {\r\n            console.error(\"User document does not exist\");\r\n            setRole(null);\r\n            setUser(null);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user role:\", error);\r\n          setRole(null);\r\n          setUser(null);\r\n        }\r\n      } else {\r\n        setRole(null);\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <userAuthContext.Provider value={{ user, role, logIn, signUp, logOut, googleSignIn }}>\r\n      {children}\r\n    </userAuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useUserAuth() {\r\n  return useContext(userAuthContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Alert } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport GoogleButton from \"react-google-button\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport FBDataService from \"../context/FBService\"; // Service to fetch user data from Firebase\r\nimport \"../css/Login.css\"; // Custom CSS for login page\r\nimport { getDownloadURL, getStorage, ref } from \"firebase/storage\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\"); // State for email input\r\n  const [password, setPassword] = useState(\"\"); // State for password input\r\n  const [error, setError] = useState(\"\"); // State for error messages\r\n  const [image, setImage] = useState(\"\"); // State for storing the login image URL\r\n  const { logIn, googleSignIn } = useUserAuth(); // Destructure login functions from context\r\n  const navigate = useNavigate(); // Hook for navigation\r\n  const [loading, setLoading] = useState(true); // State for loading status\r\n\r\n  // Initialize Firebase Storage to get images\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the login image from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        const imageRef = ref(storage, \"images/login.png\"); // Reference to login image\r\n        const url = await getDownloadURL(imageRef); // Fetch the image URL\r\n        setImage(url); // Set the image URL for rendering\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error); // Log any error\r\n      } finally {\r\n        setLoading(false); // Stop loading after image fetch\r\n      }\r\n    };\r\n    fetchImage(); // Call the fetch function\r\n  }, [storage]);\r\n\r\n  // Handle role-based navigation after login\r\n  const handleRoleBasedRedirect = async (uid) => {\r\n    try {\r\n      const userDoc = await FBDataService.getData(uid); // Fetch user data by UID\r\n      if (userDoc.exists()) {\r\n        const userRole = userDoc.data().role;\r\n        // Redirect based on user role\r\n        if (userRole === \"admin\") {\r\n          navigate(\"/admin\");\r\n        } else if (userRole === \"seller\") {\r\n          navigate(\"/seller\");\r\n        } else if (userRole === \"customer\") {\r\n          navigate(\"/customer\");\r\n        } else {\r\n          setError(\"Role not recognized.\"); // Handle unknown roles\r\n        }\r\n      } else {\r\n        setError(\"User data not found.\"); // Handle missing user data\r\n      }\r\n    } catch (error) {\r\n      setError(\"Error fetching user data.\"); // Handle errors during user data fetch\r\n    }\r\n  };\r\n\r\n  // Handle form submission for email/password login\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault(); // Prevent default form submission behavior\r\n    setError(\"\"); // Clear previous errors\r\n    try {\r\n      const userCredential = await logIn(email, password); // Attempt login\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect after login\r\n    } catch (err) {\r\n      setError(err.message); // Show error message\r\n    }\r\n  };\r\n\r\n  // Handle Google sign-in\r\n  const handleGoogleSignIn = async (e) => {\r\n    e.preventDefault(); // Prevent default behavior\r\n    try {\r\n      const userCredential = await googleSignIn(); // Attempt Google sign-in\r\n      await handleRoleBasedRedirect(userCredential.user.uid); // Redirect after login\r\n    } catch (error) {\r\n      setError(error.message); // Show error message\r\n    }\r\n  };\r\n\r\n  // Show loading page if still loading\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header /> {/* Header for the login page */}\r\n      <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n        <h2>Login</h2> {/* Page Title */}\r\n        <div className=\"login-container\">\r\n          <div className=\"image-section\">\r\n            {/* Display fetched image or fallback message */}\r\n            {image ? (\r\n              <img src={image} alt=\"Login\" className=\"login-image\" />\r\n            ) : (\r\n              <p>Loading Image...</p>\r\n            )}\r\n          </div>\r\n          <div className=\"form-section\">\r\n            <div className=\"p-4 box\">\r\n              {error && <Alert variant=\"danger\">{error}</Alert>} {/* Error Message */}\r\n              <Form onSubmit={handleSubmit}>\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n                  <Form.Control\r\n                    type=\"email\"\r\n                    placeholder=\"Email address\"\r\n                    onChange={(e) => setEmail(e.target.value)} // Set email input\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n                  <Form.Control\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={(e) => setPassword(e.target.value)} // Set password input\r\n                  />\r\n                </Form.Group>\r\n\r\n                <div className=\"d-grid gap-2\">\r\n                  <Button variant=\"primary\" type=\"submit\">\r\n                    Log In\r\n                  </Button>\r\n                </div>\r\n              </Form>\r\n              <hr />\r\n              <div>\r\n                <GoogleButton\r\n                  className=\"g-btn\"\r\n                  type=\"dark\"\r\n                  onClick={handleGoogleSignIn} // Handle Google sign-in\r\n                />\r\n              </div>\r\n              <div className=\"p-4 box mt-3 text-center\">\r\n                Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Footer /> {/* Footer for the login page */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { Form, Alert, Button } from \"react-bootstrap\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport '../css/Signup.css';\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [mobile, setMobile] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [loading, setLoading] = useState(true); // New state for loading\r\n\r\n  const [role] = useState(\"customer\"); // Role is set to 'customer' by default\r\n\r\n  const { signUp } = useUserAuth();\r\n  let navigate = useNavigate();\r\n\r\n  // Simulate a loading delay (e.g., fetching data or pre-loading resources)\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setLoading(false);\r\n    }, 2000); // Simulate 2 seconds of loading\r\n\r\n    return () => clearTimeout(timeout); // Cleanup timeout on component unmount\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    // Check if passwords match\r\n    if (password !== confirmPassword) {\r\n      setError(\"Passwords do not match!\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Sign up the user\r\n      const userCredential = await signUp(email, password);\r\n      const user = userCredential.user;\r\n\r\n      const createdAt = new Date().toISOString(); // Capture the current time as ISO string\r\n      const newData = {\r\n        id: user.uid,\r\n        name,\r\n        email,\r\n        mobile,\r\n        username,\r\n        role,\r\n        createdAt,\r\n      };\r\n\r\n      // Save user profile to Firestore\r\n      await FBDataService.setData(newData);\r\n      console.log(\"User profile created successfully\");\r\n\r\n      // Navigate to login page after successfully saving data\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  // Show loading page while loading\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -130 }}>\r\n      <Header />\r\n      <div className=\"p-4 box\">\r\n        <h2 className=\"mb-3\">Signup</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit}>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicName\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Name\"\r\n              onChange={(e) => setName(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicUsername\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicMobile\">\r\n            <Form.Control\r\n              type=\"text\"\r\n              placeholder=\"Mobile Number\"\r\n              onChange={(e) => setMobile(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n            <Form.Control\r\n              type=\"email\"\r\n              placeholder=\"Email address\"\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <Form.Group className=\"mb-3\" controlId=\"formBasicConfirmPassword\">\r\n            <Form.Control\r\n              type=\"password\"\r\n              placeholder=\"Confirm Password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              required\r\n            />\r\n          </Form.Group>\r\n          <div className=\"d-grid gap-2\">\r\n            <Button variant=\"primary\" type=\"Submit\">\r\n              Sign up\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div className=\"p-4 box mt-3 text-center\">\r\n          Already have an account? <Link to=\"/login\">Log In</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport { Button, Form, Modal, Alert } from \"react-bootstrap\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst UserProfile = () => {\r\n  const { user } = useUserAuth();\r\n  const [userProfile, setUserProfile] = useState(null);\r\n  const [loading, setLoading] = useState(true); // State for loading\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [updatedProfile, setUpdatedProfile] = useState({});\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Fetch the current user's profile when the component mounts\r\n  useEffect(() => {\r\n    const fetchUserProfile = async () => {\r\n      if (!user) {\r\n        setError(\"No current user logged in\");\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const userDoc = await FBDataService.getData(user.uid);\r\n        if (userDoc.exists()) {\r\n          setUserProfile(userDoc.data());\r\n        } else {\r\n          setError(\"User not found.\");\r\n        }\r\n      } catch (err) {\r\n        setError(\"Error fetching user data.\");\r\n      } finally {\r\n        setLoading(false); // Set loading to false after data is fetched\r\n      }\r\n    };\r\n\r\n    fetchUserProfile();\r\n  }, [user]);\r\n\r\n  // Handle opening the edit profile modal\r\n  const handleEdit = () => {\r\n    setUpdatedProfile(userProfile);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Update profile data as the user edits fields\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUpdatedProfile({ ...updatedProfile, [name]: value });\r\n  };\r\n\r\n  // Save updated profile data to Firestore\r\n  const handleSave = async () => {\r\n    try {\r\n      await FBDataService.updateData(user.uid, updatedProfile);\r\n      setUserProfile(updatedProfile); // Update UI with new profile data\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n      {userProfile ? (\r\n        <div>\r\n          <h2>\r\n            <strong>User Profile</strong>\r\n          </h2>\r\n          <p>Name: {userProfile.name}</p>\r\n          <p>Email: {userProfile.email}</p>\r\n          <p>Mobile: {userProfile.mobile}</p>\r\n          <p>Username: {userProfile.username}</p>\r\n          <Button\r\n            variant=\"success\"\r\n            onClick={handleEdit}\r\n            style={{ width: \"150px\" }}\r\n          >\r\n            Edit Profile\r\n          </Button>\r\n\r\n          <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Edit Profile</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group controlId=\"formUserName\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={updatedProfile.name || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formUserMobile\">\r\n                  <Form.Label>Mobile</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"mobile\"\r\n                    value={updatedProfile.mobile || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group controlId=\"formUserUsername\">\r\n                  <Form.Label>Username</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    value={updatedProfile.username || \"\"}\r\n                    onChange={handleChange}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n                Close\r\n              </Button>\r\n              <Button variant=\"primary\" onClick={handleSave}>\r\n                Save Changes\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      ) : (\r\n        <div>User not found.</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfile;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport '../css/Header.css';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nfunction CustomerHeader() {\r\n  // Extract logOut function from the user authentication context\r\n  const { logOut } = useUserAuth();\r\n  // Hook to programmatically navigate to different routes\r\n  const navigate = useNavigate();\r\n\r\n  // Function to handle user logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      // Attempt to log out the user\r\n      await logOut();\r\n      // Redirect user to the login page after successful logout\r\n      navigate('/login');\r\n    } catch (error) {\r\n      // Log any error that occurs during logout for debugging purposes\r\n      console.log(\"Failed to logout: \", error);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'>\r\n      <Container className='Navbar'>\r\n        {/* Branding for the navigation bar */}\r\n        <Navbar.Brand href=\"/customer\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop\r\n        </Navbar.Brand>\r\n        {/* Button to toggle the navigation menu on small screens */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)' }}>\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </Navbar.Toggle>\r\n\r\n        {/* Collapsible navigation links */}\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            {/* Dropdown menu for product categories */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Otherproducts\">Other Products</NavDropdown.Item>\r\n            </NavDropdown>\r\n            {/* Links for purchase orders, becoming a seller, wishlist, and cart */}\r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link>\r\n            <Nav.Link href='/beseller'>Become a Seller</Nav.Link>\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n            \r\n            {/* Button to log out */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default CustomerHeader;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Footer from './Footer'; // Import the Footer component\r\nimport UserProfile from './UserProfile'; // Import the UserProfile component\r\nimport CustomerHeader from './Customerheader'; // Import the CustomerHeader component\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Import user authentication context\r\nimport FBDataService from '../context/FBService'; // Import service for fetching data from Firestore\r\nimport '../css/Dashboard.css'; // Import CSS for dashboard styling\r\nimport LoadingPage from './Loadingpage';\r\nfunction Dashboard() {\r\n    const { user } = useUserAuth(); // Access the currently authenticated user from context\r\n    const [userName, setUserName] = useState(''); // State to hold the user's name\r\n\r\n    // Fetch the user's name when the component mounts\r\n    useEffect(() => {\r\n        const fetchUserName = async () => {\r\n            if (user) {\r\n                try {\r\n                    // Get user data from Firestore using the user's UID\r\n                    const userDoc = await FBDataService.getData(user.uid);\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUserName(userData.name); // Update state with the user's name\r\n                    } else {\r\n                        console.log(\"No such user!\"); // Log if no user document is found\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching user data: ', error); // Log any errors that occur during fetch\r\n                }\r\n            }\r\n        };\r\n\r\n        fetchUserName(); // Call the function to fetch the user's name\r\n    }, [user]); // Re-run this effect if the user changes\r\n\r\n    // Show loading page while data is being fetched\r\n\r\n    return (\r\n        <div className='main-content'>\r\n            <CustomerHeader /> {/* Render the header for the customer */}\r\n            {/* Display a personalized welcome message with the user's name */}\r\n            <h2 className='welcome-message'>Welcome to the Dashboard, {userName}!</h2>\r\n            <div className='user-profile'>\r\n                <UserProfile /> {/* Render the user's profile component */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Import authentication context for handling user actions\r\nimport '../css/Header.css'; // Import custom CSS for header styling\r\n\r\nfunction AdminHeader() {\r\n  const { logOut } = useUserAuth(); // Extract logOut function from the authentication context\r\n  const navigate = useNavigate(); // Hook for navigating to different routes\r\n\r\n  // Function to handle user logout\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logOut(); // Call the logout function from the auth context\r\n      navigate('/login'); // Navigate the user to the login page after successful logout\r\n    } catch (error) {\r\n      console.log(\"Failed to logout: \", error); // Log any errors that occur during the logout process\r\n    }\r\n  };\r\n  // Show loading page while data is being fetched\r\n\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'> {/* Navbar expands on large screens, className applied for custom styles */}\r\n      <Container className='Navbar' style={{marginTop:20}}> {/* Container for aligning navbar content */}\r\n        <Navbar.Brand href=\"/admin\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop {/* Brand or logo with a custom font style */}\r\n        </Navbar.Brand>\r\n\r\n        {/* Navbar toggle button for mobile view with custom styling */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)'  }}>\r\n          <span className=\"navbar-toggler-icon\" style={{ backgroundImage: \"url('data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e')\" }}>\r\n          </span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\"> {/* Collapsible part of the navbar for toggling on small screens */}\r\n          <Nav className=\"ms-auto\"> {/* Align navigation to the right (ms-auto) */}\r\n            \r\n            {/* Admin Dashboard Menu Dropdown */}\r\n            <NavDropdown title=\"Dashboard\" id=\"admin-dashboard-dropdown\">\r\n              <NavDropdown.Item href=\"/admin\">Dashboard</NavDropdown.Item> {/* Links to admin dashboard */}\r\n              <NavDropdown.Item href=\"/manageusers\">Manage Users</NavDropdown.Item> {/* Links to manage users page */}\r\n              <NavDropdown.Item href=\"/sellerqueries\">Seller Queries</NavDropdown.Item> {/* Links to seller queries page */}\r\n            </NavDropdown>\r\n            \r\n            {/* Product Management Menu Dropdown */}\r\n            <NavDropdown title=\"Products\" id=\"product-management-dropdown\">\r\n              <NavDropdown.Item href=\"/manageproduct\">Manage Products</NavDropdown.Item> {/* Links to manage products page */}\r\n              <NavDropdown.Item href=\"/addproduct\">Add Product</NavDropdown.Item> {/* Links to add product page */}\r\n              <NavDropdown.Item href=\"/mylistings\">My Listings</NavDropdown.Item> {/* Links to user's product listings */}\r\n             \r\n            </NavDropdown>\r\n\r\n            <Nav.Link href=\"/orders\">Orders</Nav.Link> {/* Links to orders page */}\r\n\r\n            {/* Category Menu Dropdown */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item> {/* Links to all products page */}\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item> {/* Links to furniture category */}\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item> {/* Links to homewares category */}\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item> {/* Links to electrical goods */}\r\n              <NavDropdown.Item href=\"/Otherproducts\">Other Products</NavDropdown.Item> {/* Links to other products */}\r\n            </NavDropdown>\r\n\r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link> {/* Links to customer orders */}\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n            \r\n            {/* Logout Button */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button> {/* Calls handleLogout when clicked */}\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default AdminHeader;\r\n","import { db } from \"../firebase\";\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  doc,\r\n  getDoc,\r\n  addDoc,\r\n  updateDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst collectionName = \"checkout\";\r\nconst checkoutCollectionRef = collection(db, collectionName);\r\n\r\nclass CheckoutService {\r\n  addCheckout = async (newCheckout, userId) => {\r\n    try {\r\n      console.log(\"userId passed to checkout: \", userId);\r\n      const docRef = await addDoc(checkoutCollectionRef, {\r\n        ...newCheckout,\r\n        userId,\r\n      });\r\n  \r\n      await updateDoc(docRef, { paymentId: docRef.id });\r\n      console.log(\"Document written with ID: \", docRef.id);\r\n    } catch (error) {\r\n      console.error(\"Error adding checkout: \", error);\r\n    }\r\n  };\r\n\r\n\r\n  getAllCheckouts = () => {\r\n    return getDocs(checkoutCollectionRef);\r\n  };\r\n\r\n  getCheckout = (id) => {\r\n    const checkoutDoc = doc(db, collectionName, id);\r\n    return getDoc(checkoutDoc);\r\n  };\r\n}\r\n\r\nexport default new CheckoutService();\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\n\r\nexport const ReviewContext = createContext();\r\n\r\nexport const ReviewProvider = ({ children }) => {\r\n  const [reviews, setReviews] = useState([]);\r\n\r\n  const fetchAllReviews = async () => {\r\n    try {\r\n      const reviewsSnapshot = await getDocs(collection(db, 'reviews'));\r\n      const allReviews = reviewsSnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setReviews(allReviews);\r\n      return allReviews;\r\n    } catch (error) {\r\n      console.error('Error fetching reviews:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllReviews();\r\n  }, []);\r\n\r\n  return (\r\n    <ReviewContext.Provider value={{ reviews, fetchAllReviews }}>\r\n      {children}\r\n    </ReviewContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { ReviewContext } from '../context/ReviewContext';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nconst Reviews = () => {\r\n  const { reviews, fetchAllReviews } = useContext(ReviewContext); // Access all reviews from context\r\n  const { user } = useUserAuth(); // Access authenticated user (admin)\r\n  const [showReviews, setShowReviews] = useState(false); // Show/hide reviews\r\n  const [loading, setLoading] = useState(true); // Loading state for fetching reviews\r\n\r\n  // Fetch all reviews when the component is mounted\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      if (user && user.role === 'admin') {\r\n        try {\r\n          await fetchAllReviews(); // Fetch reviews from context\r\n        } catch (error) {\r\n          console.error('Error fetching reviews:', error);\r\n        } finally {\r\n          setLoading(false); // Stop loading once fetch is complete\r\n        }\r\n      } else {\r\n        setLoading(false); // Stop loading if user is not admin\r\n      }\r\n    };\r\n\r\n    fetchReviews();\r\n  }, [user, fetchAllReviews]);\r\n\r\n  // Show loading page while reviews are being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-4\">\r\n      <h2>All Product Reviews (Admin)</h2>\r\n\r\n      {/* Button to toggle reviews display */}\r\n      <Button size=\"md\" onClick={() => setShowReviews(!showReviews)} className=\"mb-3\">\r\n        {showReviews ? 'Hide Reviews' : 'Show All Reviews'}\r\n      </Button>\r\n\r\n      {/* Display reviews in a table format */}\r\n      {showReviews && reviews.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Product Name</th>\r\n              <th>Review Content</th>\r\n              <th>Customer Name</th>\r\n              <th>Date</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {reviews.map((review) => (\r\n              <tr key={review.id}>\r\n                <td>{review.productName || 'Unknown'}</td>\r\n                <td>{review.content || 'No content'}</td>\r\n                <td>{review.customerName || 'Anonymous'}</td>\r\n                <td>\r\n                  {review.createdAt && review.createdAt.seconds\r\n                    ? new Date(review.createdAt.seconds * 1000).toLocaleDateString()\r\n                    : 'N/A'}\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>{showReviews ? 'No reviews available.' : ''}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reviews;\r\n","import React, { useEffect, useState } from 'react';\r\nimport AdminHeader from './Adminheader';\r\nimport Footer from './Footer';\r\nimport UserProfile from './UserProfile';\r\nimport '../css/AdminDashboard.css';\r\nimport LoadingPage from './Loadingpage';\r\nimport CheckoutService from '../context/CheckoutServices'; // Service for fetching checkout data from Firestore\r\nimport FBDataService from '../context/FBService'; // Service for fetching user data from Firestore\r\nimport { useUserAuth } from '../context/UserAuthContext'; // Hook for getting the currently logged-in user\r\nimport Reviews from './Reviews'; // Reviews component for displaying user feedback or ratings\r\n\r\nfunction AdminDashboard() {\r\n    const [totalServerFees, setTotalServerFees] = useState(0); // State to store the total server fees\r\n    const [totalProductsSold, setTotalProductsSold] = useState(0); // State to store the total number of products sold\r\n    const { user } = useUserAuth(); // Access the current authenticated user using the custom hook\r\n    const [userName, setUserName] = useState(''); \r\n    const [loading, setLoading] = useState(true); // New state\r\n// State to store the current user's name\r\n\r\n    useEffect(() => {\r\n        // Function to fetch checkout data and calculate total server fees and products sold\r\n        const fetchCheckoutData = async () => {\r\n            try {\r\n                const querySnapshot = await CheckoutService.getAllCheckouts(); // Get all checkout documents from Firestore\r\n                \r\n                let totalFees = 0;\r\n                let totalProducts = 0;\r\n\r\n                // Iterate over each checkout document to calculate total fees and count products sold\r\n                querySnapshot.docs.forEach(doc => {\r\n                    const checkoutData = doc.data();\r\n                    \r\n                    // Add server fees, ensuring to handle missing or undefined data\r\n                    const serverFee = parseFloat(checkoutData.serverFee || 0); \r\n                    totalFees += serverFee;\r\n\r\n                    // Count the number of products in each checkout\r\n                    const itemsSold = checkoutData.items ? checkoutData.items.length : 0;\r\n                    totalProducts += itemsSold;\r\n                });\r\n\r\n                // Update state with the calculated totals\r\n                setTotalServerFees(totalFees.toFixed(2)); // Set total server fees, formatted to 2 decimal places\r\n                setTotalProductsSold(totalProducts); // Set total number of products sold\r\n            } catch (error) {\r\n                console.error(\"Error fetching checkout data: \", error); // Log any errors\r\n            }\r\n        };\r\n\r\n        // Function to fetch the name of the currently logged-in user\r\n        const fetchUserName = async () => {\r\n            try {\r\n                if (user) {\r\n                    const userDoc = await FBDataService.getData(user.uid); // Fetch user document from Firestore using UID\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUserName(userData.name); // Set the user's name in state\r\n                    } else {\r\n                        console.log(\"No such user!\"); // Log if no user is found with the given UID\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching user data: ', error); // Log any errors during user data fetching\r\n            }\r\n        };\r\n\r\n        // Fetch checkout data and user name when the component mounts\r\n        fetchCheckoutData();\r\n        fetchUserName();\r\n    }, [user]); // Re-run when the user state changes (e.g., when the user logs in/out)\r\n// Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n    return (\r\n      <div className='main-content' style={{marginTop: -40}}>\r\n        <AdminHeader /> {/* Renders the admin dashboard header */}\r\n        <h2 className='welcome-message'>Welcome to the Admin Dashboard, {userName}!</h2> {/* Display a personalized welcome message */}\r\n        <div className=\"content\">\r\n          <div className=\"user-profile\"><UserProfile /></div> {/* Displays the user profile */}\r\n          <div className=\"dashboard-summary\">\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Server Fees </p>${totalServerFees} {/* Displays the total server fees */}\r\n            </h3>\r\n            <h3 className='summary-box'>\r\n              <p className=\"text\">Total Products Sold </p>{totalProductsSold} {/* Displays the total number of products sold */}\r\n            </h3>\r\n          </div>\r\n        </div>\r\n        <Reviews /> {/* Displays reviews or feedback in the admin dashboard */}\r\n      </div>\r\n    );\r\n}\r\n  \r\nexport default AdminDashboard;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Button from 'react-bootstrap/Button';\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport '../css/Header.css';\r\n\r\nfunction SellerHeader() {\r\n  const { logOut } = useUserAuth();\r\n  const navigate = useNavigate();\r\n\r\n  // Logs out the user and redirects to the login page\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logOut();\r\n      navigate('/login');\r\n    } catch (error) {\r\n      console.log(\"Failed to logout: \", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Navbar expand=\"lg\" className='Header'>\r\n      <Container className='Navbar' style={{marginTop: 20}}>\r\n        {/* Brand logo that links back to the seller's homepage */}\r\n        <Navbar.Brand href=\"/seller\" className=\"protest-guerrilla-regular\" style={{marginTop: 5}}>\r\n          Eco Shop\r\n        </Navbar.Brand>\r\n\r\n        {/* Toggler for responsive navbar */}\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" style={{ borderColor: 'rgba(255, 255, 255, 0.5)' }}>\r\n          <span className=\"navbar-toggler-icon\" style={{ backgroundImage: \"url('data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba(255, 255, 255, 1)' stroke-width='2' stroke-linecap='round' stroke-miterlimit='10' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e')\" }}></span>\r\n        </Navbar.Toggle>\r\n\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"ms-auto\">\r\n            <Nav.Link href=\"/addproduct\">Add Product</Nav.Link>\r\n            <Nav.Link href=\"/mylistings\">My Listings</Nav.Link>\r\n            <Nav.Link href=\"/orders\">Orders</Nav.Link>\r\n\r\n            {/* Dropdown for product categories */}\r\n            <NavDropdown title=\"Category\" id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/Allproducts\">All Products</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Furnitures\">Furnitures</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Homewares\">Homewares</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/Electricalgoods\">Electrical Goods</NavDropdown.Item>\r\n\r\n              <NavDropdown.Item href=\"/Otherproducts\">OtherProducts</NavDropdown.Item>\r\n            </NavDropdown>        \r\n            <Nav.Link href=\"/customer-orders\">Purchase Orders</Nav.Link> \r\n\r\n            <Nav.Link href=\"/cart\">Cart</Nav.Link>\r\n            <Nav.Link href='/Wishlist'>Wishlist</Nav.Link>\r\n\r\n            {/* Logout button */}\r\n            <Button variant=\"outline-light\" onClick={handleLogout}>Logout</Button>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default SellerHeader;\r\n","import React from \"react\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport AdminHeader from \"./Adminheader\"; // Import the header component for admin users\r\nimport SellerHeader from \"./SellerHeader\"; // Import the header component for seller users\r\nimport CustomerHeader from \"./Customerheader\"; // Import the header component for customer users\r\nimport Header from \"./Header\"; // Import the default header component for other users\r\n\r\nconst HeaderSwitcher = () => {\r\n  // Retrieve the current user's role from the authentication context\r\n  const { role } = useUserAuth();\r\n \r\n  return (\r\n    <>\r\n      {/* Render the appropriate header based on the user's role */}\r\n      {role === \"admin\" && <AdminHeader />}       {/* For admin users */}\r\n      {role === \"seller\" && <SellerHeader />}     {/* For seller users */}\r\n      {role === \"customer\" && <CustomerHeader />} {/* For customer users */}\r\n      {role !== \"admin\" && role !== \"seller\" && role !== \"customer\" && <Header />} {/* For users with no specific role */}\r\n      {/* Optionally, you can handle other roles or a default header here */}\r\n    </>\r\n  );\r\n};\r\n \r\nexport default HeaderSwitcher;\r\n","import React from 'react';\r\n\r\nimport { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\n\r\nconst CartContext = createContext();\r\n\r\nexport function CartContextProvider({ children }) {\r\n  const [cartItems, setCartItems] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"cart\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setCartItems(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No cart items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching cart items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchCartItems();\r\n  }, [currentUser]);\r\n\r\n  async function addToCart(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newCartItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInCart = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInCart) {\r\n          alert(\"This product is already in your cart.\");\r\n          return;\r\n        }\r\n\r\n        const updatedItems = [...existingItems, newCartItem];\r\n\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newCartItem] });\r\n        setCartItems([newCartItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to cart:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromCart(productId) {\r\n    try {\r\n      const docRef = doc(db, \"cart\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setCartItems(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from cart:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CartContext.Provider value={{ cartItems, addToCart, removeFromCart }}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useCartContext() {\r\n  return useContext(CartContext);\r\n}\r\n\r\nexport default CartContextProvider;\r\n","import { createContext, useContext, useEffect, useState } from \"react\";\r\nimport { collection, doc, setDoc, getDoc, deleteDoc } from 'firebase/firestore';\r\nimport { db } from '../firebase';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport React from 'react';\r\n\r\nconst WishlistContext = createContext();\r\n\r\nexport function WishlistContextProvider({ children }) {\r\n  const [wishlist, setWishlist] = useState([]);\r\n  const { user: currentUser } = useUserAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchWishlist = async () => {\r\n      if (!currentUser) return;\r\n\r\n      try {\r\n        const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n          setWishlist(docSnap.data().items || []);\r\n        } else {\r\n          console.log(\"No wishlist items found\");\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error fetching wishlist items:\", e);\r\n      }\r\n    };\r\n\r\n    fetchWishlist();\r\n  }, [currentUser]);\r\n\r\n  async function addToWishlist(product) {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    const userName = currentUser.displayName || currentUser.email;\r\n    const newWishlistItem = { ...product, userName };\r\n\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const isAlreadyInWishlist = existingItems.some(item => item.productId === product.productId);\r\n\r\n        if (isAlreadyInWishlist) {\r\n          alert(\"This product is already in your wishlist.\");\r\n        } else {\r\n          const updatedItems = [...existingItems, newWishlistItem];\r\n          await setDoc(docRef, { userId: currentUser.uid, userName, items: updatedItems });\r\n          setWishlist(updatedItems);\r\n        }\r\n      } else {\r\n        await setDoc(docRef, { userId: currentUser.uid, userName, items: [newWishlistItem] });\r\n        setWishlist([newWishlistItem]);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error adding to wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  async function removeFromWishlist(productId) {\r\n    try {\r\n      const docRef = doc(db, \"wishlist\", currentUser.uid);\r\n      const docSnap = await getDoc(docRef);\r\n\r\n      if (docSnap.exists()) {\r\n        const existingItems = docSnap.data().items || [];\r\n        const updatedItems = existingItems.filter(item => item.productId !== productId);\r\n\r\n        await setDoc(docRef, { ...docSnap.data(), items: updatedItems });\r\n        setWishlist(updatedItems);\r\n      }\r\n    } catch (e) {\r\n      console.error(\"Error removing from wishlist:\", e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <WishlistContext.Provider value={{ wishlist, addToWishlist, removeFromWishlist }}>\r\n      {children}\r\n    </WishlistContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useWishlistContext() {\r\n  return useContext(WishlistContext);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db, auth } from \"../firebase\";\r\nimport LoadingPage from './Loadingpage'; // Adjust the path if necessary\r\n\r\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\r\nimport { Modal, Button, Carousel } from \"react-bootstrap\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport Footer from \"./Footer\";\r\nimport { useCartContext } from \"../context/Cartcontext\";\r\nimport { useWishlistContext } from \"../context/Wishlistcontext\";\r\nimport \"../css/Furnitures.css\";\r\n\r\n\r\nfunction Furnitures() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [sortOption, setSortOption] = useState(\"default\");\r\n  const [priceRange, setPriceRange] = useState({ min: 0, max: 1000 });\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [loading, setLoading] = useState(true);\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { wishlist, addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"furniture\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map((doc) => ({\r\n          productId: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = [...filteredProducts];\r\n\r\n    if (sortOption === \"priceLowToHigh\") {\r\n      sortedProducts.sort((a, b) => a.productPrice - b.productPrice);\r\n    } else if (sortOption === \"priceHighToLow\") {\r\n      sortedProducts.sort((a, b) => b.productPrice - a.productPrice);\r\n    }\r\n\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOption]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter((product) =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handlePriceChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setPriceRange({ ...priceRange, [name]: parseInt(value, 10) });\r\n  };\r\n\r\n  const filterByPrice = () => {\r\n    const filtered = products.filter((product) =>\r\n      product.productPrice >= priceRange.min && product.productPrice <= priceRange.max\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleQuantityChange = (event) => {\r\n    const value = parseInt(event.target.value, 10);\r\n    setQuantity(value > 0 ? value : 1);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n    fetchReviews(product.productId);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    addToCart({ ...product, quantity });\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map((doc) => ({\r\n        productId: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  const fetchReviews = async (productId) => {\r\n    try {\r\n      const q = query(collection(db, \"reviews\"), where(\"productId\", \"==\", productId));\r\n      const querySnapshot = await getDocs(q);\r\n      const reviewsArray = querySnapshot.docs.map((doc) => doc.data());\r\n      setReviews(reviewsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching reviews:\", error);\r\n    }\r\n  };\r\n  // Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n\r\n  return (\r\n    \r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{ marginTop: -50 }}>\r\n        <h2 className=\"text-center\">Our Furniture Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: \"400px\", margin: \"0 auto\" }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select\r\n            value={sortOption}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: \"200px\", margin: \"0 auto\" }}\r\n          >\r\n            <option value=\"default\">Sort by Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* Price Range Filter */}\r\n        <div className=\"price-filter text-center mb-4\">\r\n          <label>Min Price: </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"min\"\r\n            value={priceRange.min}\r\n            onChange={handlePriceChange}\r\n            style={{ width: \"80px\", marginRight: \"10px\" }}\r\n          />\r\n          <label>Max Price: </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"max\"\r\n            value={priceRange.max}\r\n            onChange={handlePriceChange}\r\n            style={{ width: \"80px\", marginRight: \"10px\" }}\r\n          />\r\n          <button className=\"btn btn-primary\" onClick={filterByPrice}>\r\n            Apply\r\n          </button>\r\n        </div>\r\n\r\n        {/* Product Cards */}\r\n        {loading ? (\r\n          <div className=\"text-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </div>\r\n          </div>\r\n        ) : filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: \"100%\", height: \"auto\" }}\r\n                      />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">\r\n                      <strong>Price: ${product.productPrice}</strong>\r\n                    </p>\r\n                    <button\r\n                      className=\"btn btn-primary\"\r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-center\">No furniture products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {/* Product Images */}\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <img\r\n                      src={url}\r\n                      alt={selectedProduct.productName}\r\n                      style={{ width: \"100%\", height: \"auto\" }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            {/* Product Details */}\r\n            <p>Price: ${selectedProduct.productPrice}</p>\r\n            <p>{selectedProduct.productDescription}</p>\r\n            <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n\r\n            {/* Quantity Selector */}\r\n            <div className=\"quantity-selector mb-3\">\r\n              <label htmlFor=\"quantity\">Quantity:</label>\r\n              <input\r\n                type=\"number\"\r\n                id=\"quantity\"\r\n                value={quantity}\r\n                min=\"1\"\r\n                onChange={handleQuantityChange}\r\n                style={{ width: \"60px\", marginLeft: \"10px\" }}\r\n              />\r\n            </div>\r\n\r\n            {/* Reviews */}\r\n            <div className=\"product-reviews\">\r\n              <h5>Customer Reviews</h5>\r\n              {reviews.length > 0 ? (\r\n                reviews.map((review, index) => (\r\n                  <div key={index}>\r\n                    <p>\r\n                      <strong>{review.username}:</strong> {review.comment}\r\n                    </p>\r\n                    <p>Rating: {review.rating}/5</p>\r\n                  </div>\r\n                ))\r\n              ) : (\r\n                <p>No reviews yet.</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: \"100%\", height: \"auto\" }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                          className=\"btn btn-primary\"\r\n                          onClick={() => handleShow(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n            <Button variant=\"primary\" onClick={() => handleAddToCart(selectedProduct)}>\r\n              Add to Cart\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Furnitures;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';  \r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';  // Import the magnify component\r\nimport Header from './Header';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';  \r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Homewares.css';  // Add your CSS file here\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nfunction Homewares() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]); // Store similar products\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // New state for sorting\r\n  const { cartItems, addToCart } = useCartContext();  \r\n  const { addToWishlist } = useWishlistContext();  \r\n  const currentUser = auth.currentUser;\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"homewares\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,  \r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);  // Initially display all products\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sort filtered products whenever the sortOrder changes\r\n    const sortedProducts = [...filteredProducts].sort((a, b) => {\r\n      if (sortOrder === 'asc') {\r\n        return a.productPrice - b.productPrice;\r\n      } else {\r\n        return b.productPrice - a.productPrice;\r\n      }\r\n    });\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOrder]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOrder(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);  // Fetch similar products when modal opens\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  // Fetch similar products based on the category of the selected product\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,  \r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);  // Store similar products\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle clicking on a similar product (update modal)\r\n  const handleProductClick = (product) => {\r\n    setSelectedProduct(product);  // Update modal with the clicked product details\r\n    fetchSimilarProducts(product.category);  // Update similar products as well\r\n  };\r\n// Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher/>\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2 className=\"text-center\">Our Homewares Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-dropdown text-center mb-4\">\r\n          <select\r\n            value={sortOrder}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"asc\">Sort by Price: Low to High</option>\r\n            <option value=\"desc\">Sort by Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    <button \r\n                      className=\"btn view-details\" \r\n                      style={{ backgroundColor: '#ff8c00' }} \r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No homewares products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}> \r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n            </div>\r\n\r\n            {/* Buttons */}\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Display Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                                        <div className=\"card text-center\"> \r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button \r\n                          className=\"btn view-details\" \r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleProductClick(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homewares;\r\n\r\n","\r\nimport React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport LoadingPage from './Loadingpage';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useUserAuth } from '../context/UserAuthContext'; \r\nimport Footer from './Footer';\r\nimport '../css/Cart.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Cart() {\r\n  // Accessing cart items and removeFromCart function from Cartcontext\r\n  const { cartItems, removeFromCart } = useCartContext();\r\n  // Accessing current user information from UserAuthContext\r\n  const { user: currentUser } = useUserAuth();\r\n  // State to keep track of selected product IDs and total price\r\n  const [selectedProductIds, setSelectedProductIds] = useState([]);\r\n  const [totalPrice, setTotalPrice] = useState(0);\r\n  // Hook to navigate programmatically\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n  useEffect(() => {\r\n    // Calculate total price of selected products\r\n    const selectedProducts = cartItems.filter(p => selectedProductIds.includes(p.productId));\r\n    const total = selectedProducts.reduce((sum, product) => sum + product.productPrice, 0);\r\n    setTotalPrice(total);\r\n  }, [selectedProductIds, cartItems]);\r\n\r\n  const handleBuyNow = (productId) => {\r\n    setSelectedProductIds(prevSelected => \r\n      prevSelected.includes(productId)\r\n        ? prevSelected.filter(id => id !== productId)\r\n        : [...prevSelected, productId]\r\n    );\r\n  };\r\n\r\n  const handleCheckout = () => {\r\n    if (!currentUser) {\r\n      alert(\"You need to log in to proceed to checkout.\");\r\n      return;\r\n    }\r\n    if (selectedProductIds.length === 0) {\r\n      alert(\"Please select at least one product to proceed.\");\r\n      return;\r\n    }\r\n  \r\n    // Prepare data for checkout\r\n    const selectedProducts = cartItems\r\n      .filter(item => selectedProductIds.includes(item.productId))\r\n      .map(product => ({\r\n        productId: product.productId,\r\n        productName: product.productName,\r\n        productPrice: product.productPrice,\r\n        productDescription: product.productDescription,\r\n        sellerUsername: product.sellerUsername,\r\n        sellerId: product.sellerId,\r\n        imageUrls: product.imageUrls,  // Ensure image URLs are included\r\n      }));\r\n  \r\n    // Navigate to checkout page with selected products\r\n    navigate('/checkout', { state: { selectedProducts } });\r\n  };\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderSwitcher />\r\n        <div className=\"content\">\r\n          <Container>\r\n            <p className=\"text-center\">You need to log in to view your cart.</p>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"primary\" onClick={() => navigate('/login')} style={{ width: '150px' }}>Log In</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n// Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"content\" >\r\n        <Container>\r\n          <h2 className=\"text-center mb-4\">Your Cart</h2>\r\n          {cartItems.length > 0 ? (\r\n            <>\r\n              <Row className=\"justify-content-center\">\r\n                {cartItems.map((product) => (\r\n                  <Col md={4} key={product.productId}>\r\n                    <Card className=\"mb-4 product-card\">\r\n                      {product.imageUrls && product.imageUrls.length > 0 && (\r\n                        <Card.Img variant=\"top\" src={product.imageUrls[0]} alt={product.productName} />\r\n                      )}\r\n                      <Card.Body className=\"product-card-body\">\r\n                        <Card.Title>{product.productName}</Card.Title>\r\n                        <Card.Text>{product.productDescription}</Card.Text>\r\n                        <Card.Text><strong>Price: ${product.productPrice.toFixed(2)}</strong></Card.Text>\r\n                        <Card.Text>Seller: {product.sellerUsername}</Card.Text>\r\n                        <Button \r\n                          variant={selectedProductIds.includes(product.productId) ? \"success\" : \"primary\"}\r\n                          onClick={() => handleBuyNow(product.productId)}\r\n                          className={`buy-now-button ${selectedProductIds.includes(product.productId) ? 'selected' : ''}`}\r\n                        >\r\n                          {selectedProductIds.includes(product.productId) ? '✓ Selected' : 'Buy Now'}\r\n                        </Button>\r\n                        <Button \r\n                          variant=\"danger\" \r\n                          onClick={() => removeFromCart(product.productId)}\r\n                          className=\"remove-cart-button\"\r\n                        >\r\n                          Remove from Cart\r\n                        </Button>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                ))}\r\n              </Row>\r\n              {totalPrice > 0 && (\r\n                <div className=\"text-center mt-3\">\r\n                  <h3>Total Price for Selected Products: ${totalPrice.toFixed(2)}</h3>\r\n                </div>\r\n              )}\r\n              <div className=\"text-center mt-3\">\r\n                <Button \r\n                  variant=\"success\" \r\n                  size=\"lg\" \r\n                  className=\"checkout-button\"\r\n                  onClick={handleCheckout}\r\n                  disabled={selectedProductIds.length === 0}\r\n                >\r\n                  Proceed to Checkout\r\n                </Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p className=\"text-center\">Your cart is empty.</p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';  \r\nimport { useCartContext } from '../context/Cartcontext'; \r\nimport { useUserAuth } from '../context/UserAuthContext'; \r\nimport Footer from './Footer';\r\nimport '../css/Wishlist.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nfunction Wishlist() {\r\n  const { wishlist, removeFromWishlist } = useWishlistContext();\r\n  const { cartItems, addToCart } = useCartContext(); \r\n  const { user: currentUser } = useUserAuth();\r\n  const navigate = useNavigate();\r\n  const [loading, setLoading] = useState(true); // New state for loading\r\n\r\n  // Simulating data fetch\r\n  useEffect(() => {\r\n    const timeout = setTimeout(() => {\r\n      setLoading(false); // Simulate data loading completion\r\n    }, 2000); // Simulated delay of 2 seconds\r\n\r\n    return () => clearTimeout(timeout); // Cleanup timeout on unmount\r\n  }, []);\r\n\r\n  // Calculate total price of items in the wishlist\r\n  const totalPrice = wishlist.reduce((total, item) => total + item.productPrice, 0);\r\n\r\n  // Handle adding product to the cart\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  if (!currentUser) {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <HeaderSwitcher />\r\n        <div className=\"content\">\r\n          <Container>\r\n            <p className=\"text-center\">You need to log in to view your wishlist.</p>\r\n            <div className=\"text-center\">\r\n              <Button variant=\"primary\" onClick={() => navigate('/login')} style={{ width: '150px' }}>Log In</Button>\r\n            </div>\r\n          </Container>\r\n        </div>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{ marginTop: -50 }}>\r\n        <Container>\r\n          <h2 className=\"text-center mb-4\">Your Wishlist</h2>\r\n          <Row className=\"justify-content-center\">\r\n            {wishlist.map((product, index) => (\r\n              <Col md={4} key={product.productId}>\r\n                <Card className=\"mb-4 product-card\">\r\n                  {product.imageUrls && product.imageUrls.length > 0 && (\r\n                    <Card.Img variant=\"top\" src={product.imageUrls[0]} alt={product.productName} />\r\n                  )}\r\n                  <Card.Body className=\"product-card-body\">\r\n                    <Card.Title>{product.productName}</Card.Title>\r\n                    <Card.Text>{product.productDescription}</Card.Text>\r\n                    <Card.Text><strong>Price: ${product.productPrice.toFixed(2)}</strong></Card.Text>\r\n                    <Card.Text>Seller: {product.sellerUsername}</Card.Text>\r\n                    <Button \r\n                      variant=\"danger\" \r\n                      onClick={() => removeFromWishlist(product.productId)}\r\n                    >\r\n                      Remove from Wishlist\r\n                    </Button>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2 mt-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <h3 className=\"text-center mt-4\">Total Price: ${totalPrice.toFixed(2)}</h3>\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Wishlist;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';  \r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport { useCartContext } from '../context/Cartcontext';  \r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Electricalgoods.css';\r\nimport LoadingPage from './Loadingpage'; // Import LoadingPage component\r\n\r\nfunction Electricalgoods() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOrder, setSortOrder] = useState('asc'); // For sorting\r\n  const [loading, setLoading] = useState(true); // State for managing loading screen\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n\r\n  // Fetch products on component mount\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      setLoading(true); // Start loading\r\n      try {\r\n        const q = query(collection(db, \"products\"), where(\"category\", \"==\", \"electricalgoods\"));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      } finally {\r\n        setLoading(false); // Stop loading\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  // Sort products when sortOrder changes\r\n  useEffect(() => {\r\n    const sortProducts = (products) => {\r\n      return [...products].sort((a, b) => {\r\n        return sortOrder === 'asc' \r\n          ? a.productPrice - b.productPrice \r\n          : b.productPrice - a.productPrice;\r\n      });\r\n    };\r\n    setFilteredProducts(sortProducts(filteredProducts));\r\n  }, [sortOrder]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOrder(event.target.value);\r\n  };\r\n\r\n  // Show LoadingPage while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -50}}>\r\n        <h2 className=\"text-center\">Our Electrical Goods Collection</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-dropdown text-center mb-4\">\r\n          <select \r\n            value={sortOrder}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"asc\">Price: Low to High</option>\r\n            <option value=\"desc\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product) => (\r\n              <div className=\"col-md-4\" key={product.productId}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button \r\n                      className=\"btn add-to-cart mb-2\" \r\n                      onClick={() => handleAddToCart(product)}\r\n                    >\r\n                      Add to Cart\r\n                    </button>\r\n                    <button \r\n                      className=\"btn view-details\" \r\n                      style={{ backgroundColor: '#ff8c00' }} \r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No electrical goods products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Electricalgoods;\r\n","import React from 'react';\r\nimport Footer from './Footer';\r\nimport '../css/AboutUs.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport { getDownloadURL, getStorage, ref } from 'firebase/storage';\r\nimport { useEffect, useState } from 'react';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nfunction AboutUs() {\r\n  const [image, setImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Initialize Firebase Storage for storing and retrieving images\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Function to fetch the image URL from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        // Reference to the image file in Firebase Storage\r\n        const imageRef = ref(storage, \"images/about us.jpg\"); \r\n\r\n        // Get the download URL of the image\r\n        const url = await getDownloadURL(imageRef);\r\n\r\n        // Set the image URL in the component's state to display\r\n        setImage(url);\r\n      } catch (error) {\r\n        // Log any errors encountered while fetching the image\r\n        console.error(\"Error fetching image:\", error);\r\n      }\r\n    };\r\n\r\n    fetchImage(); // Call the function to fetch the image when the component loads\r\n  }, []);\r\n  // Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n\r\n  return (\r\n    \r\n    <div className='wrapper'>\r\n      {/* HeaderSwitcher to dynamically switch between different headers */}\r\n      <HeaderSwitcher/>\r\n\r\n      <div className='main-content'>\r\n        {/* Main container for About Us page content */}\r\n        <Container className='AboutUs'>\r\n          <Row className='Title'>\r\n            <h3>About Us</h3>\r\n          </Row>\r\n\r\n          <br/>\r\n\r\n          <Row>\r\n            <h5>Discover our Eco Shop</h5>\r\n          </Row>\r\n      \r\n          <Row>\r\n            {/* Description of the Eco Shop and its purpose */}\r\n            <p>\r\n              The Eco Shop is a second-hand deal platform where customers can buy as well as sell their products.\r\n              <br></br> Sellers can list their products for sale, and customers can browse through various categories, \r\n              <br></br> including furniture, homeware, and electrical goods.\r\n              <br></br><br></br>\r\n              Our mission is to offer affordable deals that make it easy for customers to purchase products at low prices.\r\n              <br></br> We aim to provide a user-friendly experience, ensuring both customers and sellers can navigate \r\n              <br></br> efficiently to search for, display, and manage their products with ease.\r\n            </p>\r\n          </Row>\r\n\r\n          {/* Conditionally render the image fetched from Firebase Storage */}\r\n          {image ? (\r\n            <img src={image} alt=\"About Us\" className=\"aboutus-image\" />\r\n          ) : (\r\n            <p>Loading Image.....</p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n\r\n      {/* Footer component to appear at the bottom of the page */}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Footer from './Footer';\r\nimport '../css/ReturnRefundPolicy.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport { getDownloadURL, getStorage, ref } from 'firebase/storage';\r\nimport LoadingPage from './Loadingpage';\r\n\r\nfunction ReturnAndRefundPolicy() {\r\n  const [policyImage, setPolicyImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(true); // New state\r\n  const storage = getStorage();\r\n\r\n  useEffect(() => {\r\n    // Fetch image URL from Firebase Storage\r\n    const fetchImage = async () => {\r\n      try {\r\n        const imageRef = ref(storage, \"images/r&rpolicy.png\"); \r\n        const url = await getDownloadURL(imageRef);\r\n        setPolicyImage(url); // Set the image URL to state\r\n      } catch (error) {\r\n        console.error(\"Error fetching image:\", error);\r\n      } finally {\r\n        setLoading(false); // Ensure loading stops regardless of success or failure\r\n      }\r\n    };\r\n\r\n    fetchImage();\r\n  }, []);\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <HeaderSwitcher />\r\n      <div className='main-content'>\r\n        <Container className='RRPolicy'>\r\n          <Row className='Title'>\r\n            <h3>Return & Refund Policy</h3>\r\n          </Row>\r\n          <Row>\r\n            <p>\r\n              Thank you for shopping at Eco Shop. In case you are not satisfied with your\r\n              <br />\r\n              purchase, you can follow the return and refund process as mentioned below.\r\n            </p>\r\n          </Row>\r\n          <br />\r\n          <Row className='Return'>\r\n            <h5>Returns</h5>\r\n          </Row>\r\n          <Row className='Description'>\r\n            <p>\r\n              You have 30 days to return a product from the date you received it. To be\r\n              eligible for a return, your product must be unused and you need to provide proof \r\n              of purchase.\r\n            </p>\r\n          </Row>\r\n          <Row className='Refund'>\r\n            <h5>Refunds</h5>\r\n          </Row>\r\n          <Row className='Description'>\r\n            <p>\r\n              Once we receive your product, we will notify you that we have received it.\r\n              If your product is approved, we will issue a refund to the payment method of your choice.\r\n            </p>\r\n          </Row>\r\n          {/* Display the fetched image */}\r\n          {policyImage ? (\r\n            <img src={policyImage} alt=\"R&RPolicy\" className=\"policy-image\" />\r\n          ) : (\r\n            <p>Unable to load the image. Please try again later.</p>\r\n          )}\r\n        </Container>\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReturnAndRefundPolicy;\r\n","import { db } from \"../firebase\"; // Adjust the import based on your project structure\r\n\r\nimport {\r\n  collection,\r\n  getDocs,\r\n  addDoc,\r\n  doc,\r\n  getDoc,\r\n} from \"firebase/firestore\";\r\n\r\nconst collectionName = \"contacts\";\r\nconst contactCollectionRef = collection(db, collectionName);\r\n\r\nclass ContactusService {\r\n  addContact = (newContact) => {\r\n    return addDoc(contactCollectionRef, newContact);\r\n  };\r\n\r\n  getAllContacts = () => {\r\n    return getDocs(contactCollectionRef);\r\n  };\r\n\r\n  getContact = (id) => {\r\n    const contactDoc = doc(db, collectionName, id);\r\n    return getDoc(contactDoc);\r\n  };\r\n}\r\n\r\nexport default new ContactusService();\r\n","import React, { useState } from \"react\";\r\nimport { Form, Alert, InputGroup, Button } from \"react-bootstrap\";\r\nimport Contactusservice from \"../context/Contactusservice\"; // Service to handle contact form submissions\r\nimport Footer from \"./Footer\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport LoadingPage from \"./Loadingpage\";\r\nfunction ContactUs() {\r\n  // State variables to manage form inputs and feedback messages\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [feedback, setFeedback] = useState({ error: false, msg: \"\" });\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n\r\n  // Handles form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFeedback({ error: false, msg: \"\" });\r\n\r\n    // Check if all fields are filled\r\n    if (name === \"\" || email === \"\" || subject === \"\" || message === \"\") {\r\n      setFeedback({ error: true, msg: \"Please fill out all fields!\" });\r\n      return;\r\n    }\r\n\r\n    // Create contact data object\r\n    const contactData = {\r\n      name,\r\n      email,\r\n      subject,\r\n      message\r\n    };\r\n\r\n    try {\r\n      // Send contact data to the server\r\n      await Contactusservice.addContact(contactData);\r\n      setFeedback({ error: false, msg: \"Your message has been sent successfully!\" });\r\n    } catch (err) {\r\n      console.error(\"Error sending message:\", err); // Log error for debugging\r\n      setFeedback({ error: true, msg: \"Failed to send message. Please try again later.\" });\r\n    }\r\n\r\n    // Clear form fields after submission\r\n    setName(\"\");\r\n    setEmail(\"\");\r\n    setSubject(\"\");\r\n    setMessage(\"\");\r\n  };\r\n// Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -110}}>\r\n      <HeaderSwitcher />\r\n      <div className=\"p-4 box\">\r\n        {/* Display feedback message if any */}\r\n        {feedback.msg && (\r\n          <Alert\r\n            variant={feedback.error ? \"danger\" : \"success\"}\r\n            dismissible\r\n            onClose={() => setFeedback({ error: false, msg: \"\" })}\r\n          >\r\n            {feedback.msg}\r\n          </Alert>\r\n        )}\r\n        <h2>Contact Us</h2>\r\n        <Form onSubmit={handleSubmit}>\r\n          {/* Form field for name */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactName\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactName\">Name</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Your Name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for email */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactEmail\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactEmail\">@</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for subject */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactSubject\">\r\n            <InputGroup>\r\n              <InputGroup.Text id=\"formContactSubject\">Subject</InputGroup.Text>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Subject\"\r\n                value={subject}\r\n                onChange={(e) => setSubject(e.target.value)}\r\n              />\r\n            </InputGroup>\r\n          </Form.Group>\r\n\r\n          {/* Form field for message */}\r\n          <Form.Group className=\"mb-3\" controlId=\"formContactMessage\">\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={4}\r\n              placeholder=\"Your Message\"\r\n              value={message}\r\n              onChange={(e) => setMessage(e.target.value)}\r\n            />\r\n          </Form.Group>\r\n\r\n          {/* Submit button */}\r\n          <div className=\"d-grid gap-2\">\r\n            <Button variant=\"success\" type=\"submit\">\r\n              Send Message\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContactUs;\r\n","import React, { useState } from 'react';\r\nimport { db, auth } from '../firebase'; // Ensure Firebase Auth is imported\r\nimport { collection, addDoc } from 'firebase/firestore';\r\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from 'firebase/storage';\r\nimport '../css/Header.css';\r\nimport LoadingPage from './Loadingpage';\r\nimport '../css/Addproduct.css';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\n\r\nfunction Addproducts() {\r\n  const [productName, setProductName] = useState('');\r\n  const [productDescription, setProductDescription] = useState('');\r\n  const [productDetailedDescription, setProductDetailedDescription] = useState('');\r\n  const [productPrice, setProductPrice] = useState('');\r\n  const [category, setCategory] = useState('furniture');\r\n  const [images, setImages] = useState([]);\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [progress, setProgress] = useState(0);\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n  const [loading, setLoading] = useState(false); // Manage loading state\r\n  const storage = getStorage();\r\n\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files) {\r\n      setImages([...e.target.files]);\r\n    }\r\n  };\r\n\r\n  const handleImageUpload = () => {\r\n    if (images.length === 0) {\r\n      alert('Please select images to upload.');\r\n      return;\r\n    }\r\n\r\n    setLoading(true); // Set loading state to true during image upload\r\n\r\n    const uploadPromises = images.map((image) => {\r\n      const storageRef = ref(storage, `images/${productName}/${image.name}`);\r\n      const uploadTask = uploadBytesResumable(storageRef, image);\r\n\r\n      return new Promise((resolve, reject) => {\r\n        uploadTask.on(\r\n          'state_changed',\r\n          (snapshot) => {\r\n            const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\r\n            setProgress(progress);\r\n          },\r\n          (error) => {\r\n            console.error('Upload failed: ', error);\r\n            reject(error);\r\n          },\r\n          () => {\r\n            getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\r\n              setImageUrls((prev) => [...prev, downloadURL]);\r\n              resolve(downloadURL);\r\n            });\r\n          }\r\n        );\r\n      });\r\n    });\r\n\r\n    Promise.all(uploadPromises)\r\n      .then(() => {\r\n        alert('Images uploaded successfully!');\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error uploading images: ', error);\r\n        alert('Failed to upload images. Please try again.');\r\n      })\r\n      .finally(() => {\r\n        setLoading(false); // Set loading state back to false after upload completes\r\n      });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      setLoading(true); // Set loading state to true during product submission\r\n\r\n      const user = auth.currentUser;\r\n      if (!user) {\r\n        throw new Error('User not authenticated');\r\n      }\r\n\r\n      await addDoc(collection(db, 'products'), {\r\n        productName,\r\n        productDescription,\r\n        productDetailedDescription,\r\n        productPrice: Number(productPrice),\r\n        category,\r\n        imageUrls,\r\n        sellerId: user.uid,\r\n        sellerUsername: user.displayName || user.email.split('@')[0],\r\n        sellerEmail: user.email,\r\n      });\r\n\r\n      setSuccessMessage('Product added successfully!');\r\n      setProductName('');\r\n      setProductDescription('');\r\n      setProductDetailedDescription('');\r\n      setProductPrice('');\r\n      setCategory('furniture');\r\n      setImages([]);\r\n      setImageUrls([]);\r\n      setProgress(0);\r\n\r\n      setTimeout(() => {\r\n        setSuccessMessage('');\r\n      }, 3000);\r\n    } catch (e) {\r\n      console.error('Error adding document: ', e);\r\n    } finally {\r\n      setLoading(false); // Set loading state back to false after product submission completes\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className='main-content' style={{ marginTop: -70 }}>\r\n      <HeaderSwitcher />\r\n      <h2>Add Product</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Product Name:</label>\r\n          <input\r\n            type='text'\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Product Description:</label>\r\n          <input\r\n            type='text'\r\n            value={productDescription}\r\n            onChange={(e) => setProductDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Detailed Description:</label>\r\n          <textarea\r\n            value={productDetailedDescription}\r\n            onChange={(e) => setProductDetailedDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Product Price:</label>\r\n          <input\r\n            type='number'\r\n            value={productPrice}\r\n            onChange={(e) => setProductPrice(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Category:</label>\r\n          <select value={category} onChange={(e) => setCategory(e.target.value)} required>\r\n            <option value='furniture'>Furnitures</option>\r\n            <option value='electricalgoods'>Electrical Goods</option>\r\n            <option value='homewares'>Homewares</option>\r\n            <option value='other'>Other Products</option>\r\n          </select>\r\n        </div>\r\n        <div>\r\n          <label>Upload Images:</label>\r\n          <input type='file' onChange={handleImageChange} multiple />\r\n          <button type='button' onClick={handleImageUpload}>\r\n            Upload Images\r\n          </button>\r\n          <progress value={progress} max='100' />\r\n          {imageUrls.length > 0 &&\r\n            imageUrls.map((url, index) => (\r\n              <img\r\n                key={index}\r\n                src={url}\r\n                alt='Uploaded'\r\n                style={{ width: '100px', marginTop: '10px' }}\r\n              />\r\n            ))}\r\n        </div>\r\n        <button type='submit'>Add Product</button>\r\n      </form>\r\n\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Addproducts;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\n\r\n// General protected route\r\nconst ProtectedRoute = ({ children }) => {\r\n  const { user } = useUserAuth();\r\n\r\n  console.log(\"Check user in ProtectedRoute: \", user);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return children;\r\n};\r\n\r\n// Admin protected route\r\nexport const AdminRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in AdminRoute: \", user);\r\n  console.log(\"Check user role in AdminRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\n// Seller protected route\r\nexport const SellerRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in SellerRoute: \", user);\r\n  console.log(\"Check user role in SellerRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\" || role ===\"seller\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\n// Customer protected route\r\nexport const CustomerRoute = ({ children }) => {\r\n  const { user, role } = useUserAuth();\r\n\r\n  console.log(\"Check user in CustomerRoute: \", user);\r\n  console.log(\"Check user role in CustomerRoute: \", role);\r\n  if (!user) {\r\n    return <Navigate to=\"/\" />;\r\n  } else {\r\n    if(role === \"admin\" || role ===\"seller\" || role ===\"customer\")\r\n      return children;\r\n    else{\r\n      return <> You do not have access to this page</>\r\n    }\r\n  }\r\n};\r\n\r\nexport default ProtectedRoute;","import React, { useState, useEffect } from \"react\";\r\nimport { Alert, Button, Form, InputGroup, Modal } from \"react-bootstrap\";\r\nimport Footer from \"./Footer\";\r\nimport '../css/Checkout.css';\r\nimport CheckoutService from \"../context/CheckoutServices\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useLocation } from 'react-router-dom';\r\nimport LoadingPage from \"./Loadingpage\";\r\nimport { getAuth } from \"firebase/auth\"; //This will import the authentication from firebase\r\n\r\nfunction Checkout() {\r\n    const [discountCode, setDiscountCode] = useState([]);\r\n    const [appliedDiscount, setAppliedDiscount] = useState(null);\r\n    const [cardNumber, setCardNumber] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [region, setRegion] = useState(\"\");\r\n    const [zipCode, setZipCode] = useState(\"\");\r\n    const [message, setMessage] = useState({ error: false, msg: \"\" });\r\n    const [country, setCountry] = useState(\"\");\r\n    const [subTotal, setSubTotal] = useState(0.00);\r\n    const [discount, setDiscount] = useState(0.00);\r\n    const [serverFee, setServerFee] = useState(0.00);\r\n    const [totalCost, setTotalCost] = useState(0.00);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [showErrorModal, setShowErrorModal] = useState(false);\r\n    const [missingFields, setMissingFields] = useState([]);\r\n    const [loading, setLoading] = useState(true); // New state\r\n\r\n    \r\n    // Inside the Checkout function\r\n    const location = useLocation();\r\n    const selectedProducts = location.state?.selectedProducts || [];\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Calculate SubTotal when selectedProducts change\r\n        let subtotal = selectedProducts.reduce((acc, item) => acc + item.productPrice, 0);\r\n        setSubTotal(subtotal);\r\n      \r\n        // Calculate Server Fee\r\n        const serverPercentage = 0.15; // 15% server fee\r\n        const serverValue = subtotal * serverPercentage;\r\n        setServerFee(serverValue);\r\n      \r\n        // Calculate Total Cost without discount\r\n        const totalCost = subtotal + serverValue;\r\n        setTotalCost(totalCost);\r\n      }, [selectedProducts]);\r\n      \r\n    \r\n    const discountCodes = {\r\n        \"DISCOUNT50\": 0.50, // 50% discount\r\n        \"DISCOUNT20\": 0.20, // 20% discount\r\n        \"DISCOUNT15\": 0.15, // 15% discount\r\n        \"DISCOUNT10\": 0.10  // 10% discount\r\n    };\r\n\r\n    const handleApplyDiscount = () => {\r\n        const discountPercentage = discountCodes[discountCode.toUpperCase()] || 0;\r\n        \r\n        if (discountPercentage > 0) {\r\n            const discountValue = subTotal * discountPercentage;\r\n            const newTotalCost = subTotal - discountValue + serverFee;\r\n\r\n            setDiscount(discountValue);\r\n            setTotalCost(newTotalCost);\r\n            setDiscountCode('');\r\n            setMessage({ error: false, msg: \"Discount applied successfully!\" });\r\n        } else {\r\n            setMessage({ error: true, msg: \"Invalid discount code!\" });\r\n        }\r\n    }; \r\n\r\n    const handleRemoveDiscount = () => {\r\n        const newTotalCost = subTotal + serverFee; // Remove the discount from total cost\r\n        setDiscount(0);\r\n        setTotalCost(newTotalCost);\r\n        setAppliedDiscount(null); // Clear applied discount\r\n        setMessage({ error: false, msg: \"Discount removed successfully!\" });\r\n    };\r\n    \r\n    const handleCardNumberChange = (e) => {\r\n        const { value } = e.target; // Safely access value from event target\r\n        let formattedValue = value.replace(/\\D/g, ''); // Remove all non-digit characters\r\n        formattedValue = formattedValue.replace(/(\\d{4})(?=\\d)/g, '$1 '); // Add space after every 4 digits\r\n        setCardNumber(formattedValue); // Update state with formatted value\r\n    };\r\n    \r\n    //This will create an encryption for the card number\r\n    function simpleEncrypt(cardNumber) {\r\n        return cardNumber.split('').map(char => String.fromCharCode(char.charCodeAt(0) + 3)).join('');\r\n    }\r\n    \r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        // Fetch the logged-in user's ID\r\n        const auth = getAuth();\r\n        const user = auth.currentUser;\r\n        const userId = user ? user.uid : null;\r\n\r\n        if (!userId) {\r\n            setMessage({ error: true, msg: \"User not logged in!\" });\r\n            return;\r\n        }\r\n\r\n        setMessage(\"\");\r\n        setMissingFields([]);  // Reset missing fields\r\n\r\n        // Track missing fields\r\n        let missingFields = [];\r\n\r\n        if (address === \"\") missingFields.push(\"Street Address\");\r\n        if (city === \"\") missingFields.push(\"City\");\r\n        if (region === \"\") missingFields.push(\"State/Province/Region\");\r\n        if (zipCode === \"\") missingFields.push(\"Zip/Postal Code\");\r\n        if (country === \"\") missingFields.push(\"Country\");\r\n        if (cardNumber === \"\") missingFields.push(\"Card Number\");\r\n\r\n        if (missingFields.length > 0) {\r\n            setMissingFields(missingFields);  // Set the missing fields to the state\r\n            setShowErrorModal(true);  // Show the error modal\r\n            return;\r\n        }\r\n\r\n        const encryptedCardNumber = simpleEncrypt(cardNumber);// This will store the encrypted card number\r\n\r\n        const checkoutData = {\r\n            paymentId: \"\", // Provide a default empty string or some fallback value\r\n            userId: userId,  // Set the user ID here\r\n            cardNumber: encryptedCardNumber || \"\",\r\n            address: address || \"\",\r\n            city: city || \"\",\r\n            region: region || \"\",\r\n            zipCode: zipCode || \"\",\r\n            country: country || \"\",\r\n            serverFee: serverFee.toFixed(2),\r\n            totalCost: totalCost.toFixed(2),\r\n            items: selectedProducts.map(item => ({\r\n                productName: item.productName || \"Unknown Product\",\r\n                productDescription: item.productDescription || \"\",\r\n                productPrice: item.productPrice || 0,\r\n                imageUrls: item.imageUrls || \"\", // Use a placeholder URL or empty string if missing\r\n                sellerId: item.sellerId || \"Unknown Seller\", // Ensure sellerId is provided\r\n            }))\r\n        };\r\n        \r\n        try {\r\n            await CheckoutService.addCheckout(checkoutData, userId);\r\n            setMessage({ error: false, msg: \"Payment successful!\" });\r\n            setShowModal(true); // Show the modal when payment is successful\r\n        } catch (err) {\r\n            setMessage({ error: true, msg: err.message });\r\n        }\r\n\r\n        setAddress(\"\");\r\n        setCity(\"\");\r\n        setCountry(\"\");\r\n        setRegion(\"\");\r\n        setZipCode(\"\");\r\n        setCardNumber(\"\");\r\n    };\r\n    // Show loading page while data is being fetched\r\nif (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"p-4 box\">\r\n                <div className=\"wrapper\">\r\n                    <HeaderSwitcher/>\r\n                    <div className=\"main-content\">\r\n                        {message?.msg && (\r\n                            <Alert\r\n                                variant={message?.error ? \"danger\" : \"success\"}\r\n                                dismissible\r\n                                onClose={() => setMessage(\"\")}\r\n                            >\r\n                                {message?.msg}\r\n                            </Alert>\r\n                        )}\r\n                        <h2 className=\"text-center mb-4\">Checkout</h2>\r\n                        <div className=\"products-history\">\r\n                        <h4>Products History</h4>\r\n                        </div>\r\n                        <br/>\r\n                        {selectedProducts.length > 0 ? (\r\n                        <div className=\"row justify-content-center\">\r\n                            {selectedProducts.map((item, index) => (\r\n                            <div className=\"col-md-4\" key={index}>\r\n                                <div className=\"card text-center\">\r\n                                <div className=\"card-body\">\r\n                                    {item.imageUrls && (\r\n                                    <>\r\n                                        <img \r\n                                        src={item.imageUrls[0]} \r\n                                        alt={item.productName} \r\n                                        className=\"card-img-top\"\r\n                                        />\r\n                                    </>\r\n                                    )}\r\n                                    <h5 className=\"card-title\">{item.productName}</h5>\r\n                                    <p className=\"card-text\">{item.productDescription}</p>\r\n                                    <p className=\"card-text\"><strong>Price: ${item.productPrice}</strong></p>\r\n                                </div>\r\n                                </div>\r\n                            </div>\r\n                            ))}\r\n                        </div>\r\n                        ) : (\r\n                        <p>Your cart is empty.</p>\r\n                        )}\r\n                        <br/>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className=\"form-container\">\r\n                                <div className=\"form-box\">\r\n                                    <div className=\"flex-container\">\r\n                                        <InputGroup className=\"input-width\">\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Discount Code\"\r\n                                                maxLength={10}\r\n                                                value={discountCode}\r\n                                                onChange={(e) => setDiscountCode(e.target.value)} \r\n                                            />\r\n                                        </InputGroup>\r\n                                        <Button\r\n                                            variant=\"success\" \r\n                                            size=\"md\" \r\n                                            className=\"apply-button\"\r\n                                            onClick={handleApplyDiscount}\r\n                                        >\r\n                                            Apply    \r\n                                        </Button>\r\n                                        <Button\r\n                                            variant=\"danger\"\r\n                                            size=\"md\"\r\n                                            className=\"remove-button\"\r\n                                            onClick={handleRemoveDiscount}\r\n                                        >\r\n                                            Remove\r\n                                        </Button>\r\n                                    </div> \r\n                                    <Form.Group className=\"mb-3\" controlId=\"formCardNumber\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Text id=\"formCardNumber\">Card Number </InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"xxxx xxxx xxxx xxxx\"\r\n                                                maxLength={19}\r\n                                                value={cardNumber}\r\n                                                onChange={(e) => handleCardNumberChange(e)}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <p>Billing Address</p>\r\n                                    <hr/>\r\n                                    <Form.Group className=\"mb-3\" controlId=\"formStreetAddress\">\r\n                                        <InputGroup>\r\n                                            <InputGroup.Text id=\"formStreetAddress\">Street Address </InputGroup.Text>\r\n                                            <Form.Control\r\n                                                type=\"text\"\r\n                                                placeholder=\"Street Address\"\r\n                                                value={address}\r\n                                                onChange={(e) => setAddress(e.target.value)}\r\n                                                style={{ width: \"100%\" }}\r\n                                            />\r\n                                        </InputGroup>\r\n                                    </Form.Group>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Form.Group className=\"mb-3 flex-grow-1 me-3\" controlId=\"formCity\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formCity\">City </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"City\"\r\n                                                    value={city}\r\n                                                    onChange={(e) => setCity(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3 flex-grow-1\" controlId=\"formRegion\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formRegion\">State/Province/Region </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"State/Province/Region\"\r\n                                                    value={region}\r\n                                                    onChange={(e) => setRegion(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <Form.Group className=\"mb-3 flex-grow-1 me-3\" controlId=\"formZipCode\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formZipCode\">Zip/Postal Code </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Zip/Postal Code\"\r\n                                                    value={zipCode}\r\n                                                    onChange={(e) => setZipCode(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group className=\"mb-3 flex-grow-1\" controlId=\"formCountry\">\r\n                                            <InputGroup>\r\n                                                <InputGroup.Text id=\"formCountry\">Country </InputGroup.Text>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Country\"\r\n                                                    value={country}\r\n                                                    onChange={(e) => setCountry(e.target.value)}\r\n                                                    style={{ width: \"100%\" }}\r\n                                                />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </div> \r\n                                    <div className=\"form-box\">\r\n                                        <h5 style={{textAlign:'center'}}>Payment Summary</h5>\r\n                                        <br/>\r\n                                        <div className=\"mb-3\">\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Sub Total:</span> \r\n                                                <span className=\"value\">${subTotal.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Discount:</span> \r\n                                                <span className=\"value\">$-{discount.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Server Fee (15%):</span> \r\n                                                <span className=\"value\">${serverFee.toFixed(2)}</span>\r\n                                            </div>\r\n                                            <br/>\r\n                                            <div className=\"align-items\">\r\n                                                <span className=\"label\">Total Cost:</span> \r\n                                                <span className=\"value\">${totalCost.toFixed(2)}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>        \r\n                                    <div className=\"text-center mt-3\">\r\n                                        <Button\r\n                                            variant=\"success\" \r\n                                            size=\"lg\" \r\n                                            className=\"paynow-button\"\r\n                                            onClick={handleSubmit}\r\n                                            type=\"submit\"\r\n                                        >\r\n                                            Pay Now    \r\n                                        </Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Form>\r\n                    </div>\r\n                </div> \r\n            </div>\r\n            {/* Success Modal */}\r\n            <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Payment Successful</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>Your payment was processed successfully!</Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"success\" onClick={() => {\r\n                    setShowModal(false);\r\n                    navigate('/Cart');\r\n                }}>\r\n                    Close\r\n                </Button>\r\n            </Modal.Footer>\r\n            </Modal>\r\n            {/* Error Modal */}\r\n            <Modal show={showErrorModal} onHide={() => setShowErrorModal(false)}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Missing Information</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    Please fill in the following mandatory fields: \r\n                    <ul>\r\n                        {missingFields.map((field, index) => (\r\n                            <li key={index}>{field}</li>\r\n                        ))}\r\n                    </ul>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => setShowErrorModal(false)}>\r\n                        Close\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </> \r\n    );\r\n}\r\n\r\nexport default Checkout;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport { Table, Form, InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst ManageUsers = () => {\r\n  const [customers, setCustomers] = useState([]); // List of customers\r\n  const [sellers, setSellers] = useState([]); // List of sellers\r\n  const [searchQuery, setSearchQuery] = useState(\"\"); // Search query\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const data = await FBDataService.getAllData();\r\n        const users = data.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\r\n\r\n        // Separate users into customers and sellers\r\n        setCustomers(users.filter((user) => user.role === \"customer\"));\r\n        setSellers(users.filter((user) => user.role === \"seller\"));\r\n      } catch (err) {\r\n        console.error(\"Error fetching users:\", err);\r\n      } finally {\r\n        setLoading(false); // Stop loading after fetching data\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleRoleChange = async (id, newRole) => {\r\n    try {\r\n      const userToUpdate = [...customers, ...sellers].find((user) => user.id === id);\r\n      if (userToUpdate) {\r\n        await FBDataService.updateData(id, { ...userToUpdate, role: newRole });\r\n\r\n        if (newRole === \"customer\") {\r\n          setCustomers((prev) => [...prev, { ...userToUpdate, role: newRole }]);\r\n          setSellers((prev) => prev.filter((user) => user.id !== id));\r\n        } else if (newRole === \"seller\") {\r\n          setSellers((prev) => [...prev, { ...userToUpdate, role: newRole }]);\r\n          setCustomers((prev) => prev.filter((user) => user.id !== id));\r\n        }\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error updating role:\", err);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUser = async (id) => {\r\n    try {\r\n      await FBDataService.deleteData(id);\r\n\r\n      setCustomers((prev) => prev.filter((user) => user.id !== id));\r\n      setSellers((prev) => prev.filter((user) => user.id !== id));\r\n    } catch (err) {\r\n      console.error(\"Error deleting user:\", err);\r\n    }\r\n  };\r\n\r\n  const filteredCustomers = customers.filter((user) =>\r\n    user.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const filteredSellers = sellers.filter((user) =>\r\n    user.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n      <AdminHeader />\r\n      <h2>Manage Users</h2>\r\n\r\n      <InputGroup className=\"mb-3\">\r\n        <FormControl\r\n          placeholder=\"Search users by name\"\r\n          value={searchQuery}\r\n          onChange={(e) => setSearchQuery(e.target.value)}\r\n        />\r\n      </InputGroup>\r\n\r\n      <h3>Customers</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredCustomers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.mobile}</td>\r\n              <td>\r\n                <Form.Select\r\n                  value={user.role}\r\n                  onChange={(e) => handleRoleChange(user.id, e.target.value)}\r\n                >\r\n                  <option value=\"customer\">Customer</option>\r\n                  <option value=\"seller\">Seller</option>\r\n                </Form.Select>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" onClick={() => handleDeleteUser(user.id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <h3>Sellers</h3>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Email</th>\r\n            <th>Mobile</th>\r\n            <th>Role</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {filteredSellers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.name}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.mobile}</td>\r\n              <td>\r\n                <Form.Select\r\n                  value={user.role}\r\n                  onChange={(e) => handleRoleChange(user.id, e.target.value)}\r\n                >\r\n                  <option value=\"seller\">Seller</option>\r\n                  <option value=\"customer\">Customer</option>\r\n                </Form.Select>\r\n              </td>\r\n              <td>\r\n                <Button variant=\"danger\" onClick={() => handleDeleteUser(user.id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageUsers;\r\n","import React, { useEffect, useState } from 'react';\r\nimport SellerHeader from './SellerHeader';\r\nimport UserProfile from './UserProfile';\r\nimport { useUserAuth } from '../context/UserAuthContext';\r\nimport FBDataService from '../context/FBService';\r\nimport CheckoutService from '../context/CheckoutServices'; \r\nimport '../css/SellerDashboard.css';\r\nimport LoadingPage from './Loadingpage';\r\nfunction SellerDashboard() {\r\n    const { user } = useUserAuth(); \r\n    const [username, setUsername] = useState('');\r\n    const [totalEarnings, setTotalEarnings] = useState(0); // State to store total earnings\r\n    const [loading, setLoading] = useState(true); // New state\r\n\r\n\r\n    useEffect(() => {\r\n        if (user && user.uid) {\r\n            const fetchUserData = async () => {\r\n                try {\r\n                    const userDoc = await FBDataService.getData(user.uid); // Fetch user data\r\n                    if (userDoc.exists()) {\r\n                        const userData = userDoc.data();\r\n                        setUsername(userData.name); // Set username from user data\r\n                    }\r\n                } catch (error) {\r\n                    console.error('Error fetching user data: ', error);\r\n                }\r\n            };\r\n\r\n            const fetchEarningsData = async () => {\r\n                try {\r\n                    const querySnapshot = await CheckoutService.getAllCheckouts(); \r\n                    let total = 0;\r\n                    \r\n                    querySnapshot.docs.forEach(doc => {\r\n                        const checkoutData = doc.data();\r\n                        if (checkoutData.items) {\r\n                            checkoutData.items.forEach(item => {\r\n                                if (item.sellerId === user.uid) {\r\n                                    const price = parseFloat(item.productPrice || 0);\r\n                                    // const serverFee = parseFloat(checkoutData.serverFee || 0);\r\n                                    total += (price*0.85); // Deduct service fee\r\n                                }\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                    setTotalEarnings(total.toFixed(2)); // Set total earnings\r\n                } catch (error) {\r\n                    console.error('Error fetching earnings data: ', error);\r\n                }\r\n            };\r\n\r\n            fetchUserData();\r\n            fetchEarningsData(); \r\n        }\r\n    }, [user]);\r\n// Show loading page while data is being fetched\r\nif (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n    return (\r\n        <div className=\"main-content\">\r\n            <SellerHeader />\r\n            <h2 className=\"welcome-message\">Welcome to the Seller Dashboard, {username}!</h2>\r\n            <div className=\"content\">\r\n                <div className=\"user-profile\"><UserProfile /></div>\r\n                <div className=\"dashboard-summary\">\r\n                    <h3 className='summary-box'>\r\n                        <p className=\"text\">Total Earnings </p>${totalEarnings}\r\n                    </h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SellerDashboard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst ManageProducts = () => {\r\n  // Extracting product-related functions and data from context\r\n  const { products, deleteProduct, updateProduct } = useProductcontext();\r\n  const [productList, setProductList] = useState([]); // State to store products for display\r\n  const [showModal, setShowModal] = useState(false); // State to control modal visibility\r\n  const [currentProduct, setCurrentProduct] = useState(null); // State for the product being edited\r\n  const [categories] = useState([\"Electronics\", \"Fashion\", \"Books\", \"Home\"]); // Example categories for selection\r\n  const [loading, setLoading] = useState(true); // State to manage loading\r\n\r\n  // Update local state when products from context change\r\n  useEffect(() => {\r\n    if (products.length > 0) {\r\n      setProductList(products);\r\n    }\r\n    setLoading(false); // Set loading to false once data is fetched\r\n  }, [products]);\r\n\r\n  // Function to handle product deletion\r\n  const handleDelete = (productId) => {\r\n    deleteProduct(productId); // Call delete function from context\r\n    setProductList(productList.filter((product) => product.id !== productId));\r\n  };\r\n\r\n  // Function to handle editing a product\r\n  const handleEdit = (product) => {\r\n    setCurrentProduct(product); // Set the product to be edited\r\n    setShowModal(true); // Show the modal for editing\r\n  };\r\n\r\n  // Function to save changes to the product\r\n  const handleSave = () => {\r\n    updateProduct(currentProduct.id, currentProduct); // Update the product with new values\r\n    setProductList(\r\n      productList.map((product) =>\r\n        product.id === currentProduct.id ? currentProduct : product\r\n      )\r\n    );\r\n    setShowModal(false); // Close the modal after saving\r\n  };\r\n\r\n  // Function to handle changes in the edit form\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentProduct({ ...currentProduct, [name]: value }); // Update the product state with form changes\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n      <AdminHeader /> {/* Display the admin header */}\r\n      <h2>Manage Products</h2> {/* Page heading */}\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Description</th>\r\n            <th>Seller</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {/* Render each product in the table */}\r\n          {productList.map((product) => (\r\n            <tr key={product.id}>\r\n              <td>{product.productName}</td>\r\n              <td>${product.productPrice.toFixed(2)}</td>\r\n              <td>{product.productDescription}</td>\r\n              <td>{product.sellerUsername}</td>\r\n              <td>\r\n                <Button variant=\"warning\" onClick={() => handleEdit(product)}>\r\n                  Edit\r\n                </Button>{\" \"}\r\n                <Button\r\n                  variant=\"danger\"\r\n                  onClick={() => handleDelete(product.id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n      {/* Modal for editing a product */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {/* Show the form if a product is selected for editing */}\r\n          {currentProduct && (\r\n            <Form>\r\n              <Form.Group controlId=\"formProductName\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productName\"\r\n                  value={currentProduct.productName}\r\n                  onChange={handleChange} // Update product name on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductPrice\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  name=\"productPrice\"\r\n                  value={currentProduct.productPrice}\r\n                  onChange={handleChange} // Update product price on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  name=\"productDescription\"\r\n                  value={currentProduct.productDescription}\r\n                  onChange={handleChange} // Update product description on change\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductCategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Select\r\n                  name=\"category\"\r\n                  value={currentProduct.category}\r\n                  onChange={handleChange} // Update product category on change\r\n                >\r\n                  {/* Render category options */}\r\n                  {categories.map((category, index) => (\r\n                    <option key={index} value={category}>\r\n                      {category}\r\n                    </option>\r\n                  ))}\r\n                </Form.Select>\r\n              </Form.Group>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSave}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Footer /> {/* Display the footer */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageProducts;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport SellerHeader from \"./SellerHeader\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\nimport FBDataService from \"../context/FBService\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst MyListings = () => {\r\n  const { products, deleteProduct } = useProductcontext(); // Product context for handling products\r\n  const { user, role } = useUserAuth(); // UserAuth context to get user details\r\n  const [sellerProducts, setSellerProducts] = useState([]); // Seller's products\r\n  const [showEditModal, setShowEditModal] = useState(false); // Edit modal visibility\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false); // Details modal visibility\r\n  const [currentProduct, setCurrentProduct] = useState(null); // Current product being edited/viewed\r\n  const [loading, setLoading] = useState(true); // Loading state for data fetching\r\n\r\n  useEffect(() => {\r\n    if (user && products.length > 0) {\r\n      const filteredProducts = products.filter(\r\n        (product) => product.sellerId === user.uid\r\n      );\r\n      setSellerProducts(filteredProducts);\r\n      setLoading(false); // Stop loading once products are filtered\r\n    }\r\n  }, [products, user]);\r\n\r\n  const handleEditClick = (product) => {\r\n    setCurrentProduct(product);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleDeleteClick = async (productId) => {\r\n    try {\r\n      await deleteProduct(productId); // Delete product using context function\r\n      setSellerProducts(sellerProducts.filter((product) => product.id !== productId));\r\n    } catch (err) {\r\n      console.error(\"Error deleting product:\", err);\r\n    }\r\n  };\r\n\r\n  const handleSaveChanges = async () => {\r\n    try {\r\n      await FBDataService.updateData(currentProduct.id, currentProduct); // Update product in database\r\n      setSellerProducts(\r\n        sellerProducts.map((product) =>\r\n          product.id === currentProduct.id ? currentProduct : product\r\n        )\r\n      );\r\n      setShowEditModal(false);\r\n    } catch (err) {\r\n      console.error(\"Error updating product:\", err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentProduct({ ...currentProduct, [name]: value });\r\n  };\r\n\r\n  const handleProductDetailsClick = (product) => {\r\n    setCurrentProduct(product);\r\n    setShowDetailsModal(true);\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n      {/* Display appropriate header based on user role */}\r\n      {role === \"admin\" && <AdminHeader />}\r\n      {role === \"seller\" && <SellerHeader />}\r\n\r\n      <h2>My Listings</h2>\r\n      {sellerProducts.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {sellerProducts.map((product) => (\r\n              <tr key={product.id}>\r\n                <td>\r\n                  <Button\r\n                    variant=\"link\"\r\n                    onClick={() => handleProductDetailsClick(product)}\r\n                  >\r\n                    {product.productName}\r\n                  </Button>\r\n                </td>\r\n                <td>{product.productPrice}</td>\r\n                <td>\r\n                  <Button variant=\"warning\" onClick={() => handleEditClick(product)}>\r\n                    Edit\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDeleteClick(product.id)}\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>No products found for this seller.</p>\r\n      )}\r\n\r\n      {/* Edit Modal */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Product</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentProduct && (\r\n            <Form>\r\n              <Form.Group controlId=\"formProductName\">\r\n                <Form.Label>Product Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productName\"\r\n                  value={currentProduct.productName}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductPrice\">\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"productPrice\"\r\n                  value={currentProduct.productPrice}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  as=\"textarea\"\r\n                  rows={3}\r\n                  name=\"productDescription\"\r\n                  value={currentProduct.productDescription}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formProductCategory\">\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={currentProduct.category}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formSellerUsername\">\r\n                <Form.Label>Username</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"sellerUsername\"\r\n                  value={currentProduct.sellerUsername}\r\n                  onChange={handleChange}\r\n                />\r\n              </Form.Group>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowEditModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveChanges}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Details Modal */}\r\n      <Modal\r\n        show={showDetailsModal}\r\n        onHide={() => setShowDetailsModal(false)}\r\n        size=\"lg\"\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentProduct ? (\r\n            <>\r\n              <p>\r\n                <strong>Name:</strong> {currentProduct.productName}\r\n              </p>\r\n              <p>\r\n                <strong>Price:</strong> {currentProduct.productPrice}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong> {currentProduct.productDescription}\r\n              </p>\r\n              <p>\r\n                <strong>Category:</strong> {currentProduct.category}\r\n              </p>\r\n              <p>\r\n                <strong>Username:</strong> {currentProduct.sellerUsername}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <p>No product details available.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyListings;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport CheckoutService from \"../context/CheckoutServices\"; // Import the CheckoutService\r\nimport \"../css/Orders.css\"; // Import the CSS file\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst Orders = () => {\r\n  const { orders, updateOrderStatus } = useProductcontext();\r\n  const { user } = useUserAuth();\r\n  const [sellerOrders, setSellerOrders] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    if (user && user.uid) {\r\n      const filteredOrders = orders\r\n        .filter((order) => order.status !== \"complete\") // Exclude completed orders\r\n        .map((order) => ({\r\n          ...order,\r\n          items: order.items\r\n            ? order.items.filter((item) => item.sellerId === user.uid)\r\n            : [],\r\n        }))\r\n        .filter((order) => order.items.length > 0);\r\n\r\n      setSellerOrders(filteredOrders);\r\n      setLoading(false); // Stop loading once data is processed\r\n    }\r\n  }, [orders, user]);\r\n\r\n  const handleStatusChange = (orderId, status) => {\r\n    updateOrderStatus(orderId, status); // Implement this function in your Productcontext\r\n  };\r\n\r\n  const handleProductClick = async (product) => {\r\n    try {\r\n      const querySnapshot = await CheckoutService.getAllCheckouts();\r\n      const checkouts = querySnapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      const matchedCheckout = checkouts.find((checkout) =>\r\n        checkout.items.some(\r\n          (item) =>\r\n            item.productName === product.productName && item.sellerId === user.uid\r\n        )\r\n      );\r\n\r\n      if (matchedCheckout) {\r\n        const itemDetails = matchedCheckout.items.find(\r\n          (item) => item.productName === product.productName\r\n        );\r\n        const productPrice = itemDetails.productPrice || 0;\r\n        const serverFee = productPrice * 0.15; // Calculate server fee (15% of price)\r\n        const profit = productPrice * 0.85; // Calculate profit (85% of price)\r\n\r\n        setSelectedProduct({\r\n          ...itemDetails,\r\n          paymentId: matchedCheckout.paymentId,\r\n          serverFee: serverFee,\r\n          profit: profit,\r\n          address: matchedCheckout.address || \"N/A\",\r\n          region: matchedCheckout.region || \"N/A\",\r\n          zipCode: matchedCheckout.zipCode || \"N/A\",\r\n          city: matchedCheckout.city || \"N/A\",\r\n          country: matchedCheckout.country || \"N/A\",\r\n        });\r\n        setShowModal(true);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching checkouts: \", error);\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n      <HeaderSwitcher />\r\n      <h2>My Orders</h2>\r\n      <div className=\"table-container\">\r\n        {sellerOrders.length > 0 ? (\r\n          <Table striped bordered hover className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Server Fee</th>\r\n                <th>Profit</th>\r\n                <th>Status</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {sellerOrders.map((order, index) =>\r\n                order.items.map((item, itemIndex) => (\r\n                  <tr key={itemIndex}>\r\n                    <td\r\n                      onClick={() => handleProductClick(item)}\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      {item.productName}\r\n                    </td>\r\n                    <td>{item.productPrice.toFixed(2)}</td>\r\n                    <td>{(item.productPrice * 0.15).toFixed(2)}</td> {/* Server Fee */}\r\n                    <td>{(item.productPrice * 0.85).toFixed(2)}</td> {/* Profit */}\r\n                    <td>\r\n                      <select\r\n                        value={order.status}\r\n                        onChange={(e) => handleStatusChange(order.id, e.target.value)}\r\n                      >\r\n                        <option value=\"not done\">Not Done</option>\r\n                        <option value=\"in progress\">In Progress</option>\r\n                        <option value=\"delivered\">Delivered</option>\r\n                        <option value=\"complete\">Complete</option>\r\n                      </select>\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p>No orders found for this seller.</p>\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for displaying product details */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Product Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"modal-content\">\r\n          {selectedProduct ? (\r\n            <>\r\n              <p>\r\n                <strong>Name:</strong> {selectedProduct.productName || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Description:</strong>{\" \"}\r\n                {selectedProduct.productDescription || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Price:</strong>{\" \"}\r\n                {selectedProduct.productPrice\r\n                  ? selectedProduct.productPrice.toFixed(2)\r\n                  : \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Payment ID:</strong> {selectedProduct.paymentId || \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Server Fee:</strong>{\" \"}\r\n                {selectedProduct.serverFee\r\n                  ? selectedProduct.serverFee.toFixed(2)\r\n                  : \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Profit:</strong>{\" \"}\r\n                {selectedProduct.profit\r\n                  ? selectedProduct.profit.toFixed(2)\r\n                  : \"N/A\"}\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong> {selectedProduct.address}\r\n              </p>\r\n              <p>\r\n                <strong>Region:</strong> {selectedProduct.region}\r\n              </p>\r\n              <p>\r\n                <strong>Zip Code:</strong> {selectedProduct.zipCode}\r\n              </p>\r\n              <p>\r\n                <strong>City:</strong> {selectedProduct.city}\r\n              </p>\r\n              <p>\r\n                <strong>Country:</strong> {selectedProduct.country}\r\n              </p>\r\n            </>\r\n          ) : (\r\n            <p>No product details available.</p>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Orders;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button } from \"react-bootstrap\";\r\nimport { collection, getDocs, deleteDoc, doc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../firebase\";\r\nimport AdminHeader from \"./Adminheader\";\r\nimport Footer from \"./Footer\";\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst SellerQueries = () => {\r\n  const [queries, setQueries] = useState([]);\r\n  const [loading, setLoading] = useState(true); // State to track loading\r\n\r\n  // Fetch seller queries from Firestore\r\n  useEffect(() => {\r\n    const fetchQueries = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"sellerQueries\"));\r\n        const queriesArray = querySnapshot.docs.map(doc => ({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setQueries(queriesArray); // Store fetched queries in state\r\n      } catch (e) {\r\n        console.error(\"Error fetching queries:\", e);\r\n      } finally {\r\n        setLoading(false); // Set loading to false once data is fetched\r\n      }\r\n    };\r\n\r\n    fetchQueries();\r\n  }, []);\r\n\r\n  // Handle approving a seller query\r\n  const handleApprove = async (query) => {\r\n    try {\r\n      // Update user's role to 'seller' in the users collection\r\n      const userRef = doc(db, \"users\", query.userId);\r\n      await updateDoc(userRef, { role: \"seller\" });\r\n\r\n      // Remove the query from the 'sellerQueries' collection after approval\r\n      await deleteDoc(doc(db, \"sellerQueries\", query.id));\r\n\r\n      // Update the UI by removing the approved query\r\n      setQueries((prevQueries) => prevQueries.filter((q) => q.id !== query.id));\r\n      alert(\"User approved as seller.\");\r\n    } catch (e) {\r\n      console.error(\"Error approving seller:\", e);\r\n    }\r\n  };\r\n\r\n  // Handle declining a seller query\r\n  const handleDecline = async (queryId) => {\r\n    try {\r\n      // Remove the query from the 'sellerQueries' collection\r\n      await deleteDoc(doc(db, \"sellerQueries\", queryId));\r\n\r\n      // Update the UI by removing the declined query\r\n      setQueries((prevQueries) => prevQueries.filter((q) => q.id !== queryId));\r\n      alert(\"Seller query declined.\");\r\n    } catch (e) {\r\n      console.error(\"Error declining seller:\", e);\r\n    }\r\n  };\r\n\r\n  // Show the loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n      <AdminHeader />\r\n      <h2>Seller Queries</h2>\r\n      {queries.length > 0 ? (\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>Query ID</th>\r\n              <th>User Name</th>\r\n              <th>Reason</th>\r\n              <th>Submitted At</th>\r\n              <th>ID Image</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {queries.map((query) => (\r\n              <tr key={query.id}>\r\n                <td>{query.id}</td>\r\n                <td>{query.userName}</td>\r\n                <td>{query.reason}</td>\r\n                <td>{new Date(query.submittedAt.seconds * 1000).toLocaleString()}</td>\r\n                <td>\r\n                  {query.imageUrl ? (\r\n                    <img\r\n                      src={query.imageUrl}\r\n                      alt=\"User ID\"\r\n                      style={{ width: \"100px\", height: \"100px\", objectFit: \"cover\" }}\r\n                    />\r\n                  ) : (\r\n                    \"No Image\"\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <Button\r\n                    variant=\"success\"\r\n                    onClick={() => handleApprove(query)}\r\n                  >\r\n                    Approve\r\n                  </Button>{\" \"}\r\n                  <Button\r\n                    variant=\"danger\"\r\n                    onClick={() => handleDecline(query.id)}\r\n                  >\r\n                    Decline\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      ) : (\r\n        <p>No seller queries found.</p>\r\n      )}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellerQueries;\r\n","import React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\nimport { db, storage } from \"../firebase\"; // Import Firebase database and storage configuration\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport Footer from \"./Footer\";\r\nimport HeaderSwitcher from \"./HeaderSwitcher\";\r\nimport LoadingPage from \"./Loadingpage\";\r\nconst BeSeller = () => {\r\n  // State variables for handling form inputs\r\n  const [reason, setReason] = useState(\"\");  // Reason for wanting to be a seller\r\n  const [image, setImage] = useState(null);  // Selected image file\r\n  const { user } = useUserAuth();  // Access current authenticated user\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n\r\n  // Handle image file selection\r\n  const handleImageChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);  // Set the selected image file\r\n    }\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();  // Prevent default form submission behavior\r\n\r\n    try {\r\n      let imageUrl = \"\";  // Initialize image URL\r\n\r\n      // Upload the image to Firebase Storage and get its URL\r\n      if (image) {\r\n        const imageRef = ref(storage, `sellerImages/${user.uid}_${image.name}`);\r\n        await uploadBytes(imageRef, image);  // Upload the image\r\n        imageUrl = await getDownloadURL(imageRef);  // Get the image URL\r\n      }\r\n\r\n      // Create a new document with seller query data\r\n      const sellerQuery = {\r\n        reason,\r\n        userId: user.uid,\r\n        userName: user.email,\r\n        submittedAt: new Date(),  // Current date and time\r\n        imageUrl,  // URL of the uploaded image\r\n      };\r\n\r\n      await addDoc(collection(db, \"sellerQueries\"), sellerQuery);  // Add document to Firestore\r\n      setReason(\"\");  // Clear the reason input field\r\n      setImage(null);  // Clear the image file\r\n      alert(\"Your request has been submitted.\");  // Notify user of successful submission\r\n    } catch (error) {\r\n      console.error(\"Error submitting request:\", error);  // Log any errors\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n  return (\r\n    <div className=\"main-content\" style={{marginTop: -70}}>\r\n      <HeaderSwitcher />  {/* Header component that switches based on user role */}\r\n      <h2>Become a Seller</h2>\r\n      <Form onSubmit={handleSubmit}>\r\n        {/* Form for submitting a seller request */}\r\n        <Form.Group controlId=\"reason\">\r\n          <Form.Label>Why do you want to be a seller?</Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={reason}\r\n            onChange={(e) => setReason(e.target.value)}\r\n            required  // Ensure this field is filled out\r\n          />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"image\">\r\n          <Form.Label>Upload ID Image</Form.Label>\r\n          <Form.Control type=\"file\" accept=\"image/*\" onChange={handleImageChange} required />\r\n        </Form.Group>\r\n        <Button variant=\"success\" type=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Footer />  {/* Footer component */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BeSeller;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Table, Button, Modal, Form } from \"react-bootstrap\";\r\nimport { useProductcontext } from \"../context/Productcontext\";\r\nimport { useUserAuth } from \"../context/UserAuthContext\";\r\nimport { db } from \"../firebase\";\r\nimport { collection, addDoc, query, where, getDocs } from \"firebase/firestore\"; // Import Firestore methods\r\nimport CustomerHeader from \"./Customerheader\"; // Import header component for customer\r\nimport HeaderSwitcher from \"./HeaderSwitcher\"; // Import component to switch headers\r\nimport LoadingPage from \"./Loadingpage\";\r\n\r\nconst CustomerOrders = () => {\r\n  // Access the orders and user data from context\r\n  const { orders } = useProductcontext(); // Get orders from the product context\r\n  const { user } = useUserAuth(); // Get authenticated user from context\r\n  \r\n  // State to hold customer orders and review data\r\n  const [customerOrders, setCustomerOrders] = useState([]); // Holds fetched orders for the customer\r\n  const [selectedProductForReview, setSelectedProductForReview] = useState(null); // Selected product to review\r\n  const [showReviewModal, setShowReviewModal] = useState(false); // Control visibility of review modal\r\n  const [reviewContent, setReviewContent] = useState(\"\"); // Content of the review\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n\r\n  // Fetch orders from Firestore when the component mounts or user changes\r\n  useEffect(() => {\r\n    const fetchOrders = async () => {\r\n      if (user && user.uid) {\r\n        try {\r\n          console.log(\"Fetching orders for user:\", user.uid); // Log the UID for debugging\r\n          \r\n          // Query Firestore for orders belonging to the logged-in user\r\n          const ordersQuery = query(\r\n            collection(db, \"checkout\"),\r\n            where(\"userId\", \"==\", user.uid) // Filter by the user's UID\r\n          );\r\n          const querySnapshot = await getDocs(ordersQuery);\r\n          \r\n          // Map the fetched documents to a more manageable format\r\n          const userOrders = querySnapshot.docs.map(doc => ({\r\n            id: doc.id,\r\n            ...doc.data(),\r\n          }));\r\n          console.log(\"Fetched Orders:\", userOrders); // Log fetched orders for debugging\r\n\r\n          setCustomerOrders(userOrders); // Save orders to state\r\n        } catch (error) {\r\n          console.error(\"Error fetching orders:\", error); // Log any errors during fetch\r\n        }\r\n      }\r\n    };\r\n    \r\n    fetchOrders(); // Call the fetch function when component mounts or user changes\r\n  }, [user]);\r\n\r\n  // Handle the review submission\r\n  const handleSubmitReview = async () => {\r\n    if (reviewContent.trim()) {\r\n      try {\r\n        // Ensure that a product name is available\r\n        if (!selectedProductForReview || !selectedProductForReview.productName) {\r\n          console.error(\"Product name is missing from the item:\", selectedProductForReview);\r\n          alert(\"Cannot submit review: Product name is missing.\");\r\n          return; // Exit if product name is missing\r\n        }\r\n\r\n        // Add the review to the Firestore collection\r\n        await addDoc(collection(db, \"reviews\"), {\r\n          productName: selectedProductForReview.productName, // Include product name in review\r\n          userId: user.uid, // Include user ID to track who wrote the review\r\n          content: reviewContent, // The actual review content\r\n          customerName: user.displayName || user.email, // Get the user's name or email\r\n          createdAt: new Date(), // Timestamp of the review\r\n        });\r\n        alert(\"Review submitted successfully!\"); // Notify user of success\r\n        setReviewContent(\"\"); // Clear review input field\r\n        setShowReviewModal(false); // Close the modal\r\n      } catch (error) {\r\n        console.error(\"Error submitting review:\", error); // Log errors during review submission\r\n      }\r\n    }\r\n  };\r\n\r\n  // Set the product to be reviewed and show the review modal\r\n  const handleLeaveReview = (item) => {\r\n    console.log(\"Selected item for review:\", item); // Log the selected item for debugging\r\n    if (!item.productName) {\r\n      console.error(\"Product name is missing from the item:\", item);\r\n      alert(\"Cannot leave a review for this product: Product name is missing.\");\r\n      return; // Exit if product name is missing\r\n    }\r\n\r\n    setSelectedProductForReview(item); // Set the product for review\r\n    setShowReviewModal(true); // Show the review modal\r\n  };\r\n  // Show loading page while data is being fetched\r\nif (loading) {\r\n  return <LoadingPage />;\r\n}\r\n\r\n  return (\r\n    <div className=\"main-content\" style={{ marginTop: -70}}>\r\n      <HeaderSwitcher /> {/* Switch header based on user context */}\r\n      <h2>My Orders</h2>\r\n      <div className=\"table-container\">\r\n        {/* Display orders in a table format */}\r\n        {customerOrders.length > 0 ? (\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Order ID</th>\r\n                <th>Product Name</th>\r\n                <th>Price</th>\r\n                <th>Status</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {customerOrders.map((order, orderIndex) =>\r\n                order.items.map((item, itemIndex) => (\r\n                  <tr key={`${order.id}-${item.productName || itemIndex}`}> {/* Key for each row */}\r\n                    <td>{order.id}</td>\r\n                    <td>{item.productName}</td>\r\n                    <td>{item.productPrice.toFixed(2)}</td>\r\n                    <td>{order.status}</td>\r\n                    \r\n                    <td>\r\n                      {/* Show 'Leave Review' button if the order is complete */}\r\n                      {order.status === \"complete\" && (\r\n                        <Button onClick={() => handleLeaveReview(item)}>\r\n                          Leave Review\r\n                        </Button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))\r\n              )}\r\n            </tbody>\r\n          </Table>\r\n        ) : (\r\n          <p>No orders found.</p> // Message if no orders are available\r\n        )}\r\n      </div>\r\n\r\n      {/* Modal for submitting a review */}\r\n      <Modal show={showReviewModal} onHide={() => setShowReviewModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Leave a Review for {selectedProductForReview ? selectedProductForReview.productName : \"Product\"}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"reviewContent\">\r\n              <Form.Label>Review</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={3}\r\n                value={reviewContent}\r\n                onChange={(e) => setReviewContent(e.target.value)}\r\n                placeholder=\"Write your review here...\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowReviewModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSubmitReview}>\r\n            Submit Review\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomerOrders;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport ReactImageMagnify from 'react-image-magnify';\r\nimport ReactImageZoom from 'react-image-zoom';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport LoadingPage from './Loadingpage';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Furnitures.css';  // Reusing the same CSS for consistent styling\r\n\r\nfunction AllProducts() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOption, setSortOption] = useState('default');\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const querySnapshot = await getDocs(collection(db, \"products\"));\r\n        const productsArray = querySnapshot.docs.map(doc => ({\r\n          productId: doc.id,\r\n          ...doc.data()\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error(\"Error fetching products:\", error);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let sortedProducts = [...filteredProducts];\r\n\r\n    if (sortOption === 'priceLowToHigh') {\r\n      sortedProducts.sort((a, b) => a.productPrice - b.productPrice);\r\n    } else if (sortOption === 'priceHighToLow') {\r\n      sortedProducts.sort((a, b) => b.productPrice - a.productPrice);\r\n    }\r\n\r\n    setFilteredProducts(sortedProducts);\r\n  }, [sortOption]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    setSearchTerm(value);\r\n    const filtered = products.filter(product =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to the cart.\");\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some(item => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert(\"This product is already in your cart.\");\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert(\"Please log in to add items to your wishlist.\");\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error(\"No product selected or product data is incomplete.\");\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, \"products\"), where(\"category\", \"==\", category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map(doc => ({\r\n        productId: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error(\"Error fetching similar products:\", error);\r\n    }\r\n  };\r\n  // Show loading page while data is being fetched\r\n  const [loading, setLoading] = useState(true); // New state\r\n\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{marginTop: -70}}>\r\n        <h2 className=\"text-center\">All Products</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            value={searchTerm}\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Dropdown */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select value={sortOption} onChange={handleSortChange} className=\"form-control\" style={{ maxWidth: '200px', margin: '0 auto' }}>\r\n            <option value=\"default\">Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img src={product.imageUrls[0]} alt={product.productName} style={{ width: '100%', height: 'auto' }} />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\"><strong>Price: ${product.productPrice}</strong></p>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || \"Unknown\"}</p>\r\n                    <button className=\"btn add-to-cart mb-2\" onClick={() => handleAddToCart(product)}>\r\n                      Add to Cart\r\n                    </button>\r\n                    <button className=\"btn view-details\" style={{ backgroundColor: '#ff8c00' }} onClick={() => handleShow(product)}>\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No products found.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <ReactImageMagnify\r\n                      {...{\r\n                        smallImage: {\r\n                          alt: selectedProduct.productName,\r\n                          isFluidWidth: true,\r\n                          src: url\r\n                        },\r\n                        largeImage: {\r\n                          src: url,\r\n                          width: 1200,\r\n                          height: 1200\r\n                        },\r\n                        enlargedImagePosition: \"beside\",\r\n                        isHintEnabled: true\r\n                      }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || \"Unknown\"}</p>\r\n            </div>\r\n\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                          className=\"btn view-details\"\r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleShow(product)}\r\n                          >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AllProducts;\r\n\r\n","import React, { useEffect, useState } from 'react';\r\nimport { db, auth } from '../firebase';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { Modal, Button, Carousel } from 'react-bootstrap';\r\nimport HeaderSwitcher from './HeaderSwitcher';\r\nimport Footer from './Footer';\r\nimport LoadingPage from './Loadingpage';\r\nimport { useCartContext } from '../context/Cartcontext';\r\nimport { useWishlistContext } from '../context/Wishlistcontext';\r\nimport '../css/Furnitures.css';\r\n\r\nfunction OtherProducts() {\r\n  const [products, setProducts] = useState([]);\r\n  const [filteredProducts, setFilteredProducts] = useState([]);\r\n  const [similarProducts, setSimilarProducts] = useState([]);\r\n  const [selectedProduct, setSelectedProduct] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const [sortOption, setSortOption] = useState('default');\r\n  const { cartItems, addToCart } = useCartContext();\r\n  const { addToWishlist } = useWishlistContext();\r\n  const currentUser = auth.currentUser;\r\n  const [loading, setLoading] = useState(true); // Loading state\r\n\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const q = query(collection(db, 'products'), where('category', '==', 'other'));\r\n        const querySnapshot = await getDocs(q);\r\n        const productsArray = querySnapshot.docs.map((doc) => ({\r\n          productId: doc.id,\r\n          ...doc.data(),\r\n        }));\r\n        setProducts(productsArray);\r\n        setFilteredProducts(productsArray);\r\n      } catch (error) {\r\n        console.error('Error fetching products:', error);\r\n      } finally {\r\n        setLoading(false); // Stop loading once data is fetched\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Sort products based on the selected sort option\r\n    const sortProducts = (products) => {\r\n      if (sortOption === 'priceLowToHigh') {\r\n        return [...products].sort((a, b) => a.productPrice - b.productPrice);\r\n      } else if (sortOption === 'priceHighToLow') {\r\n        return [...products].sort((a, b) => b.productPrice - a.productPrice);\r\n      }\r\n      return products; // Default sorting (no change)\r\n    };\r\n\r\n    setFilteredProducts(sortProducts(products));\r\n  }, [sortOption, products]);\r\n\r\n  const handleSearch = (event) => {\r\n    const value = event.target.value.toLowerCase();\r\n    const filtered = products.filter((product) =>\r\n      product.productName.toLowerCase().includes(value) ||\r\n      product.productDescription.toLowerCase().includes(value) ||\r\n      product.sellerUsername?.toLowerCase().includes(value)\r\n    );\r\n    setFilteredProducts(filtered);\r\n  };\r\n\r\n  const handleSortChange = (event) => {\r\n    setSortOption(event.target.value);\r\n  };\r\n\r\n  const handleShow = (product) => {\r\n    setSelectedProduct(product);\r\n    setShow(true);\r\n    fetchSimilarProducts(product.category);\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n\r\n  const handleAddToCart = (product) => {\r\n    if (!currentUser) {\r\n      alert('Please log in to add items to the cart.');\r\n      return;\r\n    }\r\n\r\n    const isAlreadyInCart = cartItems.some((item) => item.productId === product.productId);\r\n\r\n    if (isAlreadyInCart) {\r\n      alert('This product is already in your cart.');\r\n    } else {\r\n      addToCart({ ...product });\r\n    }\r\n  };\r\n\r\n  const handleAddToWishlist = () => {\r\n    if (!currentUser) {\r\n      alert('Please log in to add items to your wishlist.');\r\n      return;\r\n    }\r\n\r\n    if (selectedProduct) {\r\n      addToWishlist({ ...selectedProduct });\r\n      handleClose();\r\n    } else {\r\n      console.error('No product selected or product data is incomplete.');\r\n    }\r\n  };\r\n\r\n  const fetchSimilarProducts = async (category) => {\r\n    try {\r\n      const q = query(collection(db, 'products'), where('category', '==', category));\r\n      const querySnapshot = await getDocs(q);\r\n      const productsArray = querySnapshot.docs.map((doc) => ({\r\n        productId: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setSimilarProducts(productsArray);\r\n    } catch (error) {\r\n      console.error('Error fetching similar products:', error);\r\n    }\r\n  };\r\n\r\n  // Show loading page while data is being fetched\r\n  if (loading) {\r\n    return <LoadingPage />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <HeaderSwitcher />\r\n      <div className=\"main-content\" style={{ marginTop: -70 }}>\r\n        <h2 className=\"text-center\">Other Products</h2>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"search-bar text-center mb-4\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for products...\"\r\n            onChange={handleSearch}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '400px', margin: '0 auto' }}\r\n          />\r\n        </div>\r\n\r\n        {/* Sort Options */}\r\n        <div className=\"sort-options text-center mb-4\">\r\n          <select\r\n            value={sortOption}\r\n            onChange={handleSortChange}\r\n            className=\"form-control\"\r\n            style={{ maxWidth: '200px', margin: '0 auto' }}\r\n          >\r\n            <option value=\"default\">Sort by Price</option>\r\n            <option value=\"priceLowToHigh\">Price: Low to High</option>\r\n            <option value=\"priceHighToLow\">Price: High to Low</option>\r\n          </select>\r\n        </div>\r\n\r\n        {filteredProducts.length > 0 ? (\r\n          <div className=\"row justify-content-center\">\r\n            {filteredProducts.map((product, index) => (\r\n              <div className=\"col-md-4\" key={index}>\r\n                <div className=\"card text-center\">\r\n                  <div className=\"card-body\">\r\n                    {product.imageUrls && product.imageUrls[0] && (\r\n                      <img\r\n                        src={product.imageUrls[0]}\r\n                        alt={product.productName}\r\n                        style={{ width: '100%', height: 'auto' }}\r\n                      />\r\n                    )}\r\n                    <h5 className=\"card-title\">{product.productName}</h5>\r\n                    <p className=\"card-text\">\r\n                      <strong>Price: ${product.productPrice}</strong>\r\n                    </p>\r\n                    <p className=\"card-text\">{product.productDescription}</p>\r\n                    <p className=\"card-text\">Seller Username: {product.sellerUsername || 'Unknown'}</p>\r\n                    <button className=\"btn add-to-cart mb-2\" onClick={() => handleAddToCart(product)}>\r\n                      Add to Cart\r\n                    </button>\r\n                    <button\r\n                      className=\"btn view-details\"\r\n                      style={{ backgroundColor: '#ff8c00' }}\r\n                      onClick={() => handleShow(product)}\r\n                    >\r\n                      View Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <p>No products found in this category.</p>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n\r\n      {/* Modal for Product Details */}\r\n      {selectedProduct && (\r\n        <Modal show={show} onHide={handleClose} scrollable={true}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{selectedProduct.productName}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body style={{ maxHeight: '500px', overflowY: 'auto' }}>\r\n            {selectedProduct.imageUrls && selectedProduct.imageUrls.length > 0 && (\r\n              <Carousel>\r\n                {selectedProduct.imageUrls.map((url, index) => (\r\n                  <Carousel.Item key={index}>\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={url}\r\n                      alt={selectedProduct.productName}\r\n                      style={{ height: '300px', objectFit: 'cover', borderRadius: '5px' }}\r\n                    />\r\n                  </Carousel.Item>\r\n                ))}\r\n              </Carousel>\r\n            )}\r\n            <div className=\"product-details\">\r\n              <p className=\"product-price\">Price: ${selectedProduct.productPrice}</p>\r\n              <p>{selectedProduct.productDescription}</p>\r\n              <p className=\"product-description\">{selectedProduct.productDetailedDescription}</p>\r\n              <p className=\"product-seller-username\">Seller Username: {selectedProduct.sellerUsername || 'Unknown'}</p>\r\n            </div>\r\n\r\n            <div className=\"product-buttons\">\r\n              <Button variant=\"warning\" className=\"mb-3\" onClick={handleAddToWishlist}>\r\n                Add to Wishlist\r\n              </Button>\r\n              <Button variant=\"primary\" className=\"mb-3\" onClick={() => handleAddToCart(selectedProduct)}>\r\n                Add to Cart\r\n              </Button>\r\n              <Button variant=\"secondary\" className=\"mb-3\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </div>\r\n\r\n            {/* Similar Products */}\r\n            <div className=\"similar-products\">\r\n              <h5>Similar Products</h5>\r\n              <div className=\"row\">\r\n                {similarProducts.map((product, index) => (\r\n                  <div className=\"col-4\" key={index}>\r\n                    <div className=\"card text-center\">\r\n                      {product.imageUrls && product.imageUrls[0] && (\r\n                        <img\r\n                          src={product.imageUrls[0]}\r\n                          alt={product.productName}\r\n                          style={{ width: '100%', height: 'auto' }}\r\n                        />\r\n                      )}\r\n                      <div className=\"card-body\">\r\n                        <h6>{product.productName}</h6>\r\n                        <p>Price: ${product.productPrice}</p>\r\n                        <button\r\n                          className=\"btn view-details\"\r\n                          style={{ backgroundColor: '#ff8c00', color: 'white', width: '100%', marginTop: '10px' }}\r\n                          onClick={() => handleShow(product)}\r\n                        >\r\n                          View Details\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </Modal.Body>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OtherProducts;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Login from \"./components/Login\";\r\nimport Signup from \"./components/Signup\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport Furnitures from './components/Furnitures';\r\nimport Homewares from './components/Homewares';\r\nimport Cart from './components/Cart';\r\nimport Wishlist from './components/Wishlist';\r\nimport Electricalgoods from './components/Electricalgoods';\r\nimport { UserAuthContextProvider } from \"./context/UserAuthContext\";  \r\nimport { ProductContextProvider } from \"./context/Productcontext\";\r\nimport { CartContextProvider } from \"./context/Cartcontext\";\r\nimport { WishlistContextProvider } from './context/Wishlistcontext';\r\nimport { ReviewProvider } from './context/ReviewContext'; \r\nimport AboutUs from './components/AboutUs';\r\nimport ReturnAndRefundPolicy from './components/ReturnRefundPolicy';\r\nimport ContactUs from './components/ContactUs';\r\nimport Addproducts from './components/Addproducts';\r\nimport ProtectedRoute, { AdminRoute, SellerRoute, CustomerRoute } from \"./components/ProtectedRoute\";\r\nimport Checkout from './components/Checkout';\r\nimport ManageUsers from './components/ManageUsers';\r\nimport SellerDashboard from './components/SellerDashboard';\r\nimport ManageProducts from './components/ManageProduct';\r\nimport MyListings from './components/MyListing';\r\nimport Orders from './components/Orders';\r\nimport SellerQueries from './components/SellerQueries';\r\nimport BeSeller from './components/BeSeller';\r\nimport CustomerHeader from './components/Customerheader';\r\nimport CustomerOrders from './components/CustomerOrders'; \r\nimport AllProducts from './components/Allproducts';\r\nimport OtherProducts from './components/Otherproducts';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <UserAuthContextProvider>\r\n      <ProductContextProvider>\r\n        <CartContextProvider>\r\n          <WishlistContextProvider>\r\n            <ReviewProvider>\r\n        \r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n                <Route path=\"/aboutus\" element={<AboutUs />} />\r\n                <Route path=\"/login\" element={<Login />} />\r\n                <Route path=\"/signup\" element={<Signup />} />\r\n                <Route path=\"/customer\" element={<CustomerRoute><Dashboard /></CustomerRoute>} />\r\n                <Route path=\"/admin\" element={<AdminRoute><AdminDashboard /></AdminRoute>} />\r\n                <Route path=\"/Furnitures\" element={<Furnitures/>} />\r\n                <Route path=\"/Homewares\" element={<Homewares/>} />\r\n                <Route path=\"/Electricalgoods\" element={<Electricalgoods/>} />\r\n                <Route path=\"/Cart\" element={<Cart/>} />\r\n                <Route path=\"/return-refund-policy\" element={<ReturnAndRefundPolicy/>} />\r\n                <Route path=\"/contactus\" element={<ContactUs/>} />\r\n                <Route path=\"/Allproducts\" element={<AllProducts />} />\r\n                <Route path=\"/Otherproducts\" element={<OtherProducts />} />\r\n                <Route path=\"/addproduct\" element={<SellerRoute><Addproducts/></SellerRoute>} />\r\n                <Route path=\"/Wishlist\" element={<Wishlist/>} />\r\n                <Route path=\"/checkout\" element={<Checkout/>} />\r\n                <Route path=\"/manageusers\" element={<AdminRoute><ManageUsers/></AdminRoute>} />\r\n                <Route path=\"/seller\" element={<SellerRoute><SellerDashboard/></SellerRoute>}/>\r\n                <Route path=\"/manageproduct\" element={<AdminRoute><ManageProducts/></AdminRoute>}/>\r\n                <Route path=\"/mylistings\" element={<SellerRoute><MyListings/></SellerRoute>}/>\r\n                <Route path=\"/orders\" element={<SellerRoute><Orders/></SellerRoute>}/>\r\n                <Route path=\"/sellerqueries\" element={<AdminRoute><SellerQueries/></AdminRoute>}/>\r\n                <Route path=\"/beseller\" element={<CustomerRoute><BeSeller/></CustomerRoute>}/>\r\n                <Route path=\"/customer-orders\" element={<CustomerOrders />} /> \r\n\r\n              </Routes>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        </ReviewProvider>\r\n        </WishlistContextProvider>\r\n        </CartContextProvider>\r\n      </ProductContextProvider>\r\n    </UserAuthContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport App from './App';  // Correct import statement for App component\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
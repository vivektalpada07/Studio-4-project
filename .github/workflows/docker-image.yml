name: Build and Deploy Docker Image
 
on:
  push:
    branches:
      - main  # Trigger the action on pushes to the main branch
  pull_request:
    branches:
      - main  # Trigger the action on pull requests to the main branch
 
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
 
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3
 
      # Harmless GitHub automation testing step
      - name: Test GitHub Actions
        run: echo "Hello, GitHub Actions! Workflow is running successfully."
 
      # Set up Docker Buildx (to build multi-platform images if needed)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
 
      # Cache Docker layers to speed up the build process
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
 
      # Build the Docker image
      - name: Build Docker image
        run: |
          # Clean npm cache to avoid stale dependencies
          npm cache clean --force
          # Install dependencies with --legacy-peer-deps to avoid peer dependency conflicts
          npm install --legacy-peer-deps
 
          # Build the Docker image
          docker build --file Dockerfile --tag my-react-app:latest .
 
      # Log in to Docker Hub (or other Docker registry) to push the image
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
 
      # Push the Docker image to the registry
      - name: Push Docker image
        run: |
          docker tag my-react-app:latest ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/my-react-app:latest
 
      # Install sshpass for deployment
      - name: Install sshpass
        run: sudo apt-get install -y sshpass
 
      # SSH into the server and pull the Docker image
      - name: Deploy Docker container on server
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USER@$SSH_HOST << EOF
            # Log in to Docker registry
            echo "$SSH_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

            # Pull the latest Docker image
            docker pull $DOCKER_USERNAME/my-react-app:latest

            # Stop and remove any existing container
            docker stop my-react-app || true
            docker rm my-react-app || true

            # Run the container
            docker run -d --name my-react-app -p 5555:5555 $DOCKER_USERNAME/my-react-app:latest
          EOF
